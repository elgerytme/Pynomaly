apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pynomaly.fullname" . }}
  labels:
    {{- include "pynomaly.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pynomaly.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "pynomaly.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pynomaly.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry | default "ghcr.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            - name: PYNOMALY_ENVIRONMENT
              value: {{ .Values.environment }}
            - name: PYNOMALY_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "pynomaly.fullname" . }}-secret
                  key: database-url
            - name: PYNOMALY_REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "pynomaly.fullname" . }}-secret
                  key: redis-url
            - name: PYNOMALY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "pynomaly.fullname" . }}-secret
                  key: secret-key
            - name: PYNOMALY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "pynomaly.fullname" . }}-secret
                  key: jwt-secret
            - name: PYNOMALY_LOG_LEVEL
              value: {{ .Values.config.app.log_level }}
            - name: PYNOMALY_WORKERS
              value: {{ .Values.config.app.workers | quote }}
            - name: PYNOMALY_MAX_CONNECTIONS
              value: {{ .Values.config.app.max_connections | quote }}
            - name: PYNOMALY_CORS_ORIGINS
              value: {{ join "," .Values.config.security.cors_origins }}
          envFrom:
            - configMapRef:
                name: {{ include "pynomaly.fullname" . }}-config
          {{- if .Values.healthChecks.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthChecks.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthChecks.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthChecks.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.healthChecks.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthChecks.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.healthChecks.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.healthChecks.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-log
              mountPath: /var/log
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-log
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "pynomaly.fullname" . }}-data
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}