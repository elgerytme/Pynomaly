apiVersion: v1
kind: Service
metadata:
  name: pynomaly-api
  namespace: pynomaly
  labels:
    app: pynomaly-api
spec:
  selector:
    app: pynomaly-api
  ports:
    - name: http
      port: 8000
      targetPort: 8000
    - name: metrics
      port: 9090
      targetPort: 9090
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pynomaly-api
  namespace: pynomaly
  labels:
    app: pynomaly-api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pynomaly-api
  template:
    metadata:
      labels:
        app: pynomaly-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: pynomaly-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: api
          image: pynomaly/api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 9090
              name: metrics
          env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: redis-url
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: environment
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: log-level
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pynomaly-secrets
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pynomaly-secrets
                  key: redis-password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: pynomaly-secrets
                  key: secret-key
            - name: API_KEYS
              valueFrom:
                secretKeyRef:
                  name: pynomaly-secrets
                  key: api-keys
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: pynomaly-monitoring-secrets
                  key: sentry-dsn
                  optional: true
          volumeMounts:
            - name: temp-storage
              mountPath: /tmp
            - name: logs
              mountPath: /app/logs
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: temp-storage
          emptyDir: {}
        - name: logs
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - pynomaly-api
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-api
  namespace: pynomaly
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pynomaly-api-pdb
  namespace: pynomaly
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: pynomaly-api