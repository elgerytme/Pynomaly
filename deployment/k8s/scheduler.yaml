apiVersion: v1
kind: Service
metadata:
  name: pynomaly-scheduler
  namespace: pynomaly
  labels:
    app: pynomaly-scheduler
spec:
  selector:
    app: pynomaly-scheduler
  ports:
    - name: metrics
      port: 9090
      targetPort: 9090
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pynomaly-scheduler
  namespace: pynomaly
  labels:
    app: pynomaly-scheduler
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pynomaly-scheduler
  template:
    metadata:
      labels:
        app: pynomaly-scheduler
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: pynomaly-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: scheduler
          image: pynomaly/scheduler:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9090
              name: metrics
          env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: database-url
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: redis-url
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: redis-url
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: environment
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: pynomaly-config
                  key: log-level
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pynomaly-secrets
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pynomaly-secrets
                  key: redis-password
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: logs
              mountPath: /app/logs
          livenessProbe:
            exec:
              command:
                - celery
                - -A
                - pynomaly.infrastructure.scheduler
                - inspect
                - ping
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - celery
                - -A
                - pynomaly.infrastructure.scheduler
                - inspect
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: logs
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - pynomaly-scheduler
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-scheduler
  namespace: pynomaly
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pynomaly-scheduler-pdb
  namespace: pynomaly
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: pynomaly-scheduler