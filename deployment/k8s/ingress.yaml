apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pynomaly-ingress
  namespace: pynomaly
  labels:
    app: pynomaly
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/limit-connections: "20"
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';";
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - api.pynomaly.com
        - pynomaly.com
      secretName: pynomaly-tls
  rules:
    - host: api.pynomaly.com
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: pynomaly-api
                port:
                  number: 8000
          - path: /docs
            pathType: Prefix
            backend:
              service:
                name: pynomaly-api
                port:
                  number: 8000
          - path: /redoc
            pathType: Prefix
            backend:
              service:
                name: pynomaly-api
                port:
                  number: 8000
    - host: pynomaly.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pynomaly-api
                port:
                  number: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pynomaly-monitoring-ingress
  namespace: pynomaly-monitoring
  labels:
    app: pynomaly-monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "Pynomaly Monitoring - Authentication Required"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - monitoring.pynomaly.com
        - grafana.pynomaly.com
        - prometheus.pynomaly.com
      secretName: pynomaly-monitoring-tls
  rules:
    - host: monitoring.pynomaly.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pynomaly-monitoring
                port:
                  number: 9090
    - host: grafana.pynomaly.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
    - host: prometheus.pynomaly.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: pynomaly-monitoring
type: Opaque
data:
  # htpasswd -nb admin <password> | base64
  auth: YWRtaW46JGFwcjEkSDY1d3VBM1okMDkyR3QvQVBKTGdnOGtpaHVGOGwuMQ==  # admin:monitoring123