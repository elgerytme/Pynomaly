# Production Alert Rules for Pynomaly
groups:
  - name: pynomaly.rules
    rules:
      # High-level service health
      - alert: PynomAlyServiceDown
        expr: up{job="pynomaly-api"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "Pynomaly API service is down"
          description: "Pynomaly API service has been down for more than 30 seconds."

      # API Response Time
      - alert: PynomAlyHighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="pynomaly-api"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High API response time"
          description: "95th percentile response time is {{ $value }}s for more than 5 minutes."

      # Error Rate
      - alert: PynomAlyHighErrorRate
        expr: rate(http_requests_total{job="pynomaly-api",status=~"5.."}[5m]) / rate(http_requests_total{job="pynomaly-api"}[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate"
          description: "Error rate is {{ $value | humanizePercentage }} for more than 5 minutes."

      # CPU Usage
      - alert: PynomAlyHighCPUUsage
        expr: rate(process_cpu_seconds_total{job="pynomaly-api"}[5m]) * 100 > 80
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value | humanizePercentage }} for more than 10 minutes."

      # Memory Usage
      - alert: PynomAlyHighMemoryUsage
        expr: (process_resident_memory_bytes{job="pynomaly-api"} / 1024 / 1024) > 1024
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}MB for more than 10 minutes."

      # Database Connection Pool
      - alert: PynomAlyDatabaseConnectionPoolHigh
        expr: database_connection_pool_active{job="pynomaly-api"} / database_connection_pool_size{job="pynomaly-api"} > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Database connection pool usage high"
          description: "Database connection pool is {{ $value | humanizePercentage }} full."

      # Failed Login Attempts
      - alert: PynomAlyHighFailedLoginAttempts
        expr: increase(failed_login_attempts_total{job="pynomaly-api"}[5m]) > 10
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "High number of failed login attempts"
          description: "{{ $value }} failed login attempts in the last 5 minutes."

      # Security Alert
      - alert: PynomAlySecurityAlert
        expr: increase(security_events_total{job="pynomaly-api",severity="critical"}[1m]) > 0
        for: 0s
        labels:
          severity: critical
        annotations:
          summary: "Critical security event detected"
          description: "{{ $value }} critical security events detected."

  - name: infrastructure.rules
    rules:
      # PostgreSQL
      - alert: PostgreSQLDown
        expr: up{job="postgres"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database has been down for more than 30 seconds."

      - alert: PostgreSQLHighConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "PostgreSQL high connection usage"
          description: "PostgreSQL is using {{ $value | humanizePercentage }} of available connections."

      # Redis
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "Redis is down"
          description: "Redis cache has been down for more than 30 seconds."

      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Redis high memory usage"
          description: "Redis is using {{ $value | humanizePercentage }} of available memory."

      # NGINX
      - alert: NginxDown
        expr: up{job="nginx"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "NGINX is down"
          description: "NGINX reverse proxy has been down for more than 30 seconds."

      - alert: NginxHighResponseTime
        expr: histogram_quantile(0.95, rate(nginx_http_request_duration_seconds_bucket[5m])) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "NGINX high response time"
          description: "NGINX 95th percentile response time is {{ $value }}s."

      # System Resources
      - alert: HostHighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Host high CPU usage"
          description: "Host {{ $labels.instance }} CPU usage is {{ $value | humanizePercentage }}."

      - alert: HostHighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 80
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Host high memory usage"
          description: "Host {{ $labels.instance }} memory usage is {{ $value | humanizePercentage }}."

      - alert: HostHighDiskUsage
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 80
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Host high disk usage"
          description: "Host {{ $labels.instance }} disk usage is {{ $value | humanizePercentage }}."

      # SSL Certificate Expiration
      - alert: SSLCertificateExpiringSoon
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30
        for: 1h
        labels:
          severity: warning
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate for {{ $labels.instance }} expires in {{ $value | humanizeDuration }}."

      - alert: SSLCertificateExpired
        expr: probe_ssl_earliest_cert_expiry - time() <= 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "SSL certificate expired"
          description: "SSL certificate for {{ $labels.instance }} has expired."
