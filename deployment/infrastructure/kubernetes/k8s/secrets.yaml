apiVersion: v1
kind: Secret
metadata:
  name: pynomaly-secrets
  namespace: pynomaly-production
  labels:
    app: pynomaly
    component: secrets
type: Opaque
data:
  # Note: These are base64 encoded values
  # In production, use sealed secrets or external secret management
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQta2V5LWNoYW5nZS10aGlz  # your-super-secret-key-change-this
  JWT_SECRET_KEY: eW91ci1qd3Qtc2VjcmV0LWtleQ==  # your-jwt-secret-key
  ENCRYPTION_KEY: eW91ci1lbmNyeXB0aW9uLWtleQ==  # your-encryption-key
  POSTGRES_PASSWORD: c2VjdXJlX3Bhc3N3b3Jk  # secure_password
  POSTGRES_USER: cHluYWxpbmVfdXNlcg==  # pynomaly_user
  MONGODB_PASSWORD: c2VjdXJlX3Bhc3N3b3Jk  # secure_password
  MONGODB_USER: cHluYWxpbmVfdXNlcg==  # pynomaly_user
  REDIS_PASSWORD: c2VjdXJlX3Bhc3N3b3Jk  # secure_password
  SMTP_PASSWORD: eW91ci1hcHAtcGFzc3dvcmQ=  # your-app-password
  S3_ACCESS_KEY: eW91ci1hY2Nlc3Mta2V5  # your-access-key
  S3_SECRET_KEY: eW91ci1zZWNyZXQta2V5  # your-secret-key

---
apiVersion: v1
kind: Secret
metadata:
  name: pynomaly-tls
  namespace: pynomaly-production
  labels:
    app: pynomaly
    component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key (base64 encoded)
  # Generate with: kubectl create secret tls pynomaly-tls --cert=fullchain.pem --key=privkey.pem
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Replace with actual certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Replace with actual private key
