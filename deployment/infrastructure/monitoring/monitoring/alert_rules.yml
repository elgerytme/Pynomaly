groups:
  - name: pynomaly.rules
    rules:
      # API Health Alerts
      - alert: Pynomaly_API_Down
        expr: up{job="pynomaly"} == 0
        for: 1m
        labels:
          severity: critical
          service: pynomaly
          component: api
        annotations:
          summary: "Pynomaly API is down"
          description: "The Pynomaly API has been down for more than 1 minute."
          runbook_url: "https://docs.pynomaly.com/runbooks/api-down"

      - alert: Pynomaly_High_Error_Rate
        expr: rate(http_requests_total{job="pynomaly",status=~"5.."}[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: api
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second for the last 5 minutes."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-error-rate"

      - alert: Pynomaly_High_Response_Time
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="pynomaly"}[5m])) > 1
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: api
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for the last 5 minutes."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-response-time"

      # Resource Alerts
      - alert: Pynomaly_High_Memory_Usage
        expr: process_resident_memory_bytes{job="pynomaly"} > 8e9
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: api
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value | humanizeBytes }} (>8GB) for the last 5 minutes."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-memory-usage"

      - alert: Pynomaly_High_CPU_Usage
        expr: rate(process_cpu_seconds_total{job="pynomaly"}[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: api
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value }}% for the last 5 minutes."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-cpu-usage"

      # Database Alerts
      - alert: PostgreSQL_Down
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          service: pynomaly
          component: database
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL has been down for more than 1 minute."
          runbook_url: "https://docs.pynomaly.com/runbooks/postgres-down"

      - alert: PostgreSQL_High_Connections
        expr: pg_stat_database_numbackends{datname="pynomaly_prod"} > 80
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: database
        annotations:
          summary: "High database connections"
          description: "Number of database connections is {{ $value }}."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-db-connections"

      # Redis Alerts
      - alert: Redis_Down
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          service: pynomaly
          component: redis
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 1 minute."
          runbook_url: "https://docs.pynomaly.com/runbooks/redis-down"

      - alert: Redis_High_Memory_Usage
        expr: redis_memory_used_bytes{job="redis"} / redis_memory_max_bytes{job="redis"} > 0.8
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: redis
        annotations:
          summary: "High Redis memory usage"
          description: "Redis memory usage is {{ $value | humanizePercentage }}."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-redis-memory"

      # Detection Performance Alerts
      - alert: Pynomaly_Low_Detection_Accuracy
        expr: pynomaly_detection_accuracy < 0.8
        for: 10m
        labels:
          severity: warning
          service: pynomaly
          component: detection
        annotations:
          summary: "Low detection accuracy"
          description: "Detection accuracy is {{ $value }} (<80%) for the last 10 minutes."
          runbook_url: "https://docs.pynomaly.com/runbooks/low-detection-accuracy"

      - alert: Pynomaly_Detection_Drift
        expr: |
          (
            pynomaly_detection_accuracy - 
            pynomaly_detection_accuracy offset 1h
          ) / pynomaly_detection_accuracy offset 1h < -0.1
        for: 15m
        labels:
          severity: warning
          service: pynomaly
          component: detection
        annotations:
          summary: "Detection performance drift detected"
          description: "Detection accuracy has decreased by more than 10% in the last hour."
          runbook_url: "https://docs.pynomaly.com/runbooks/detection-drift"

      # Disk Space Alerts
      - alert: High_Disk_Usage
        expr: |
          (
            node_filesystem_size_bytes{fstype!="tmpfs"} - 
            node_filesystem_free_bytes{fstype!="tmpfs"}
          ) / node_filesystem_size_bytes{fstype!="tmpfs"} > 0.8
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: system
        annotations:
          summary: "High disk usage detected"
          description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.mountpoint }}."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-disk-usage"

      # AutoML Alerts
      - alert: Pynomaly_AutoML_Long_Running_Job
        expr: pynomaly_automl_job_duration_seconds > 3600
        for: 0m
        labels:
          severity: warning
          service: pynomaly
          component: automl
        annotations:
          summary: "Long running AutoML job detected"
          description: "AutoML job {{ $labels.job_id }} has been running for {{ $value }}s (>1 hour)."
          runbook_url: "https://docs.pynomaly.com/runbooks/long-automl-job"

      - alert: Pynomaly_AutoML_High_Failure_Rate
        expr: |
          rate(pynomaly_automl_jobs_failed_total[5m]) / 
          rate(pynomaly_automl_jobs_total[5m]) > 0.2
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: automl
        annotations:
          summary: "High AutoML job failure rate"
          description: "AutoML job failure rate is {{ $value | humanizePercentage }}."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-automl-failure-rate"

      # Drift Detection Alerts
      - alert: Pynomaly_Data_Drift_Detected
        expr: pynomaly_drift_score > 0.5
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: drift_detection
        annotations:
          summary: "Data drift detected"
          description: "Data drift score is {{ $value }} (>0.5) for model {{ $labels.model_id }}."
          runbook_url: "https://docs.pynomaly.com/runbooks/data-drift"

      # Queue Alerts
      - alert: Pynomaly_High_Queue_Size
        expr: pynomaly_queue_size > 1000
        for: 5m
        labels:
          severity: warning
          service: pynomaly
          component: queue
        annotations:
          summary: "High queue size detected"
          description: "Queue size is {{ $value }} messages (>1000)."
          runbook_url: "https://docs.pynomaly.com/runbooks/high-queue-size"

      # Batch Processing Alerts
      - alert: Pynomaly_Batch_Processing_Stalled
        expr: |
          time() - pynomaly_last_batch_completion_timestamp > 7200
        for: 0m
        labels:
          severity: warning
          service: pynomaly
          component: batch_processing
        annotations:
          summary: "Batch processing stalled"
          description: "No batch processing completed in the last 2 hours."
          runbook_url: "https://docs.pynomaly.com/runbooks/batch-processing-stalled"

  # Alertmanager Configuration
  - name: alertmanager.rules
    rules:
      - alert: Alertmanager_Config_Reload_Failed
        expr: alertmanager_config_last_reload_successful == 0
        for: 5m
        labels:
          severity: warning
          service: alertmanager
        annotations:
          summary: "Alertmanager config reload failed"
          description: "Alertmanager configuration reload failed."

      - alert: Alertmanager_Notification_Failed
        expr: rate(alertmanager_notifications_failed_total[5m]) > 0
        for: 5m
        labels:
          severity: warning
          service: alertmanager
        annotations:
          summary: "Alertmanager notification failed"
          description: "Alertmanager notification failed to {{ $labels.integration }}."

  # Prometheus Rules
  - name: prometheus.rules
    rules:
      - alert: Prometheus_Config_Reload_Failed
        expr: prometheus_config_last_reload_successful == 0
        for: 5m
        labels:
          severity: warning
          service: prometheus
        annotations:
          summary: "Prometheus config reload failed"
          description: "Prometheus configuration reload failed."

      - alert: Prometheus_TSDB_Compaction_Failed
        expr: prometheus_tsdb_compactions_failed_total > 0
        for: 5m
        labels:
          severity: warning
          service: prometheus
        annotations:
          summary: "Prometheus TSDB compaction failed"
          description: "Prometheus TSDB compaction failed."

      - alert: Prometheus_Target_Down
        expr: up == 0
        for: 5m
        labels:
          severity: warning
          service: prometheus
        annotations:
          summary: "Prometheus target down"
          description: "Target {{ $labels.job }} is down."
