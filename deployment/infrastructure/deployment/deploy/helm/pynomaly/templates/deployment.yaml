apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pynomaly.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pynomaly.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
  annotations:
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "pynomaly.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        {{- include "pynomaly.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pynomaly.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if .Values.postgresql.enabled }}
            - name: DATABASE_HOST
              value: {{ include "pynomaly.postgresql.fullname" . }}
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: {{ .Values.postgresql.auth.database }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ include "pynomaly.redis.fullname" . }}-master
            - name: REDIS_PORT
              value: "6379"
            {{- end }}
          envFrom:
            {{- if .Values.configMap.create }}
            - configMapRef:
                name: {{ include "pynomaly.fullname" . }}-config
            {{- end }}
            {{- if .Values.secrets.create }}
            - secretRef:
                name: {{ include "pynomaly.fullname" . }}-secret
            {{- end }}
          {{- with .Values.healthChecks.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.healthChecks.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.healthChecks.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: storage
              mountPath: /app/storage
            {{- end }}
            - name: logs
              mountPath: /app/logs
            - name: temp
              mountPath: /app/temp
            - name: tmp
              mountPath: /tmp
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "pynomaly.fullname" . }}-storage
        {{- end }}
        - name: logs
          emptyDir:
            sizeLimit: 1Gi
        - name: temp
          emptyDir:
            sizeLimit: 500Mi
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}