# Production Worker Service Container
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies for ML workloads
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    pkg-config \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r pynomaly && useradd -r -g pynomaly pynomaly

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements/production.txt requirements.txt
COPY requirements/worker.txt worker-requirements.txt
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r worker-requirements.txt

# Copy application code
COPY src/ src/
COPY pyproject.toml .
COPY README.md .

# Install the application
RUN pip install -e .

# Create necessary directories with proper permissions
RUN mkdir -p /app/logs /app/data /app/models /app/tmp && \
    chown -R pynomaly:pynomaly /app

# Switch to non-root user
USER pynomaly

# Health check for worker service
HEALTHCHECK --interval=60s --timeout=30s --start-period=60s --retries=3 \
    CMD python -c "import pynomaly; print('Worker healthy')" || exit 1

# Default command for training worker
CMD ["python", "-m", "pynomaly.infrastructure.batch.batch_processor", "--worker-type", "training"]