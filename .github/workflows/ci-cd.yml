# CI/CD Pipeline for Pynomaly Anomaly Detection Platform
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pynomaly/anomaly-detection

jobs:
  # Code Quality and Security
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy bandit safety

      - name: Code formatting check
        run: |
          black --check --diff .
          isort --check-only --diff .

      - name: Lint code
        run: |
          flake8 src/ --max-line-length=100 --exclude=venv/,__pycache__/
          mypy src/ --ignore-missing-imports

      - name: Security scan
        run: |
          bandit -r src/ -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true

  # Unit and Integration Tests
  test:
    runs-on: ubuntu-latest
    needs: code-quality
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_DB: pynomaly_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-asyncio pytest-cov coverage

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:test@localhost:5432/pynomaly_test
          REDIS_URL: redis://localhost:6379
          ENVIRONMENT: testing
        run: |
          coverage run -m pytest tests/ -v --tb=short || true
          coverage report --show-missing || true

  # Build Docker Image
  build:
    runs-on: ubuntu-latest
    needs: [code-quality, test]
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: pynomaly/anomaly-detection:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max