name: Docker Security Scan

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'Dockerfile*'
      - 'requirements*.txt'
      - 'pyproject.toml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile*'
      - 'requirements*.txt'
      - 'pyproject.toml'
  schedule:
    - cron: '0 2 * * 1'  # Weekly security scan
  workflow_dispatch:

jobs:
  security-scan:
    name: Comprehensive Docker Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    strategy:
      matrix:
        dockerfile: 
          - "Dockerfile.production"
          - "deploy/docker/Dockerfile.hardened"
          - "deploy/docker/Dockerfile.production"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -f ${{ matrix.dockerfile }} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VERSION=${{ github.sha }} \
          --build-arg VCS_REF=${{ github.sha }} \
          --target production \
          -t anomaly_detection-test:${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'anomaly_detection-test:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Grype vulnerability scanner
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
        grype anomaly_detection-test:${{ github.sha }} -o json > grype-results.json

    - name: Run Syft SBOM generator
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
        syft anomaly_detection-test:${{ github.sha }} -o spdx-json > sbom.spdx.json

    - name: Docker Scout vulnerability scan
      uses: docker/scout-action@v1
      with:
        command: cves
        image: anomaly_detection-test:${{ github.sha }}
        only-severities: critical,high
        exit-code: true

    - name: Run Hadolint Dockerfile linting
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ${{ matrix.dockerfile }}
        format: sarif
        output-file: hadolint-results.sarif
        no-fail: true

    - name: Upload Hadolint scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'hadolint-results.sarif'

    - name: Run container structure test
      run: |
        curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
        chmod +x container-structure-test-linux-amd64
        sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
        container-structure-test test --image anomaly_detection-test:${{ github.sha }} --config .github/container-tests.yaml

    - name: Generate security report
      run: |
        echo "# Docker Security Scan Report" > security-report.md
        echo "**Image**: anomaly_detection-test:${{ github.sha }}" >> security-report.md
        echo "**Dockerfile**: ${{ matrix.dockerfile }}" >> security-report.md
        echo "**Scan Date**: $(date)" >> security-report.md
        echo "" >> security-report.md
        echo "## Trivy Results" >> security-report.md
        trivy image --format table anomaly_detection-test:${{ github.sha }} >> security-report.md
        echo "" >> security-report.md
        echo "## Image Details" >> security-report.md
        docker inspect anomaly_detection-test:${{ github.sha }} | jq '.[0].Config' >> security-report.md

    - name: Upload security artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results-${{ matrix.dockerfile }}-${{ github.sha }}
        path: |
          trivy-results.sarif
          grype-results.json
          sbom.spdx.json
          hadolint-results.sarif
          security-report.md
        retention-days: 30

    - name: Security scan summary
      run: |
        echo "## ðŸ”’ Docker Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Dockerfile**: \`${{ matrix.dockerfile }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Image**: \`anomaly_detection-test:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Tools Used:" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Trivy (Vulnerability scanner)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Grype (Vulnerability scanner)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Syft (SBOM generator)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Docker Scout (Docker security)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Hadolint (Dockerfile linter)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Container Structure Test" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Results available in:" >> $GITHUB_STEP_SUMMARY
        echo "- GitHub Security tab (SARIF reports)" >> $GITHUB_STEP_SUMMARY
        echo "- Action artifacts (detailed reports)" >> $GITHUB_STEP_SUMMARY
