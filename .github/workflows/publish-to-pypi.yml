name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI'
        required: false
        type: boolean
        default: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.test_pypi == 'true' && 'test-pypi' || 'pypi' }}
      url: ${{ github.event.inputs.test_pypi == 'true' && 'https://test.pypi.org/p/pynomaly' || 'https://pypi.org/p/pynomaly' }}
    
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for version detection

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Hatch
      run: |
        python -m pip install --upgrade pip
        pip install hatch

    - name: Validate package
      run: |
        # Basic import test
        python -c "
        import sys
        sys.path.insert(0, 'src')
        try:
            import pynomaly
            print(f'✅ Package version: {pynomaly.__version__}')
            from pynomaly.domain.entities import Detector
            print('✅ Core functionality validated')
        except Exception as e:
            print(f'❌ Validation failed: {e}')
            sys.exit(1)
        "

    - name: Build package
      run: |
        hatch build
        echo "📦 Package built successfully"
        ls -la dist/

    - name: Verify build
      run: |
        # Check that wheel and source distribution were created
        ls dist/*.whl dist/*.tar.gz
        
        # Basic validation of package contents
        python -m zipfile -l dist/*.whl | head -20
        
        echo "✅ Build verification complete"

    - name: Publish to Test PyPI
      if: github.event.inputs.test_pypi == 'true' || github.event_name == 'workflow_dispatch'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        print-hash: true
        verbose: true

    - name: Publish to PyPI
      if: github.event_name == 'release' && github.event.action == 'published'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true

    - name: Create release summary
      run: |
        echo "## 🚀 PyPI Publication Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Package Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Name**: pynomaly" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: $(python -c 'import sys; sys.path.insert(0, \"src\"); import pynomaly; print(pynomaly.__version__)')" >> $GITHUB_STEP_SUMMARY
        echo "- **Python**: >=3.11" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Features Included" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ 40+ anomaly detection algorithms (PyOD integration)" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ AutoML with Optuna optimization" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Clean Architecture with Domain-Driven Design" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ FastAPI REST API with 65+ endpoints" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Progressive Web Application" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Command-line interface with Typer" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ MLOps integration and experiment tracking" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Production-ready infrastructure" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ github.event.inputs.test_pypi }}" == "true" ]]; then
          echo "### 🧪 Test PyPI Publication" >> $GITHUB_STEP_SUMMARY
          echo "Package published to Test PyPI for validation." >> $GITHUB_STEP_SUMMARY
          echo "Install with: \`pip install -i https://test.pypi.org/simple/ pynomaly\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "### 🎉 Production PyPI Publication" >> $GITHUB_STEP_SUMMARY
          echo "Package is now available on PyPI!" >> $GITHUB_STEP_SUMMARY
          echo "Install with: \`pip install pynomaly\`" >> $GITHUB_STEP_SUMMARY
        fi