name: Todo-GitHub Issues Sync

on:
  # Trigger on todo list changes
  push:
    paths:
      - '.claude/todo_list.json'
      - 'scripts/automation/github_todo_sync.py'
      - 'config/github_sync_config.yaml'
  
  # Trigger on issues changes
  issues:
    types: [opened, edited, closed, reopened, labeled, unlabeled]
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      sync_direction:
        description: 'Sync direction'
        required: true
        default: 'bidirectional'
        type: choice
        options:
          - bidirectional
          - todo_to_github
          - github_to_todo
      force_sync:
        description: 'Force complete sync'
        required: false
        default: false
        type: boolean
  
  # Scheduled sync every 30 minutes
  schedule:
    - cron: '*/30 * * * *'

jobs:
  sync-todos-github:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests pyyaml rich
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Set sync direction
        id: sync-direction
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "direction=${{ github.event.inputs.sync_direction }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "issues" ]; then
            echo "direction=github_to_todo" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "direction=todo_to_github" >> $GITHUB_OUTPUT
          else
            echo "direction=bidirectional" >> $GITHUB_OUTPUT
          fi
      
      - name: Check for GitHub token
        run: |
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "Error: GITHUB_TOKEN is required"
            exit 1
          fi
      
      - name: Run todo-GitHub sync
        id: sync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/automation/github_todo_sync.py \
            --action sync \
            --direction ${{ steps.sync-direction.outputs.direction }} \
            --output sync_report.json
        continue-on-error: true
      
      - name: Generate sync report
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/automation/github_todo_sync.py \
            --action report \
            --output detailed_sync_report.json
      
      - name: Upload sync reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sync-reports
          path: |
            sync_report.json
            detailed_sync_report.json
          retention-days: 30
      
      - name: Commit todo list changes (if any)
        if: success() && steps.sync-direction.outputs.direction != 'todo_to_github'
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add .claude/todo_list.json
            git commit -m "chore: sync todo list with GitHub issues
            
            ü§ñ Generated with Claude Code
            
            Co-Authored-By: Claude <noreply@anthropic.com>"
            git push
          else
            echo "No changes to commit"
          fi
      
      - name: Comment on issue (if triggered by issue)
        if: github.event_name == 'issues' && github.event.action != 'closed'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read sync report
            let reportContent = 'Sync completed successfully! üéâ';
            try {
              const report = JSON.parse(fs.readFileSync('sync_report.json', 'utf8'));
              if (report.todos_to_github && Object.keys(report.todos_to_github).length > 0) {
                const results = report.todos_to_github;
                reportContent = `
            ## üîÑ Todo-GitHub Sync Report
            
            This issue has been automatically synchronized with the todo list:
            
            - ‚úÖ **Created**: ${results.created || 0}
            - üîÑ **Updated**: ${results.updated || 0}
            - ‚è≠Ô∏è **Skipped**: ${results.skipped || 0}
            - ‚ùå **Errors**: ${results.errors || 0}
            
            The todo list and GitHub issues are now in sync! Any changes to this issue will be reflected in the project's todo list.
            
            ---
            *This comment was automatically generated by the Todo-GitHub sync workflow.*
                `;
              }
            } catch (error) {
              console.log('Could not read sync report:', error.message);
            }
            
            // Only comment on todo-labeled issues
            const labels = context.payload.issue.labels.map(l => l.name);
            if (labels.some(label => label.startsWith('todo:'))) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: reportContent
              });
            }
      
      - name: Handle sync failures
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'üö® Todo-GitHub Sync Failed';
            const body = `
            ## Sync Failure Report
            
            **Workflow**: \`${{ github.workflow }}\`
            **Run ID**: \`${{ github.run_id }}\`
            **Triggered by**: \`${{ github.event_name }}\`
            **Sync Direction**: \`${{ steps.sync-direction.outputs.direction }}\`
            
            The todo-GitHub synchronization failed. Please check the workflow logs for details.
            
            ### Troubleshooting Steps
            
            1. Check if the GITHUB_TOKEN has sufficient permissions
            2. Verify the todo list format is valid
            3. Ensure the sync configuration is correct
            4. Check for API rate limiting
            
            ### Links
            
            - [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [Todo Sync Configuration](config/github_sync_config.yaml)
            - [Sync Script](scripts/automation/github_todo_sync.py)
            
            ---
            *This issue was automatically created by the Todo-GitHub sync workflow.*
            `;
            
            // Create an issue for sync failures (but don't spam)
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'sync-failure,automated',
              state: 'open'
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['sync-failure', 'automated', 'bug']
              });
            }

  # Validate sync configuration
  validate-sync-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema
      
      - name: Validate sync configuration
        run: |
          python -c "
          import yaml
          import json
          
          # Load and validate configuration
          with open('config/github_sync_config.yaml', 'r') as f:
              config = yaml.safe_load(f)
          
          # Basic validation
          required_sections = ['sync', 'github', 'mapping']
          for section in required_sections:
              if section not in config:
                  raise ValueError(f'Missing required section: {section}')
          
          print('‚úÖ Sync configuration is valid')
          print(f'üìä Configuration sections: {list(config.keys())}')
          print(f'üîÑ Sync direction: {config[\"sync\"][\"direction\"]}')
          print(f'‚è∞ Auto sync interval: {config[\"sync\"][\"auto_sync_interval\"]}s')
          "

  # Security scan for sync automation
  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run security scan on sync script
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_YAML: true
          FILTER_REGEX_INCLUDE: |
            scripts/automation/github_todo_sync.py
            config/github_sync_config.yaml
            .github/workflows/todo-github-sync.yml
