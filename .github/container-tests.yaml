schemaVersion: 2.0.0

# Container Structure Tests for anomaly_detection Docker Images
# Validates security, configuration, and functionality

commandTests:
  - name: "Python is available and correct version"
    command: "python"
    args: ["--version"]
    expectedOutput: ["Python 3.11.*"]

  - name: "Application user exists"
    command: "id"
    args: ["65532"]
    exitCode: 0

  - name: "Non-root user"
    command: "whoami"
    excludedOutput: ["root"]

  - name: "Python packages installed"
    command: "python"
    args: ["-c", "import uvicorn, fastapi, pydantic"]
    exitCode: 0

  - name: "Security: No shell access"
    command: "which"
    args: ["sh"]
    exitCode: 1

fileExistenceTests:
  - name: "Application source exists"
    path: "/app/src"
    shouldExist: true
    isDirectory: true

  - name: "Config directory exists"
    path: "/app/config"
    shouldExist: true
    isDirectory: true

  - name: "Log directory exists"
    path: "/app/logs"
    shouldExist: true
    isDirectory: true

  - name: "Storage directory exists"
    path: "/app/storage"
    shouldExist: true
    isDirectory: true

  - name: "No package manager caches"
    path: "/var/lib/apt/lists"
    shouldExist: false

  - name: "No pip cache"
    path: "/root/.cache/pip"
    shouldExist: false

  - name: "Application entry point exists"
    path: "/app/src/anomaly_detection"
    shouldExist: true
    isDirectory: true

fileContentTests:
  - name: "Secure directory permissions - storage"
    path: "/app/storage"
    expectedContents: [".*"]
    permissions: "700"

  - name: "Secure directory permissions - logs"
    path: "/app/logs"
    expectedContents: [".*"]
    permissions: "700"

  - name: "Application readable"
    path: "/app/src"
    expectedContents: [".*"]
    permissions: "755"

metadataTest:
  exposedPorts: ["8000"]
  
  volumes: ["/app/storage", "/app/logs", "/app/config"]
  
  workdir: "/app"
  
  user: "65532"
  
  env:
    - key: "PYTHONDONTWRITEBYTECODE"
      value: "1"
    - key: "PYTHONUNBUFFERED"
      value: "1"
    - key: "ANOMALY_DETECTION_ENVIRONMENT"
      value: "production"
    - key: "PYTHONOPTIMIZE"
      value: "2"

licenseTests:
  - debian: false
  - files: ["/app/src/anomaly_detection"]
