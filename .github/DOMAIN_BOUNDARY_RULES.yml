# Domain Boundary Rules Configuration
# This file defines comprehensive domain boundary enforcement rules for the repository

metadata:
  version: "1.0.0"
  created: "2025-01-21"
  description: "Domain boundary enforcement rules for maintaining clean architecture"
  enforcement_level: "strict" # strict, moderate, lenient

# Core domain boundary rules
domain_rules:
  # Prevents cross-domain dependencies
  cross_domain_isolation:
    enabled: true
    severity: "error"
    description: "Domains must not directly reference other domain internals"
    violations:
      - "Direct imports between domain packages"
      - "Shared internal types between domains"
      - "Cross-domain entity references"
    allowed_exceptions:
      - "software.core.domain.abstractions.*"
      - "software.core.application.abstractions.*"
      - "shared.interfaces.*"

  # Single package development enforcement
  single_package_development:
    enabled: true
    severity: "error"
    description: "Only one package may be modified per commit/PR"
    scope: ["src/packages/**"]
    exceptions:
      - "Breaking changes with BREAKING_CHANGE_JUSTIFICATION.md"
      - "Cross-package interface updates"
      - "Security patches"
      - "Major version releases"
    
  # Domain-specific term enforcement
  domain_terminology:
    enabled: true
    severity: "warning"
    description: "Domain-specific terms should be in appropriate packages"
    auto_suggest_package: true
    confidence_threshold: 0.7

# Package structure enforcement
package_structure:
  required_directories:
    - "core/domain/entities"
    - "core/domain/services"
    - "core/application/services"
    - "infrastructure/adapters"
    - "tests/unit"
    - "tests/integration"
  
  required_files:
    - "README.md"
    - "pyproject.toml"
    - "core/__init__.py"
  
  forbidden_patterns:
    - "*.pyc"
    - "__pycache__"
    - ".DS_Store"
    - "*.log"

# Git hook configuration
git_hooks:
  pre_commit:
    enabled: true
    checks:
      - "domain_boundary_validation"
      - "single_package_development"
      - "new_domain_detection"
    auto_fix:
      enabled: true
      max_attempts: 3
      backup: true
  
  pre_push:
    enabled: true
    checks:
      - "comprehensive_domain_validation"
      - "test_coverage_check"
    block_on_violations: true
  
  post_commit:
    enabled: true
    actions:
      - "generate_compliance_report"
      - "update_domain_metrics"

# CI/CD integration
ci_cd:
  github_actions:
    workflow_file: ".github/workflows/domain-boundary-enforcement.yml"
    required_checks:
      - "domain-boundary-validation"
      - "single-package-development-check"
    
    # Automatic package creation for high-confidence domains
    auto_package_creation:
      enabled: true
      confidence_threshold: 0.8
      target_branch: "main"
      commit_message_template: |
        feat: Auto-create domain package for {domain_name}
        
        ðŸ¤– Automatically created package for detected domain: {domain_name}
        Confidence: {confidence}
        Detected concepts: {concepts}
        
        Generated by Domain Boundary Enforcement workflow
    
    # PR status checks
    pr_checks:
      require_domain_validation: true
      require_single_package: true
      block_on_high_confidence_new_domains: true
      auto_comment: true

# Domain detection configuration  
domain_detection:
  semantic_analysis:
    enabled: true
    confidence_thresholds:
      high: 0.8
      medium: 0.6
      low: 0.4
    
    # Custom domain patterns can be added here
    custom_patterns:
      company_specific_domain:
        keywords: ["custom", "specific", "terms"]
        patterns: ["\\bcustom_\\w+"]
        confidence_boost: 0.2
  
  new_domain_actions:
    high_confidence: "auto_create_package"     # â‰¥ 0.8
    medium_confidence: "create_github_issue"   # 0.6-0.8
    low_confidence: "log_for_review"          # 0.4-0.6

# Violation handling
violation_handling:
  auto_fix:
    enabled: true
    strategies:
      - "comment_out_violations"
      - "suggest_package_move"
      - "create_interface_abstraction"
    
    # Backup strategy
    backup:
      enabled: true
      location: ".domain_backups/"
      retention_days: 30
  
  escalation:
    # Escalate to human review after auto-fix attempts
    max_auto_fix_attempts: 3
    escalation_actions:
      - "create_github_issue"
      - "assign_to_architecture_team"
      - "block_pr_merge"

# Monitoring and reporting
monitoring:
  metrics:
    enabled: true
    collection_interval: "daily"
    metrics:
      - "domain_violation_count"
      - "new_domain_detection_rate" 
      - "package_health_scores"
      - "cross_domain_dependency_count"
      - "test_coverage_by_domain"
    
    storage:
      type: "json_files"
      location: "metrics/domain_compliance/"
  
  alerts:
    enabled: true
    channels:
      - "github_issues"
      - "slack_webhook" # Configure webhook URL in secrets
    
    conditions:
      high_violation_count:
        threshold: 50
        message: "High domain violation count detected: {count} violations"
      
      new_domain_burst:
        threshold: 5
        timeframe: "24h"
        message: "Multiple new domains detected in short timeframe"
      
      package_health_degradation:
        threshold: 0.7
        message: "Package health score below threshold: {score}"

# Developer tools configuration
developer_tools:
  cli_tool:
    enabled: true
    script: "scripts/domain_cli.py"
    commands:
      - "status"
      - "validate"
      - "suggest"
      - "create" 
      - "clean"
      - "monitor"
  
  vscode_extension:
    enabled: true
    features:
      - "domain_boundary_highlighting"
      - "violation_quick_fixes"
      - "intelligent_autocomplete"
      - "package_navigation"
  
  documentation:
    auto_generate: true
    formats: ["markdown", "html"]
    include_architecture_diagrams: true
    update_frequency: "on_change"

# Exception handling
exceptions:
  global_exceptions:
    # Files/patterns that are exempt from domain rules
    - "scripts/**/*"
    - "tests/fixtures/**/*"
    - "docs/**/*"
    - "*.md"
    - "pyproject.toml"
    - "requirements*.txt"
  
  temporary_exceptions:
    # Time-limited exceptions (automatically expire)
    - pattern: "src/packages/legacy_migration/**/*"
      expires: "2025-06-01"
      reason: "Legacy code migration in progress"
      tracking_issue: "#123"

# Package lifecycle management
package_lifecycle:
  creation:
    require_justification: true
    min_confidence_for_auto_creation: 0.8
    approval_required_for_low_confidence: true
    
    templates:
      default: "scripts/create_domain_package.py"
      custom_templates:
        microservice: "templates/microservice_package/"
        library: "templates/library_package/"
  
  deprecation:
    process:
      - "mark_as_deprecated"
      - "create_migration_guide"
      - "notify_stakeholders"
      - "schedule_removal"
    
    grace_period_days: 90
    require_migration_plan: true
  
  maintenance:
    health_checks:
      enabled: true
      frequency: "weekly"
      criteria:
        - "test_coverage > 80%"
        - "violations < 5"
        - "last_modified < 6_months"
    
    auto_cleanup:
      enabled: true
      actions:
        - "remove_empty_directories"
        - "fix_import_organization"
        - "update_documentation"

# Integration with external tools
integrations:
  static_analysis:
    sonarqube:
      enabled: false
      quality_gate: "domain_compliance"
    
    codeclimate:
      enabled: false
      checks: ["domain_boundaries", "architecture_compliance"]
  
  documentation_tools:
    sphinx:
      enabled: false
      theme: "domain_architecture"
    
    mkdocs:
      enabled: true
      plugins: ["domain_navigation", "architecture_diagrams"]

# Security considerations
security:
  sensitive_patterns:
    # Patterns that should never appear in domain code
    - "password"
    - "secret"
    - "api_key"
    - "private_key"
  
  access_control:
    # Define which teams can modify domain rules
    rule_modification_teams:
      - "architecture_team"
      - "platform_team"
    
    package_creation_permissions:
      auto_creation: "architecture_team"
      manual_creation: "all_developers"

# Compliance reporting
compliance:
  reports:
    daily_summary:
      enabled: true
      recipients: ["architecture@company.com"]
      format: "markdown"
    
    weekly_detailed:
      enabled: true
      recipients: ["architecture@company.com", "engineering-leads@company.com"]
      format: "html"
      include_metrics: true
    
    monthly_executive:
      enabled: true
      recipients: ["cto@company.com"]
      format: "pdf"
      include_trends: true
  
  audit_trail:
    enabled: true
    retention_days: 365
    include_automated_actions: true
    
    events_to_log:
      - "rule_violations"
      - "auto_package_creation"
      - "manual_overrides"
      - "configuration_changes"

# Performance optimization
performance:
  caching:
    enabled: true
    cache_duration: "1h"
    cache_location: ".domain_cache/"
  
  parallel_processing:
    enabled: true
    max_workers: 4
  
  incremental_analysis:
    enabled: true
    track_file_changes: true
    skip_unchanged_files: true