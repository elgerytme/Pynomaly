{
  "test_suite": "core_smoke_tests",
  "timestamp": "2025-07-08T15:37:02.274714",
  "environment": "minimal",
  "tests": [
    {
      "command": "python -c \"import pynomaly\"",
      "description": "Module import test",
      "success": true,
      "exit_code": 0,
      "stdout": "",
      "stderr": "2025-07-08 15:37:06.067858: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n2025-07-08 15:37:06.715298: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n",
      "duration_seconds": 6.770259618759155,
      "timestamp": "2025-07-08T15:37:09.044974"
    },
    {
      "command": "pynomaly --help",
      "description": "Main CLI help",
      "success": false,
      "exit_code": 1,
      "stdout": "                                                                               \n Usage: pynomaly [OPTIONS] COMMAND [ARGS]...                                   \n                                                                               \n Pynomaly - State-of-the-art anomaly detection CLI                             \n                                                                               \n                                                                               \n+- Options -------------------------------------------------------------------+\n| --verbose             -v        Enable verbose output                       |\n| --quiet               -q        Suppress output                             |\n| --install-completion            Install completion for the current shell.   |\n| --show-completion               Show completion for the current shell, to   |\n|                                 copy it or customize the installation.      |\n| --help                          Show this message and exit.                 |\n+-----------------------------------------------------------------------------+\n+- Commands ------------------------------------------------------------------+\n| version           Show version information.                                 |\n| settings          Manage application settings.                              |\n| status            Show system status.                                       |\n| generate-config   Generate configuration files for tests or experiments     |\n|                   from CLI options.                                         |\n| quickstart        Run interactive quickstart guide.                         |\n| auto              Autonomous anomaly detection (auto-configure and run)     |\n| automl            Advanced AutoML & hyperparameter optimization             |\n| config            Configuration management (capture, export, import)        |\n| detector          Manage anomaly detectors                                  |\n| dataset           Manage datasets                                           |\n| data              Data preprocessing (clean, transform, pipeline)           |\n| detect            Run anomaly detection                                     |\n| tdd               Test-Driven Development (TDD) management and enforcement  |\n| deep-learning     ",
      "stderr": "2025-07-08 15:37:11.356674: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n2025-07-08 15:37:11.984768: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n+--------------------- Traceback (most recent call last) ---------------------+\n| in _run_module_as_main:198                                                  |\n| +-------------------------------- locals ---------------------------------+ |\n| |   alter_argv = False                                                    | |\n| |         code = <code object <module> at 0x000002A5B70F8480, file        | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                line 1>                                                  | |\n| | main_globals = {                                                        | |\n| |                    '__name__': '__main__',                              | |\n| |                    '__doc__': None,                                     | |\n| |                    '__package__': '',                                   | |\n| |                    '__loader__': <zipimporter object                    | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                    '__spec__': ModuleSpec(name='__main__',              | |\n| |                loader=<zipimporter object                               | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                origin='C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\\u2026 | |\n| |                    '__annotations__': {},                               | |\n| |                    '__builtins__': <module 'builtins' (built-in)>,      | |\n| |                    '__file__':                                          | |\n| |                'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| |                    '__cached__':                                        | |\n| |                'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| |                    're': <module 're' from                              | |\n| |                'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| |                    ... +2                                               | |\n| |                }                                                        | |\n| |     mod_name = '__main__'                                               | |\n| |     mod_spec = ModuleSpec(name='__main__', loader=<zipimporter object   | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                origin='C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\\u2026 | |\n| +-------------------------------------------------------------------------+ |\n| in _run_code:88                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |       cached = 'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| |         code = <code object <module> at 0x000002A5B70F8480, file        | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                line 1>                                                  | |\n| |        fname = 'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| | init_globals = None                                                     | |\n| |       loader = <zipimporter object                                      | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |     mod_name = '__main__'                                               | |\n| |     mod_spec = ModuleSpec(name='__main__', loader=<zipimporter object   | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                origin='C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\\u2026 | |\n| |     pkg_name = ''                                                       | |\n| |  run_globals = {                                                        | |\n| |                    '__name__': '__main__',                              | |\n| |                    '__doc__': None,                                     | |\n| |                    '__package__': '',                                   | |\n| |                    '__loader__': <zipimporter object                    | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                    '__spec__': ModuleSpec(name='__main__',              | |\n| |                loader=<zipimporter object                               | |\n| |                \"C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Script\u2026 | |\n| |                origin='C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\\u2026 | |\n| |                    '__annotations__': {},                               | |\n| |                    '__builtins__': <module 'builtins' (built-in)>,      | |\n| |                    '__file__':                                          | |\n| |                'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| |                    '__cached__':                                        | |\n| |                'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| |                    're': <module 're' from                              | |\n| |                'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\u2026 | |\n| |                    ... +2                                               | |\n| |                }                                                        | |\n| |  script_name = None                                                     | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| in <module>:7                                                               |\n|                                                                             |\n|   4 from pynomaly.presentation.cli.app import app                           |\n|   5 if __name__ == '__main__':                                              |\n|   6     sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])    |\n| > 7     sys.exit(app())                                                     |\n|   8                                                                         |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | app = <typer.main.Typer object at 0x000002A6038E5290>                   | |\n| |  re = <module 're' from                                                 | |\n| |       'C:\\\\Users\\\\andre\\\\.pyenv\\\\pyenv-win\\\\versions\\\\3.11.4\\\\Lib\\\\re\\\u2026 | |\n| | sys = <module 'sys' (built-in)>                                         | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\typer\\mai |\n| n.py:341 in __call__                                                        |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\typer\\mai |\n| n.py:324 in __call__                                                        |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:1161 in __call__                                                       |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\typer\\cor |\n| e.py:757 in main                                                            |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\typer\\cor |\n| e.py:194 in _main                                                           |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:949 in make_context                                                    |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:1653 in parse_args                                                     |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:1417 in parse_args                                                     |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:2403 in handle_parse_result                                            |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:2365 in process_value                                                  |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\dec |\n| orators.py:550 in show_help                                                 |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:711 in get_help                                                        |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\click\\cor |\n| e.py:1334 in get_help                                                       |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\typer\\cor |\n| e.py:771 in format_help                                                     |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\typer\\ric |\n| h_utils.py:662 in rich_format_help                                          |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\typer\\ric |\n| h_utils.py:538 in _print_commands_panel                                     |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\rich\\cons |\n| ole.py:1692 in print                                                        |\n|                                                                             |\n|   1689                 overflow = \"ignore\"                                  |\n|   1690             crop = False                                             |\n|   1691         render_hooks = self._render_hooks[:]                         |\n| > 1692         with self:                                                   |\n|   1693             renderables = self._collect_renderables(                 |\n|   1694                 objects,                                             |\n|   1695                 sep,                                                 |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer_extend = <built-in method extend of list object at              | |\n| |                  0x000002A603B9EE80>                                    | |\n| |           crop = True                                                   | |\n| |          emoji = None                                                   | |\n| |            end = '\\n'                                                   | |\n| |         extend = <built-in method extend of list object at              | |\n| |                  0x000002A603BB8780>                                    | |\n| |         height = None                                                   | |\n| |      highlight = None                                                   | |\n| |        justify = None                                                   | |\n| |           line = [                                                      | |\n| |                      Segment(                                           | |\n| |                          '+-------------------------------------------\u2026 | |\n| |                          Style(dim=True)                                | |\n| |                      ),                                                 | |\n| |                      Segment('\\n')                                      | |\n| |                  ]                                                      | |\n| |         markup = None                                                   | |\n| | new_line_start = False                                                  | |\n| |   new_segments = [                                                      | |\n| |                      Segment('+-', Style(dim=True)),                    | |\n| |                      Segment(' Commands ', Style(dim=True)),            | |\n| |                      Segment(                                           | |\n| |                          '--------------------------------------------\u2026 | |\n| |                          Style(dim=True)                                | |\n| |                      ),                                                 | |\n| |                      Segment('-+', Style(dim=True)),                    | |\n| |                      Segment('\\n'),                                     | |\n| |                      Segment('|', Style(dim=True)),                     | |\n| |                      Segment(' ', Style()),                             | |\n| |                      Segment(                                           | |\n| |                          'version         ',                            | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(                                           | |\n| |                          ' ',                                           | |\n| |                          Style(                                         | |\n| |                              color=Color(                               | |\n| |                                  'cyan',                                | |\n| |                                  ColorType.STANDARD,                    | |\n| |                                  number=6                               | |\n| |                              ),                                         | |\n| |                              bold=True                                  | |\n| |                          )                                              | |\n| |                      ),                                                 | |\n| |                      Segment(' ', Style()),                             | |\n| |                      ... +209                                           | |\n| |                  ]                                                      | |\n| |        no_wrap = None                                                   | |\n| |        objects = (<rich.panel.Panel object at 0x000002A603B9F910>,)     | |\n| |       overflow = None                                                   | |\n| |         render = <bound method Console.render of <console width=79      | |\n| |                  None>>                                                 | |\n| |   render_hooks = []                                                     | |\n| | render_options = ConsoleOptions(                                        | |\n| |                      size=ConsoleDimensions(width=79, height=25),       | |\n| |                      legacy_windows=True,                               | |\n| |                      min_width=1,                                       | |\n| |                      max_width=79,                                      | |\n| |                      is_terminal=False,                                 | |\n| |                      encoding='cp1252',                                 | |\n| |                      max_height=25,                                     | |\n| |                      justify=None,                                      | |\n| |                      overflow=None,                                     | |\n| |                      no_wrap=None,                                      | |\n| |                      highlight=None,                                    | |\n| |                      markup=None,                                       | |\n| |                      height=None                                        | |\n| |                  )                                                      | |\n| |     renderable = <rich.panel.Panel object at 0x000002A603B9F910>        | |\n| |    renderables = [<rich.panel.Panel object at 0x000002A603B9F910>]      | |\n| |           self = <console width=79 None>                                | |\n| |            sep = ' '                                                    | |\n| |      soft_wrap = False                                                  | |\n| |          style = None                                                   | |\n| |          width = None                                                   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\rich\\cons |\n| ole.py:866 in __exit__                                                      |\n|                                                                             |\n|    863                                                                      |\n|    864     def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any |\n|    865         \"\"\"Exit buffer context.\"\"\"                                   |\n| >  866         self._exit_buffer()                                          |\n|    867                                                                      |\n|    868     def begin_capture(self) -> None:                                 |\n|    869         \"\"\"Begin capturing console output. Call :meth:`end_capture`  |\n|                                                                             |\n| +-------------- locals ---------------+                                     |\n| |  exc_type = None                    |                                     |\n| | exc_value = None                    |                                     |\n| |      self = <console width=79 None> |                                     |\n| | traceback = None                    |                                     |\n| +-------------------------------------+                                     |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\rich\\cons |\n| ole.py:824 in _exit_buffer                                                  |\n|                                                                             |\n|    821     def _exit_buffer(self) -> None:                                  |\n|    822         \"\"\"Leave buffer context, and render content if required.\"\"\"  |\n|    823         self._buffer_index -= 1                                      |\n| >  824         self._check_buffer()                                         |\n|    825                                                                      |\n|    826     def set_live(self, live: \"Live\") -> None:                        |\n|    827         \"\"\"Set Live instance. Used by Live context manager.          |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\rich\\cons |\n| ole.py:2033 in _check_buffer                                                |\n|                                                                             |\n|   2030             return                                                   |\n|   2031                                                                      |\n|   2032         try:                                                         |\n| > 2033             self._write_buffer()                                     |\n|   2034         except BrokenPipeError:                                      |\n|   2035             self.on_broken_pipe()                                    |\n|   2036                                                                      |\n|                                                                             |\n| +------------ locals ------------+                                          |\n| | self = <console width=79 None> |                                          |\n| +--------------------------------+                                          |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\rich\\cons |\n| ole.py:2069 in _write_buffer                                                |\n|                                                                             |\n|   2066                             if self.no_color and self._color_system: |\n|   2067                                 buffer = list(Segment.remove_color(b |\n|   2068                                                                      |\n| > 2069                             legacy_windows_render(buffer, LegacyWind |\n|   2070                         else:                                        |\n|   2071                             # Either a non-std stream on legacy Wind |\n|   2072                             text = self._render_buffer(self._buffer[ |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |                    buffer = [                                           | |\n| |                                 Segment('+-', Style(dim=True)),         | |\n| |                                 Segment(                                | |\n| |                                     ' Commands ',                       | |\n| |                                     Style(dim=True)                     | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     '---------------------------------\u2026 | |\n| |                                     Style(dim=True)                     | |\n| |                                 ),                                      | |\n| |                                 Segment('-+', Style(dim=True)),         | |\n| |                                 Segment('\\n'),                          | |\n| |                                 Segment('|', Style(dim=True)),          | |\n| |                                 Segment(' ', Style()),                  | |\n| |                                 Segment(                                | |\n| |                                     'version         ',                 | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         ),                              | |\n| |                                         bold=True                       | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(                                | |\n| |                                     ' ',                                | |\n| |                                     Style(                              | |\n| |                                         color=Color(                    | |\n| |                                             'cyan',                     | |\n| |                                             ColorType.STANDARD,         | |\n| |                                             number=6                    | |\n| |                                         ),                              | |\n| |                                         bold=True                       | |\n| |                                     )                                   | |\n| |                                 ),                                      | |\n| |                                 Segment(' ', Style()),                  | |\n| |                                 ... +209                                | |\n| |                             ]                                           | |\n| |                    fileno = 1                                           | |\n| |                      self = <console width=79 None>                     | |\n| | use_legacy_windows_render = True                                        | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\rich\\_win |\n| dows_renderer.py:19 in legacy_windows_render                                |\n|                                                                             |\n|   16             if style:                                                  |\n|   17                 term.write_styled(text, style)                         |\n|   18             else:                                                      |\n| > 19                 term.write_text(text)                                  |\n|   20         else:                                                          |\n|   21             control_codes: Sequence[ControlCode] = control             |\n|   22             for control_code in control_codes:                         |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| |  buffer = [                                                             | |\n| |               Segment('+-', Style(dim=True)),                           | |\n| |               Segment(' Commands ', Style(dim=True)),                   | |\n| |               Segment(                                                  | |\n| |                   '---------------------------------------------------\u2026 | |\n| |                   Style(dim=True)                                       | |\n| |               ),                                                        | |\n| |               Segment('-+', Style(dim=True)),                           | |\n| |               Segment('\\n'),                                            | |\n| |               Segment('|', Style(dim=True)),                            | |\n| |               Segment(' ', Style()),                                    | |\n| |               Segment(                                                  | |\n| |                   'version         ',                                   | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       ),                                                | |\n| |                       bold=True                                         | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(                                                  | |\n| |                   ' ',                                                  | |\n| |                   Style(                                                | |\n| |                       color=Color(                                      | |\n| |                           'cyan',                                       | |\n| |                           ColorType.STANDARD,                           | |\n| |                           number=6                                      | |\n| |                       ),                                                | |\n| |                       bold=True                                         | |\n| |                   )                                                     | |\n| |               ),                                                        | |\n| |               Segment(' ', Style()),                                    | |\n| |               ... +209                                                  | |\n| |           ]                                                             | |\n| | control = None                                                          | |\n| |   style = None                                                          | |\n| |    term = <rich._win32_console.LegacyWindowsTerm object at              | |\n| |           0x000002A603BAFF10>                                           | |\n| |    text = '\\U0001f9e0 Deep learning anomaly detection (PyTorch, TensorFlow, '   | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\rich\\_win |\n| 32_console.py:402 in write_text                                             |\n|                                                                             |\n|   399         Args:                                                         |\n|   400             text (str): The text to write to the console              |\n|   401         \"\"\"                                                           |\n| > 402         self.write(text)                                              |\n|   403         self.flush()                                                  |\n|   404                                                                       |\n|   405     def write_styled(self, text: str, style: Style) -> None:          |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | self = <rich._win32_console.LegacyWindowsTerm object at                 | |\n| |        0x000002A603BAFF10>                                              | |\n| | text = '\\U0001f9e0 Deep learning anomaly detection (PyTorch, TensorFlow, '      | |\n| +-------------------------------------------------------------------------+ |\n|                                                                             |\n| C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\encodings\\cp1252.py:19  |\n| in encode                                                                   |\n|                                                                             |\n|    16                                                                       |\n|    17 class IncrementalEncoder(codecs.IncrementalEncoder):                  |\n|    18     def encode(self, input, final=False):                             |\n| >  19         return codecs.charmap_encode(input,self.errors,encoding_table |\n|    20                                                                       |\n|    21 class IncrementalDecoder(codecs.IncrementalDecoder):                  |\n|    22     def decode(self, input, final=False):                             |\n|                                                                             |\n| +-------------------------------- locals ---------------------------------+ |\n| | final = False                                                           | |\n| | input = '\\U0001f9e0 Deep learning anomaly detection (PyTorch, TensorFlow, '     | |\n| |  self = <encodings.cp1252.IncrementalEncoder object at                  | |\n| |         0x000002A5B6C35150>                                             | |\n| +-------------------------------------------------------------------------+ |\n+-----------------------------------------------------------------------------+\nUnicodeEncodeError: 'charmap' codec can't encode character '\\U0001f9e0' in \nposition 0: character maps to <undefined>\n",
      "duration_seconds": 7.300400733947754,
      "timestamp": "2025-07-08T15:37:16.345375"
    },
    {
      "command": "pynomaly dataset --help",
      "description": "Dataset CLI help",
      "success": true,
      "exit_code": 0,
      "stdout": "                                                                               \n Usage: pynomaly dataset [OPTIONS] COMMAND [ARGS]...                           \n                                                                               \n Manage datasets                                                               \n                                                                               \n                                                                               \n+- Options -------------------------------------------------------------------+\n| --help          Show this message and exit.                                 |\n+-----------------------------------------------------------------------------+\n+- Commands ------------------------------------------------------------------+\n| list      List all datasets.                                                |\n| load      Load a dataset from file.                                         |\n| show      Show dataset details.                                             |\n| quality   Check dataset quality.                                            |\n| split     Split dataset into train and test sets.                           |\n| delete    Delete a dataset.                                                 |\n| export    Export dataset to file.                                           |\n+-----------------------------------------------------------------------------+\n\n",
      "stderr": "2025-07-08 15:37:18.608287: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n2025-07-08 15:37:19.249085: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n",
      "duration_seconds": 6.53995680809021,
      "timestamp": "2025-07-08T15:37:22.885332"
    },
    {
      "command": "pynomaly detector --help",
      "description": "Detector CLI help",
      "success": true,
      "exit_code": 0,
      "stdout": "                                                                               \n Usage: pynomaly detector [OPTIONS] COMMAND [ARGS]...                          \n                                                                               \n Manage anomaly detectors                                                      \n                                                                               \n                                                                               \n+- Options -------------------------------------------------------------------+\n| --help          Show this message and exit.                                 |\n+-----------------------------------------------------------------------------+\n+- Commands ------------------------------------------------------------------+\n| list         List all detectors.                                            |\n| create       Create a new detector.                                         |\n| show         Show detector details.                                         |\n| delete       Delete a detector.                                             |\n| algorithms   List available algorithms.                                     |\n| clone        Clone an existing detector.                                    |\n+-----------------------------------------------------------------------------+\n\n",
      "stderr": "2025-07-08 15:37:25.123931: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n2025-07-08 15:37:25.732634: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n",
      "duration_seconds": 6.840529441833496,
      "timestamp": "2025-07-08T15:37:29.725861"
    },
    {
      "command": "python -c \"\nimport pandas as pd\nimport numpy as np\nfrom pynomaly.domain.entities import Dataset\nfrom pynomaly.domain.value_objects import ContaminationRate\nfrom pynomaly.infrastructure.adapters.sklearn_adapter import SklearnAdapter\n\n# Create sample data with outliers\nnp.random.seed(42)\nnormal_data = np.random.normal(0, 1, (100, 2))\noutliers = np.random.uniform(-4, 4, (10, 2))\ndata = np.vstack([normal_data, outliers])\n\n# Create dataset\ndf = pd.DataFrame(data, columns=['feature1', 'feature2'])\ndataset = Dataset(name=\"Sample Data\", data=df)\n\n# Create detector using Pynomaly's clean architecture\ndetector = SklearnAdapter(\n    algorithm_name=\"IsolationForest\",\n    name=\"Basic Detector\",\n    contamination_rate=ContaminationRate(0.1),\n    random_state=42,\n    n_estimators=100\n)\n\n# Train detector\ndetector.fit(dataset)\n\n# Detect anomalies\nresult = detector.detect(dataset)\n\n# Results\nanomaly_count = len(result.anomalies)\nscores = [score.value for score in result.scores]\nprint(f\"Detected {anomaly_count} anomalies out of {len(data)} samples\")\nprint(f\"Anomaly scores range: {min(scores):.3f} to {max(scores):.3f}\")\nprint(f\"Detection completed in {result.execution_time_ms:.2f}ms\")\n\n# Assert results\nassert len(result.labels) == len(data), \"Labels length should match data length\"\nassert len(scores) == len(data), \"Scores length should match data length\"\nassert anomaly_count > 0, \"Should detect some anomalies\"\n\nprint(\"Example completed successfully!\")\n\"",
      "description": "Quick detection example from README",
      "success": true,
      "exit_code": 0,
      "stdout": "",
      "stderr": "",
      "duration_seconds": 0.04352593421936035,
      "timestamp": "2025-07-08T15:37:29.770389"
    },
    {
      "command": "pytest -q tests/unit/test_core_functionality.py",
      "description": "Core functionality pytest",
      "success": true,
      "exit_code": 0,
      "stdout": ".....                                                                    [100%]\n============================== warnings summary ===============================\n..\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323: 15 warnings\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n..\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\n..\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\fields.py:1062\n..\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\fields.py:1062\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\fields.py:1062: PydanticDeprecatedSince20: `min_items` is deprecated and will be removed, use `min_length` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warn('`min_items` is deprecated and will be removed, use `min_length` instead', DeprecationWarning)\n\n..\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\fields.py:1093\n..\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\fields.py:1093\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\pydantic\\fields.py:1093: PydanticDeprecatedSince20: Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'enum'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warn(\n\nunit/test_core_functionality.py::test_domain_imports\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\_pytest\\python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but unit/test_core_functionality.py::test_domain_imports returned <class 'bool'>.\n  Did you mean to use `assert` instead of `return`?\n  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.\n    warnings.warn(\n\nunit/test_core_functionality.py::test_application_imports\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\_pytest\\python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but unit/test_core_functionality.py::test_application_imports returned <class 'bool'>.\n  Did you mean to use `assert` instead of `return`?\n  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.\n    warnings.warn(\n\nunit/test_core_functionality.py::test_infrastructure_imports\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\_pytest\\python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but unit/test_core_functionality.py::test_infrastructure_imports returned <class 'bool'>.\n  Did you mean to use `assert` instead of `return`?\n  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.\n    warnings.warn(\n\nunit/test_core_functionality.py::test_basic_functionality\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\_pytest\\python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but unit/test_core_functionality.py::test_basic_functionality returned <class 'bool'>.\n  Did you mean to use `assert` instead of `return`?\n  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.\n    warnings.warn(\n\nunit/test_core_functionality.py::test_container_import\n  C:\\Users\\andre\\.pyenv\\pyenv-win\\versions\\3.11.4\\Lib\\site-packages\\_pytest\\python.py:161: PytestReturnNotNoneWarning: Test functions should return None, but unit/test_core_functionality.py::test_container_import returned <class 'bool'>.\n  Did you mean to use `assert` instead of `return`?\n  See https://docs.pytest.org/en/stable/how-to/assert.html#return-not-none for more information.\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n5 passed, 26 warnings in 0.47s\n",
      "stderr": "",
      "duration_seconds": 9.404030323028564,
      "timestamp": "2025-07-08T15:37:39.174419"
    }
  ],
  "summary": {
    "total_tests": 6,
    "successful_tests": 5,
    "failed_tests": 1,
    "success_rate": 0.8333333333333334,
    "total_duration_seconds": 36.89870285987854,
    "overall_success": false
  }
}