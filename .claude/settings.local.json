{
  "permissions": {
    "allow": [
      "*",
      "*:*",
      "*(*:*)",
      "Bash(*)",
      "LS(*)",
      "Grep(*)",
      "Sed(*)",
      "Awk(*)",
      "Find(*)",
      "Read(*)",
      "Write(*)",
      "Edit(*)",
      "MultiEdit(*)",
      "Glob(*)",
      "Pwd(*)",
      "Cd(*)",
      "Mkdir(*)",
      "Rmdir(*)",
      "Touch(*)",
      "Rm(*)",
      "Cp(*)",
      "Mv(*)",
      "Cat(*)",
      "Less(*)",
      "More(*)",
      "Head(*)",
      "Tail(*)",
      "Chmod(*)",
      "Chown(*)",
      "Sudo(*)",
      "Su(*)",
      "Tar(*)",
      "Gzip(*)",
      "Gunzip(*)",
      "Zip(*)",
      "Unzip(*)",
      "Ssh(*)",
      "Scp(*)",
      "Rsync(*)",
      "Wget(*)",
      "Curl(*)",
      "Ping(*)",
      "Traceroute(*)",
      "Netstat(*)",
      "Ifconfig(*)",
      "Ip(*)",
      "Ps(*)",
      "Top(*)",
      "Htop(*)",
      "Kill(*)",
      "Killall(*)",
      "Df(*)",
      "Du(*)",
      "Free(*)",
      "Man(*)",
      "Info(*)",
      "History(*)",
      "Alias(*)",
      "Uname(*)",
      "Whoami(*)",
      "Passwd(*)",
      "Mount(*)",
      "Umount(*)",
      "Crontab(*)",
      "At(*)",
      "Date(*)",
      "Cal(*)",
      "Echo(*)",
      "Sort(*)",
      "Uniq(*)",
      "Wc(*)",
      "Cut(*)",
      "Paste(*)",
      "Diff(*)",
      "NotebookRead(*)",
      "NotebookEdit(*)",
      "Task(*)",
      "TodoRead(*)",
      "TodoWrite(*)",
      "WebFetch(*)",
      "WebSearch(*)",
      "Bash(poetry --version)",
      "Bash(poetry init:*)",
      "Bash(poetry install:*)",
      "Bash(pip3 install:*)",
      "Bash(.venv/Scripts/python.exe:*)",
      "Bash(.venv/bin/pip:*)",
      "Bash(.venv/Scripts/pip:*)",
      "Bash(pytest:*)",
      "Bash(python -m pytest -v)",
      "Bash(python3 -m pytest -v)",
      "Bash(ls:*)",
      "Bash(source:*)",
      "Bash(python -m pytest -v --tb=short)",
      "Bash(.venv/Scripts/python -m pytest:*)",
      "Bash(grep:*)",
      "Bash(touch:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(python -m pytest tests/test_data_quality.py -xvs)",
      "Bash(./.venv/Scripts/python -m pytest tests/test_data_quality.py -xvs)",
      "Bash(./.venv/bin/python -m pytest tests/test_data_quality.py -xvs)",
      "Bash(python3 -m pytest tests/test_data_quality.py -xvs)",
      "Bash(python3 -m pip install:*)",
      "Bash(python3:*)",
      "Bash(python -m pytest --cov=src --cov-report=term-missing -v)",
      "Bash(sudo apt-get:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(chmod:*)",
      "Bash(ruff check:*)",
      "Bash(python -m pytest --version)",
      "Bash(pip install:*)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(git add:*)",
      "Bash(python scripts/code_quality_check.py:*)",
      "Bash(/usr/bin/python3 -m pip install:*)",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(python3 test:*)",
      "Bash(python:*)",
      "Bash(cp:*)",
      "Bash(pyright:*)",
      "Bash(pip3:*)",
      "Bash(black:*)",
      "Bash(sed:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(git commit:*)",
      "Bash(poetry env:*)",
      "Bash(rm:*)"
    ],
    "deny": [],
    "//": "This sets the default policy to 'allow' for any action that doesn't have a more specific rule below. This is the top-level 'allow all actions' setting.",
    "default_action": "allow",
    "shell": {
      "description": "Configuration for executing shell commands. This allows running any command, including all Linux utilities, series of commands, and pipes.",
      "//": "Explicitly allows chaining commands with operators like '&&' and ';'.",
      "allowed_commands": [
        "*"
      ],
      "allow_pipes": true,
      "allow_command_chaining": true
    },
    "terminal": {
      "description": "This provides full, unrestricted access to the terminal, mirroring the shell settings for maximum capability.",
      "//": "Another way to express 'allow all'. This ensures any request to use the terminal tool is approved.",
      "allowed_requests": "all"
    },
    "allowed_tools": {
      "description": "Controls which tools (like shell, filesystem access, etc.) can be used.",
      "//": "The wildcard '*' permits the use of all available tools without restriction.",
      "tools": [
        "*"
      ]
    }
  },
  "//": "Claude Code - Local Settings Override. WARNING: This is a highly permissive configuration that allows all actions. Use with extreme caution.",
  "version": "1.0",
  "autonomous_operation": {
    "enabled": true,
    "allow_file_creation": true,
    "allow_file_modification": true,
    "allow_file_deletion": false,
    "allow_bash_execution": true,
    "allow_network_access": true,
    "allow_package_installation": true,
    "allow_code_execution": true,
    "allow_test_execution": true,
    "allow_data_analysis": true,
    "allow_web_scraping": true,
    "allow_web_search": true,
    "allow_logging": true,
    "allow_error_handling": true,
    "allow_debugging": true,
    "allow_performance_monitoring": true,
    "allow_security_measures": true,
    "allow_input_validation": true,
    "allow_output_sanitization": true,
    "allow_secure_file_operations": true,
    "allow_code_formatting": true,
    "allow_code_refactoring": true,
    "allow_code_review": true,
    "allow_code_analysis": true,
    "allow_code_generation": true,
    "allow_code_completion": true,
    "allow_code_suggestions": true,
    "allow_code_snippets": true,
    "allow_code_examples": true,
    "allow_code_templates": true,
    "allow_code_comments": true,
    "allow_code_documentation": true,
    "allow_code_versioning": true,
    "allow_code_collaboration": true,
    "allow_code_testing": true,
    "allow_code_debugging": true,
    "allow_code_profiling": true,
    "allow_code_optimization": true
  },
  "logging_settings": {
    "enable_logging": true,
    "log_level": "DEBUG",
    "log_file_path": "/var/log/claude_operations.log",
    "log_format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  },
  "error_handling_settings": {
    "enable_error_handling": true,
    "log_errors": true,
    "send_error_reports": false,
    "retry_failed_operations": true,
    "max_retries": 3,
    "retry_delay_seconds": 5
  },
  "debugging_settings": {
    "enable_debugging": true,
    "debug_level": "VERBOSE",
    "debug_file_path": "/var/log/claude_debug.log",
    "debug_format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  },
  "performance_settings": {
    "enable_performance_monitoring": true,
    "monitoring_interval_seconds": 60,
    "performance_log_file_path": "/var/log/claude_performance.log",
    "performance_log_format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  },
  "development_settings": {
    "auto_format_code": true,
    "auto_run_tests": false,
    "verbose_logging": true,
    "performance_monitoring": true,
    "error_reporting": true,
    "debugging_enabled": true,
    "code_quality_checks": true,
    "security_checks": true,
    "input_validation": true,
    "output_sanitization": true,
    "secure_file_operations": true,
    "use_virtual_environment": true,
    "virtual_environment_path": ".venv",
    "package_management": {
      "use_pip": true,
      "pip_requirements_file": "requirements.txt",
      "pip_dev_requirements_file": "dev-requirements.txt",
      "pip_install_command": "pip install -r requirements.txt",
      "pip_dev_install_command": "pip install -r dev-requirements.txt"
    },
    "code_style": {
      "use_black": true,
      "black_config_file": "pyproject.toml",
      "use_flake8": true,
      "flake8_config_file": ".flake8",
      "use_mypy": true,
      "mypy_config_file": "mypy.ini"
    },
    "testing": {
      "use_pytest": true,
      "pytest_config_file": "pytest.ini",
      "run_tests_command": "pytest -v --tb=short",
      "coverage_enabled": true,
      "coverage_report_format": "html"
    },
    "documentation": {
      "use_sphinx": true,
      "sphinx_config_file": "conf.py",
      "generate_docs_command": "make html",
      "docs_output_directory": "docs/_build/html"
    },
    "version_control": {
      "use_git": true,
      "git_ignore_file": ".gitignore",
      "git_commit_message_template": "feat: {feature} - {description}",
      "git_branching_strategy": "main",
      "git_remote_origin": "origin"
    },
    "deployment": {
      "use_docker": true,
      "dockerfile_path": "Dockerfile",
      "docker_compose_file": "docker-compose.yml",
      "docker_build_command": "docker build -t myapp .",
      "docker_run_command": "docker run -d -p 8000:8000 myapp"
    },
    "ci_cd": {
      "use_github_actions": true,
      "github_actions_workflow_file": ".github/workflows/ci.yml",
      "ci_cd_enabled": true,
      "ci_cd_trigger_events": [
        "push",
        "pull_request"
      ],
      "ci_cd_jobs": [
        "build",
        "test",
        "deploy"
      ]
    }
  },
  "security_settings": {
    "validate_inputs": true,
    "sanitize_outputs": true,
    "secure_file_operations": true
  }
}