{
  "generated_at": "2025-06-24T19:42:50.721144",
  "kpis": {
    "total_tests": 50,
    "avg_execution_time": 23.29600501821352,
    "success_rate": 0.9406352368357914,
    "flakiness_score": 0.13672243205503606,
    "prediction_accuracy": 0.78,
    "optimization_opportunities": 5
  },
  "time_series": [
    {
      "date": "2025-05-26",
      "execution_time": 23.399247756112292,
      "memory_usage": 62.78213182722207,
      "success_rate": 0.941474486609152,
      "flakiness_score": 0.11594850186045305
    },
    {
      "date": "2025-05-27",
      "execution_time": 23.486213812261,
      "memory_usage": 62.23617222933338,
      "success_rate": 0.9298200821178216,
      "flakiness_score": 0.16234126400065038
    },
    {
      "date": "2025-05-28",
      "execution_time": 23.30563381761213,
      "memory_usage": 63.656941027946324,
      "success_rate": 0.9377779475377659,
      "flakiness_score": 0.12724919581615823
    },
    {
      "date": "2025-05-29",
      "execution_time": 23.203129300883212,
      "memory_usage": 60.62369069350649,
      "success_rate": 0.9430856796504369,
      "flakiness_score": 0.1306337738822083
    },
    {
      "date": "2025-05-30",
      "execution_time": 23.305669106958945,
      "memory_usage": 61.394755418766366,
      "success_rate": 0.9312447910026322,
      "flakiness_score": 0.15206989356532702
    },
    {
      "date": "2025-05-31",
      "execution_time": 23.23664271482138,
      "memory_usage": 64.2287386126298,
      "success_rate": 0.9421386406416998,
      "flakiness_score": 0.13964505789967915
    },
    {
      "date": "2025-06-01",
      "execution_time": 23.291445627637295,
      "memory_usage": 61.64638134606214,
      "success_rate": 0.9375067087626254,
      "flakiness_score": 0.1533831059799837
    },
    {
      "date": "2025-06-02",
      "execution_time": 23.384148829494716,
      "memory_usage": 61.18057815958055,
      "success_rate": 0.9444607623211269,
      "flakiness_score": 0.11114548971040696
    },
    {
      "date": "2025-06-03",
      "execution_time": 23.25485728207231,
      "memory_usage": 63.02059805779507,
      "success_rate": 0.9451168733122429,
      "flakiness_score": 0.12913397564525264
    },
    {
      "date": "2025-06-04",
      "execution_time": 23.193924072498817,
      "memory_usage": 61.375580442555,
      "success_rate": 0.9370383770407062,
      "flakiness_score": 0.12702040059395048
    },
    {
      "date": "2025-06-05",
      "execution_time": 23.19676421885763,
      "memory_usage": 61.11244863969905,
      "success_rate": 0.9432692666705665,
      "flakiness_score": 0.14434411786550963
    },
    {
      "date": "2025-06-06",
      "execution_time": 23.29237975247273,
      "memory_usage": 63.77333998503771,
      "success_rate": 0.9589199572630385,
      "flakiness_score": 0.09689936293064655
    },
    {
      "date": "2025-06-07",
      "execution_time": 23.32120536231392,
      "memory_usage": 57.8861584564071,
      "success_rate": 0.9365776131275738,
      "flakiness_score": 0.15464055686245415
    },
    {
      "date": "2025-06-08",
      "execution_time": 23.11257514212517,
      "memory_usage": 61.606786468464385,
      "success_rate": 0.9400700201156574,
      "flakiness_score": 0.13043541252306878
    },
    {
      "date": "2025-06-09",
      "execution_time": 23.39966695992966,
      "memory_usage": 61.58456341251681,
      "success_rate": 0.9390505232159707,
      "flakiness_score": 0.1356532527152441
    },
    {
      "date": "2025-06-10",
      "execution_time": 23.29017191810851,
      "memory_usage": 62.689073521759454,
      "success_rate": 0.9367024167296357,
      "flakiness_score": 0.140323496117011
    },
    {
      "date": "2025-06-11",
      "execution_time": 23.286371703168427,
      "memory_usage": 60.225685657046704,
      "success_rate": 0.9418880740639071,
      "flakiness_score": 0.1277333526041081
    },
    {
      "date": "2025-06-12",
      "execution_time": 23.212379689669028,
      "memory_usage": 63.560211340740935,
      "success_rate": 0.9419588653509325,
      "flakiness_score": 0.14160036861306033
    },
    {
      "date": "2025-06-13",
      "execution_time": 23.420408554109546,
      "memory_usage": 62.87015870482209,
      "success_rate": 0.9288816232935272,
      "flakiness_score": 0.17195235354539204
    },
    {
      "date": "2025-06-14",
      "execution_time": 23.222718485761238,
      "memory_usage": 63.10981286744778,
      "success_rate": 0.9406954766955251,
      "flakiness_score": 0.13946602945582293
    },
    {
      "date": "2025-06-15",
      "execution_time": 23.32261140791455,
      "memory_usage": 63.59905768243087,
      "success_rate": 0.9410732050638261,
      "flakiness_score": 0.13990318094935014
    },
    {
      "date": "2025-06-16",
      "execution_time": 23.310521501636334,
      "memory_usage": 62.8587183152407,
      "success_rate": 0.938745015245209,
      "flakiness_score": 0.14081484352055296
    },
    {
      "date": "2025-06-17",
      "execution_time": 23.340171295927053,
      "memory_usage": 60.73651961734747,
      "success_rate": 0.939984116918886,
      "flakiness_score": 0.13796484007497595
    },
    {
      "date": "2025-06-18",
      "execution_time": 23.25135380637771,
      "memory_usage": 61.96309596288682,
      "success_rate": 0.9429949786861349,
      "flakiness_score": 0.13741658247383806
    },
    {
      "date": "2025-06-19",
      "execution_time": 23.303580120346023,
      "memory_usage": 63.140540604706686,
      "success_rate": 0.9425568534350837,
      "flakiness_score": 0.12925661063852345
    },
    {
      "date": "2025-06-20",
      "execution_time": 23.275354581765768,
      "memory_usage": 58.524937556672775,
      "success_rate": 0.9396466645289044,
      "flakiness_score": 0.13133584168827991
    },
    {
      "date": "2025-06-21",
      "execution_time": 23.257874408859017,
      "memory_usage": 61.53064502177326,
      "success_rate": 0.9461678155869206,
      "flakiness_score": 0.13900387779111367
    },
    {
      "date": "2025-06-22",
      "execution_time": 23.40773672828401,
      "memory_usage": 61.11000213209495,
      "success_rate": 0.9498293834670228,
      "flakiness_score": 0.13475186691091037
    },
    {
      "date": "2025-06-23",
      "execution_time": 23.279129245135735,
      "memory_usage": 60.292824853590275,
      "success_rate": 0.9368442801777348,
      "flakiness_score": 0.14004053019492776
    },
    {
      "date": "2025-06-24",
      "execution_time": 23.316263343291595,
      "memory_usage": 61.183643977513874,
      "success_rate": 0.9435366064414741,
      "flakiness_score": 0.13956582522222216
    }
  ],
  "category_breakdown": [
    {
      "test_category": "api",
      "execution_time_mean": 19.413,
      "execution_time_count": 30,
      "success_rate_mean": 0.954,
      "flakiness_score_mean": 0.108
    },
    {
      "test_category": "integration",
      "execution_time_mean": 18.429,
      "execution_time_count": 60,
      "success_rate_mean": 0.948,
      "flakiness_score_mean": 0.136
    },
    {
      "test_category": "ml_adapters",
      "execution_time_mean": 22.602,
      "execution_time_count": 60,
      "success_rate_mean": 0.948,
      "flakiness_score_mean": 0.129
    },
    {
      "test_category": "other",
      "execution_time_mean": 23.923,
      "execution_time_count": 1200,
      "success_rate_mean": 0.941,
      "flakiness_score_mean": 0.136
    },
    {
      "test_category": "unit",
      "execution_time_mean": 21.281,
      "execution_time_count": 150,
      "success_rate_mean": 0.93,
      "flakiness_score_mean": 0.151
    }
  ],
  "trends": {
    "analysis_date": "2025-06-24T19:42:50.713302",
    "data_period": "2025-05-26 19:42:50.584286 to 2025-06-24 19:42:50.674452",
    "total_test_executions": 1500,
    "trends": {
      "execution_time_change": "+0.0%",
      "success_rate_change": "+0.3%",
      "trend_direction": "stable"
    },
    "category_performance": [
      {
        "test_category": "api",
        "execution_time_mean": 19.326,
        "execution_time_std": 0.443,
        "memory_usage_mean": 64.235,
        "memory_usage_std": 10.323,
        "success_rate_mean": 0.977,
        "success_rate_count": 7,
        "flakiness_score_mean": 0.068,
        "flakiness_score_max": 0.135
      },
      {
        "test_category": "integration",
        "execution_time_mean": 18.36,
        "execution_time_std": 1.858,
        "memory_usage_mean": 60.342,
        "memory_usage_std": 9.26,
        "success_rate_mean": 0.946,
        "success_rate_count": 14,
        "flakiness_score_mean": 0.154,
        "flakiness_score_max": 0.402
      },
      {
        "test_category": "ml_adapters",
        "execution_time_mean": 22.378,
        "execution_time_std": 6.831,
        "memory_usage_mean": 49.265,
        "memory_usage_std": 20.59,
        "success_rate_mean": 0.953,
        "success_rate_count": 14,
        "flakiness_score_mean": 0.129,
        "flakiness_score_max": 0.33
      },
      {
        "test_category": "other",
        "execution_time_mean": 23.941,
        "execution_time_std": 8.304,
        "memory_usage_mean": 63.879,
        "memory_usage_std": 23.38,
        "success_rate_mean": 0.941,
        "success_rate_count": 280,
        "flakiness_score_mean": 0.138,
        "flakiness_score_max": 0.537
      },
      {
        "test_category": "unit",
        "execution_time_mean": 21.298,
        "execution_time_std": 15.201,
        "memory_usage_mean": 43.344,
        "memory_usage_std": 37.444,
        "success_rate_mean": 0.946,
        "success_rate_count": 35,
        "flakiness_score_mean": 0.131,
        "flakiness_score_max": 0.357
      }
    ],
    "performance_hotspots": [
      {
        "test_file": "tests/domain/test_comprehensive_domain.py",
        "execution_time": 50.200675831174536,
        "memory_usage": 118.08506484951656
      },
      {
        "test_file": "tests/domain/test_comprehensive_domain.py",
        "execution_time": 50.110224685604905,
        "memory_usage": 129.82193147338353
      },
      {
        "test_file": "tests/domain/test_comprehensive_domain.py",
        "execution_time": 49.91167271161926,
        "memory_usage": 102.01168005560055
      },
      {
        "test_file": "tests/domain/test_comprehensive_domain.py",
        "execution_time": 49.648976580323044,
        "memory_usage": 87.34409215482852
      },
      {
        "test_file": "tests/domain/test_comprehensive_domain.py",
        "execution_time": 49.55327942674638,
        "memory_usage": 126.68927565457275
      },
      {
        "test_file": "tests/domain/test_comprehensive_domain.py",
        "execution_time": 49.22411526708931,
        "memory_usage": 125.8256014176705
      },
      {
        "test_file": "tests/domain/test_comprehensive_domain.py",
        "execution_time": 48.72620897463691,
        "memory_usage": 90.0451119662917
      },
      {
        "test_file": "tests/infrastructure/test_caching_comprehensive.py",
        "execution_time": 41.655788989265915,
        "memory_usage": 102.13902739507772
      },
      {
        "test_file": "tests/infrastructure/test_caching_comprehensive.py",
        "execution_time": 41.159615123146644,
        "memory_usage": 93.67718759099238
      },
      {
        "test_file": "tests/infrastructure/test_caching_comprehensive.py",
        "execution_time": 40.85993306001998,
        "memory_usage": 101.32283062108665
      }
    ],
    "problematic_tests": [
      "tests/conftest_dependencies.py",
      "tests/test_autonomous_preprocessing.py",
      "tests/test_deployment_infrastructure.py",
      "tests/test_preprocessing_cli.py",
      "tests/application/test_automl_services.py",
      "tests/application/test_autonomous_service.py",
      "tests/application/test_dto.py",
      "tests/application/test_explainability_services.py",
      "tests/application/test_integration_workflows.py",
      "tests/application/test_services.py",
      "tests/application/test_use_cases.py",
      "tests/application/test_use_case_requests_responses.py",
      "tests/branch_coverage/test_algorithm_branch_coverage.py",
      "tests/branch_coverage/test_conditional_logic_comprehensive.py",
      "tests/branch_coverage/test_edge_case_coverage.py",
      "tests/branch_coverage/test_error_path_coverage.py",
      "tests/cli/test_cli_simple.py",
      "tests/contract/test_adapter_contracts.py",
      "tests/contract/test_contract_testing_enhanced.py",
      "tests/cross_platform/test_compatibility_phase3.py",
      "tests/domain/test_comprehensive_domain.py",
      "tests/domain/test_entities.py",
      "tests/domain/test_value_objects.py",
      "tests/domain/test_value_objects_simple.py",
      "tests/e2e/test_complete_workflows.py",
      "tests/infrastructure/test_adapters.py",
      "tests/infrastructure/test_adapters_comprehensive.py",
      "tests/infrastructure/test_auth_comprehensive.py",
      "tests/infrastructure/test_autonomous_data_loaders.py",
      "tests/infrastructure/test_caching_comprehensive.py",
      "tests/infrastructure/test_configuration_comprehensive.py",
      "tests/infrastructure/test_configuration_enhanced.py",
      "tests/infrastructure/test_database_comprehensive.py",
      "tests/infrastructure/test_database_operations_phase2.py",
      "tests/infrastructure/test_data_loaders.py",
      "tests/infrastructure/test_data_loaders_comprehensive.py",
      "tests/infrastructure/test_data_loaders_enhanced.py",
      "tests/infrastructure/test_error_handling_enhanced.py",
      "tests/infrastructure/test_gpu_acceleration_enhanced.py",
      "tests/infrastructure/test_middleware_comprehensive.py",
      "tests/infrastructure/test_ml_adapter_integration_phase2.py",
      "tests/infrastructure/test_monitoring_comprehensive.py",
      "tests/infrastructure/test_persistence_comprehensive.py",
      "tests/infrastructure/test_phase2_validation.py",
      "tests/infrastructure/test_preprocessing_comprehensive.py",
      "tests/infrastructure/test_repositories.py",
      "tests/infrastructure/test_repositories_comprehensive.py"
    ],
    "key_insights": [
      "Average execution time: 23.30s",
      "Overall success rate: 94.3%",
      "Analysis covers 5 test categories",
      "Trend direction: stable"
    ]
  },
  "recommendations": [
    {
      "type": "performance",
      "priority": "HIGH",
      "title": "Execution Time Degradation Detected",
      "description": "Test execution time has increased by +0.0%",
      "action": "Review recent changes and optimize slow tests",
      "impact": "Reduce CI feedback time",
      "automated_fix": "parallel_execution_optimization"
    },
    {
      "type": "reliability",
      "priority": "HIGH",
      "title": "47 Problematic Tests Identified",
      "description": "Multiple tests showing high flakiness or poor performance",
      "action": "Implement test stability improvements and mocking",
      "impact": "Improve test reliability and reduce false failures",
      "automated_fix": "mock_enhancement_suggestions"
    },
    {
      "type": "resource",
      "priority": "MEDIUM",
      "title": "High Memory Usage Tests Detected",
      "description": "7 tests using >100MB memory",
      "action": "Optimize memory usage through fixture management",
      "impact": "Reduce resource consumption and enable more parallel execution",
      "automated_fix": "memory_optimization_suggestions"
    },
    {
      "type": "category_optimization",
      "priority": "MEDIUM",
      "title": "Optimize Other Test Category",
      "description": "other tests show highest execution times",
      "action": "Focus optimization efforts on other test improvements",
      "impact": "Targeted performance improvement for slowest category",
      "automated_fix": "category_specific_optimization"
    },
    {
      "type": "analytics",
      "priority": "LOW",
      "title": "Improve Performance Prediction Model",
      "description": "Model accuracy could be improved with more training data",
      "action": "Collect more diverse test execution metrics",
      "impact": "Better predictive insights for test optimization",
      "automated_fix": "model_improvement_suggestions"
    }
  ],
  "model_performance": {
    "execution_time_r2": 0.78,
    "memory_usage_r2": 0.72,
    "flakiness_r2": 0.65
  },
  "insights": [
    "AI models achieve 78.0% accuracy in performance prediction",
    "Smart analytics identified 5 optimization opportunities",
    "Test execution trends show stable performance pattern",
    "Predictive models trained on 1500 execution samples"
  ]
}