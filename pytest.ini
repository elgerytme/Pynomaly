[tool:pytest]
# Pytest configuration for comprehensive testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Output and reporting
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --disable-warnings
    --color=yes
    --durations=10
    --show-capture=no
    --maxfail=5
    --reruns=2
    --reruns-delay=1

# Coverage configuration
# (moved to pyproject.toml for better integration)

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    api: API tests
    cli: CLI tests
    performance: Performance tests
    security: Security tests
    slow: Slow tests (may take more than 1 second)
    fast: Fast tests (should complete in under 1 second)
    database: Tests that require database
    redis: Tests that require Redis
    mongodb: Tests that require MongoDB
    external: Tests that require external services
    auth: Authentication/authorization tests
    model: Machine learning model tests
    streaming: Real-time processing tests
    ui: User interface tests
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    acceptance: Acceptance tests
    contract: Contract tests
    property: Property-based tests
    mutation: Mutation tests
    load: Load tests
    stress: Stress tests
    benchmark: Benchmark tests
    e2e: End-to-end tests
    docker: Tests that require Docker
    kubernetes: Tests that require Kubernetes
    windows: Windows-specific tests
    linux: Linux-specific tests
    macos: macOS-specific tests
    python38: Python 3.8 specific tests
    python39: Python 3.9 specific tests
    python310: Python 3.10 specific tests
    python311: Python 3.11 specific tests
    python312: Python 3.12 specific tests
    xfail: Expected to fail
    skip: Skip these tests
    parametrize: Parametrized tests
    fixture: Fixture tests
    mock: Tests using mocks
    async: Async tests
    sync: Sync tests
    network: Network-dependent tests
    filesystem: Filesystem-dependent tests
    memory: Memory-intensive tests
    cpu: CPU-intensive tests
    gpu: GPU-dependent tests
    ml: Machine learning tests
    automl: AutoML tests
    explainability: Explainable AI tests
    drift: Model drift tests
    monitoring: Monitoring tests
    alerting: Alerting tests
    backup: Backup/restore tests
    security_scan: Security scanning tests
    compliance: Compliance tests
    gdpr: GDPR compliance tests
    hipaa: HIPAA compliance tests
    soc2: SOC2 compliance tests

# Minimum test coverage thresholds
# (these are enforced by coverage configuration)

# Test environment configuration
env =
    PYNOMALY_ENV = testing
    PYNOMALY_DEBUG = true
    PYNOMALY_LOG_LEVEL = DEBUG
    PYTHONPATH = src
    TESTING = true

# Async test configuration
asyncio_mode = auto

# Timeout for tests
timeout = 300

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    ignore::UserWarning:pydantic.*
    ignore::UserWarning:dependency_injector.*
    error::UserWarning:pynomaly.*

# Test order randomization  
# addopts = --random-order --random-order-bucket=global

# Parallel test execution
# -n auto
# --dist worksteal

# Performance monitoring
# --benchmark-skip
# --benchmark-disable-gc
# --benchmark-warmup = on
# --benchmark-warmup-iterations = 10000

# HTML report configuration
# --html = reports/test_results/pytest_report.html
# --self-contained-html

# JUnit XML output
# --junitxml = reports/test_results/pytest_results.xml

# Test result caching
# --cache-clear
# --lf  # Run last failed tests first
# --ff  # Run failures first

# Plugin configuration
# required_plugins =
#     pytest-asyncio
#     pytest-cov
#     pytest-html
#     pytest-mock
#     pytest-xdist
#     pytest-timeout
#     pytest-rerunfailures
#     pytest-random-order
#     pytest-benchmark
#     pytest-clarity

# Mock configuration
# mock_use_standalone_module = true
