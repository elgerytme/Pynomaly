[
  "api/test_end_to_end.py::test_api_flow",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_app_creation",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_direct_get_openapi_call",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_fastapi_dependency_patterns_resolved",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_no_circular_references_in_schemas",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_no_forwardref_strings_in_openapi_json",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_openapi_components_schemas",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_openapi_generation_no_exceptions",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_openapi_generation_performance",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_openapi_generation_with_complex_types",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_openapi_paths_not_empty",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_openapi_schema_valid_keys",
  "api/test_openapi_generation.py::TestOpenAPIGeneration::test_regression_typeadapter_forwardref_issue",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_annotated_depends_patterns",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_app_creation_no_exceptions",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_dependency_patterns_resolved",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_json_serialization_works",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_no_forwardref_strings_in_json",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_openapi_generation_no_exceptions",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_openapi_schema_structure",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_performance_acceptable",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_pydantic_models_properly_serialized",
  "api/test_openapi_regression.py::TestOpenAPIRegression::test_uuid_and_datetime_types_handled",
  "application/dto/streaming_dto_test.py::TestBackpressureConfigDTO::test_create_valid_backpressure_config",
  "application/dto/streaming_dto_test.py::TestBackpressureConfigDTO::test_drop_policy_validation",
  "application/dto/streaming_dto_test.py::TestCheckpointConfigDTO::test_create_valid_checkpoint_config",
  "application/dto/streaming_dto_test.py::TestCheckpointConfigDTO::test_interval_validation",
  "application/dto/streaming_dto_test.py::TestCheckpointConfigDTO::test_retention_validation",
  "application/dto/streaming_dto_test.py::TestDTOSerialization::test_configuration_serialization",
  "application/dto/streaming_dto_test.py::TestDTOSerialization::test_stream_data_point_json_roundtrip",
  "application/dto/streaming_dto_test.py::TestStreamConfigurationDTO::test_batch_size_validation",
  "application/dto/streaming_dto_test.py::TestStreamConfigurationDTO::test_create_valid_configuration",
  "application/dto/streaming_dto_test.py::TestStreamConfigurationDTO::test_timeout_validation",
  "application/dto/streaming_dto_test.py::TestStreamDataBatchDTO::test_batch_size_property",
  "application/dto/streaming_dto_test.py::TestStreamDataBatchDTO::test_create_valid_batch",
  "application/dto/streaming_dto_test.py::TestStreamDataBatchDTO::test_empty_batch_validation",
  "application/dto/streaming_dto_test.py::TestStreamDataBatchDTO::test_to_pandas_conversion",
  "application/dto/streaming_dto_test.py::TestStreamDataPointDTO::test_create_valid_data_point",
  "application/dto/streaming_dto_test.py::TestStreamDataPointDTO::test_data_point_with_prediction",
  "application/dto/streaming_dto_test.py::TestStreamDataPointDTO::test_from_dict_creation",
  "application/dto/streaming_dto_test.py::TestStreamDataPointDTO::test_invalid_anomaly_score_range",
  "application/dto/streaming_dto_test.py::TestStreamDataPointDTO::test_invalid_features_type",
  "application/dto/streaming_dto_test.py::TestStreamDataPointDTO::test_to_dict_conversion",
  "application/dto/streaming_dto_test.py::TestStreamDetectionRequestDTO::test_create_valid_request",
  "application/dto/streaming_dto_test.py::TestStreamDetectionRequestDTO::test_request_validation",
  "application/dto/streaming_dto_test.py::TestStreamDetectionResponseDTO::test_create_valid_response",
  "application/dto/streaming_dto_test.py::TestStreamDetectionResponseDTO::test_error_response",
  "application/dto/streaming_dto_test.py::TestStreamDetectionResponseDTO::test_performance_metrics",
  "application/dto/streaming_dto_test.py::TestStreamErrorDTO::test_create_valid_error",
  "application/dto/streaming_dto_test.py::TestStreamErrorDTO::test_severity_validation",
  "application/dto/streaming_dto_test.py::TestStreamMetricsDTO::test_create_valid_metrics",
  "application/dto/streaming_dto_test.py::TestStreamMetricsDTO::test_success_rate_calculation",
  "application/dto/streaming_dto_test.py::TestStreamMetricsDTO::test_zero_messages_processed",
  "application/dto/streaming_dto_test.py::TestStreamStatusDTO::test_create_valid_status",
  "application/dto/streaming_dto_test.py::TestStreamStatusDTO::test_status_validation",
  "application/dto/streaming_dto_test.py::TestStreamStatusDTO::test_unhealthy_status",
  "application/dto/streaming_dto_test.py::TestWindowConfigDTO::test_create_sliding_window",
  "application/dto/streaming_dto_test.py::TestWindowConfigDTO::test_create_tumbling_window",
  "application/dto/streaming_dto_test.py::TestWindowConfigDTO::test_sliding_window_slide_requirement",
  "application/dto/streaming_dto_test.py::TestWindowConfigDTO::test_window_type_validation",
  "application/dto/test_streaming_dto.py::TestBackpressureConfigDTO::test_create_valid_backpressure_config",
  "application/dto/test_streaming_dto.py::TestBackpressureConfigDTO::test_drop_policy_validation",
  "application/dto/test_streaming_dto.py::TestCheckpointConfigDTO::test_create_valid_checkpoint_config",
  "application/dto/test_streaming_dto.py::TestCheckpointConfigDTO::test_interval_validation",
  "application/dto/test_streaming_dto.py::TestCheckpointConfigDTO::test_retention_validation",
  "application/dto/test_streaming_dto.py::TestDTOSerialization::test_configuration_serialization",
  "application/dto/test_streaming_dto.py::TestDTOSerialization::test_stream_data_point_json_roundtrip",
  "application/dto/test_streaming_dto.py::TestStreamConfigurationDTO::test_batch_size_validation",
  "application/dto/test_streaming_dto.py::TestStreamConfigurationDTO::test_create_valid_configuration",
  "application/dto/test_streaming_dto.py::TestStreamConfigurationDTO::test_timeout_validation",
  "application/dto/test_streaming_dto.py::TestStreamDataBatchDTO::test_batch_size_property",
  "application/dto/test_streaming_dto.py::TestStreamDataBatchDTO::test_create_valid_batch",
  "application/dto/test_streaming_dto.py::TestStreamDataBatchDTO::test_empty_batch_validation",
  "application/dto/test_streaming_dto.py::TestStreamDataBatchDTO::test_to_pandas_conversion",
  "application/dto/test_streaming_dto.py::TestStreamDataPointDTO::test_create_valid_data_point",
  "application/dto/test_streaming_dto.py::TestStreamDataPointDTO::test_data_point_with_prediction",
  "application/dto/test_streaming_dto.py::TestStreamDataPointDTO::test_from_dict_creation",
  "application/dto/test_streaming_dto.py::TestStreamDataPointDTO::test_invalid_anomaly_score_range",
  "application/dto/test_streaming_dto.py::TestStreamDataPointDTO::test_invalid_features_type",
  "application/dto/test_streaming_dto.py::TestStreamDataPointDTO::test_to_dict_conversion",
  "application/dto/test_streaming_dto.py::TestStreamDetectionRequestDTO::test_create_valid_request",
  "application/dto/test_streaming_dto.py::TestStreamDetectionRequestDTO::test_request_validation",
  "application/dto/test_streaming_dto.py::TestStreamDetectionResponseDTO::test_create_valid_response",
  "application/dto/test_streaming_dto.py::TestStreamDetectionResponseDTO::test_error_response",
  "application/dto/test_streaming_dto.py::TestStreamDetectionResponseDTO::test_performance_metrics",
  "application/dto/test_streaming_dto.py::TestStreamErrorDTO::test_create_valid_error",
  "application/dto/test_streaming_dto.py::TestStreamErrorDTO::test_severity_validation",
  "application/dto/test_streaming_dto.py::TestStreamMetricsDTO::test_create_valid_metrics",
  "application/dto/test_streaming_dto.py::TestStreamMetricsDTO::test_success_rate_calculation",
  "application/dto/test_streaming_dto.py::TestStreamMetricsDTO::test_zero_messages_processed",
  "application/dto/test_streaming_dto.py::TestStreamStatusDTO::test_create_valid_status",
  "application/dto/test_streaming_dto.py::TestStreamStatusDTO::test_status_validation",
  "application/dto/test_streaming_dto.py::TestStreamStatusDTO::test_unhealthy_status",
  "application/dto/test_streaming_dto.py::TestWindowConfigDTO::test_create_sliding_window",
  "application/dto/test_streaming_dto.py::TestWindowConfigDTO::test_create_tumbling_window",
  "application/dto/test_streaming_dto.py::TestWindowConfigDTO::test_sliding_window_slide_requirement",
  "application/dto/test_streaming_dto.py::TestWindowConfigDTO::test_window_type_validation",
  "application/services/deep_learning_integration_service_test.py::TestDLFrameworkInfo::test_framework_info_creation",
  "application/services/deep_learning_integration_service_test.py::TestDLModelPerformance::test_performance_creation",
  "application/services/deep_learning_integration_service_test.py::TestDLOptimizationConfig::test_custom_config",
  "application/services/deep_learning_integration_service_test.py::TestDLOptimizationConfig::test_default_config",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_benchmark_frameworks",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_calculate_framework_score",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_create_deep_learning_detector",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_create_deep_learning_detector_auto_framework",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_create_framework_detector_jax",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_create_framework_detector_pytorch",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_create_framework_detector_tensorflow",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_create_framework_detector_unknown",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_detect_available_frameworks",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_get_available_frameworks",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_get_framework_capabilities",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_get_integration_status",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_get_performance_recommendations",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_get_performance_recommendations_high_dimensional",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_get_performance_recommendations_large_dataset",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_initialization",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_recommend_framework_auto_select",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_recommend_framework_no_support",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_recommend_framework_with_target",
  "application/services/deep_learning_integration_service_test.py::TestDeepLearningIntegrationService::test_update_framework_preferences",
  "application/services/model_ab_testing_service_test.py::TestModelABTestingService::test_placeholder",
  "application/services/model_drift_detection_service_test.py::TestModelDriftDetectionService::test_placeholder",
  "application/services/model_governance_service_test.py::TestModelGovernanceService::test_placeholder",
  "application/services/model_lineage_service_test.py::TestErrorHandling::test_duplicate_relationship_handling",
  "application/services/model_lineage_service_test.py::TestErrorHandling::test_invalid_model_id_error",
  "application/services/model_lineage_service_test.py::TestErrorHandling::test_self_reference_prevention",
  "application/services/model_lineage_service_test.py::TestLineageGraph::test_graph_traversal",
  "application/services/model_lineage_service_test.py::TestLineageGraph::test_lineage_graph_creation",
  "application/services/model_lineage_service_test.py::TestLineageGraph::test_lineage_graph_export",
  "application/services/model_lineage_service_test.py::TestLineageMetadata::test_add_relationship_metadata",
  "application/services/model_lineage_service_test.py::TestLineageMetadata::test_update_relationship_metadata",
  "application/services/model_lineage_service_test.py::TestLineagePerformance::test_deep_dependency_chain_performance",
  "application/services/model_lineage_service_test.py::TestLineagePerformance::test_large_graph_performance",
  "application/services/model_lineage_service_test.py::TestLineageQuery::test_find_impact_analysis",
  "application/services/model_lineage_service_test.py::TestLineageQuery::test_get_downstream_dependencies",
  "application/services/model_lineage_service_test.py::TestLineageQuery::test_get_model_lineage",
  "application/services/model_lineage_service_test.py::TestLineageQuery::test_get_upstream_dependencies",
  "application/services/model_lineage_service_test.py::TestLineageSearch::test_search_by_metadata",
  "application/services/model_lineage_service_test.py::TestLineageSearch::test_search_by_node_type",
  "application/services/model_lineage_service_test.py::TestLineageSearch::test_search_by_relationship_type",
  "application/services/model_lineage_service_test.py::TestLineageTracking::test_add_model_dataset_relationship",
  "application/services/model_lineage_service_test.py::TestLineageTracking::test_add_model_model_relationship",
  "application/services/model_lineage_service_test.py::TestLineageTracking::test_circular_dependency_detection",
  "application/services/model_lineage_service_test.py::TestLineageTracking::test_remove_relationship",
  "application/services/streaming_service_test.py::TestStreamingService::test_placeholder",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_analyze_attribute_bias",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_analyze_bias",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_assess_consistency",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_assess_fidelity",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_assess_stability",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_assess_trust_score",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_calculate_prediction_confidence",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_compute_feature_interactions",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_compute_gradient_explanation",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_compute_lime_values_unavailable",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_compute_permutation_importance_unavailable",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_compute_shap_values_unavailable",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_compute_variance_importance",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_create_fallback_global_explanation",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_generate_comprehensive_explanation",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_generate_global_explanation",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_generate_local_explanations",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_generate_recommendations",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_get_dataset_summary",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_get_model_info",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_get_service_info",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_initialization",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_initialization_with_options",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_select_representative_samples",
  "application/services/test_advanced_explainability_service.py::TestAdvancedExplainabilityService::test_select_representative_samples_fallback",
  "application/services/test_advanced_explainability_service.py::TestBiasAnalysisConfig::test_config_creation",
  "application/services/test_advanced_explainability_service.py::TestExplanationConfig::test_custom_config",
  "application/services/test_advanced_explainability_service.py::TestExplanationConfig::test_default_config",
  "application/services/test_advanced_explainability_service.py::TestExplanationModels::test_bias_analysis_result_creation",
  "application/services/test_advanced_explainability_service.py::TestExplanationModels::test_global_explanation_creation",
  "application/services/test_advanced_explainability_service.py::TestExplanationModels::test_local_explanation_creation",
  "application/services/test_advanced_explainability_service.py::TestExplanationModels::test_trust_score_result_creation",
  "application/services/test_advanced_explainability_service.py::TestTrustScoreConfig::test_config_creation",
  "application/services/test_advanced_ml_lifecycle_service.py::TestErrorHandling::test_inactive_run_operations",
  "application/services/test_advanced_ml_lifecycle_service.py::TestErrorHandling::test_invalid_experiment_for_run",
  "application/services/test_advanced_ml_lifecycle_service.py::TestErrorHandling::test_invalid_model_version_promotion",
  "application/services/test_advanced_ml_lifecycle_service.py::TestExperimentTracking::test_end_run",
  "application/services/test_advanced_ml_lifecycle_service.py::TestExperimentTracking::test_log_artifact",
  "application/services/test_advanced_ml_lifecycle_service.py::TestExperimentTracking::test_log_metric",
  "application/services/test_advanced_ml_lifecycle_service.py::TestExperimentTracking::test_log_model",
  "application/services/test_advanced_ml_lifecycle_service.py::TestExperimentTracking::test_log_parameter",
  "application/services/test_advanced_ml_lifecycle_service.py::TestExperimentTracking::test_start_experiment",
  "application/services/test_advanced_ml_lifecycle_service.py::TestExperimentTracking::test_start_run",
  "application/services/test_advanced_ml_lifecycle_service.py::TestIntegration::test_complete_ml_workflow",
  "application/services/test_advanced_ml_lifecycle_service.py::TestModelRegistry::test_get_model_registry_stats",
  "application/services/test_advanced_ml_lifecycle_service.py::TestModelRegistry::test_search_models",
  "application/services/test_advanced_ml_lifecycle_service.py::TestModelVersioning::test_create_model_version_new_model",
  "application/services/test_advanced_ml_lifecycle_service.py::TestModelVersioning::test_determine_next_version",
  "application/services/test_advanced_ml_lifecycle_service.py::TestModelVersioning::test_promote_model_version",
  "application/services/test_advanced_ml_lifecycle_service.py::TestUtilities::test_calculate_checksum",
  "application/services/test_advanced_ml_lifecycle_service.py::TestUtilities::test_capture_environment",
  "application/services/test_advanced_ml_lifecycle_service.py::TestUtilities::test_capture_system_info",
  "application/services/test_advanced_ml_lifecycle_service.py::TestValidation::test_run_validation_tests",
  "application/services/test_advanced_ml_lifecycle_service.py::TestValidation::test_validate_performance_baseline",
  "application/services/test_advanced_ml_lifecycle_service.py::TestValidation::test_validate_resource_usage",
  "application/services/test_advanced_ml_lifecycle_service.py::test_performance_trends_calculation",
  "application/services/test_algorithm_adapter_registry.py::TestAlgorithmAdapterRegistry::test_adapter_info_retrieval",
  "application/services/test_algorithm_adapter_registry.py::TestAlgorithmAdapterRegistry::test_algorithm_comparison",
  "application/services/test_algorithm_adapter_registry.py::TestAlgorithmAdapterRegistry::test_end_to_end_pyod_isolation_forest",
  "application/services/test_algorithm_adapter_registry.py::TestAlgorithmAdapterRegistry::test_get_supported_algorithms",
  "application/services/test_algorithm_adapter_registry.py::TestAlgorithmAdapterRegistry::test_invalid_algorithm_error",
  "application/services/test_algorithm_adapter_registry.py::TestAlgorithmAdapterRegistry::test_large_dataset_performance",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_create_isolation_forest_instance",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_fit_algorithm_with_real_data",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_fit_without_numeric_features_raises_error",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_multiple_algorithms_supported",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_predict_before_fit_raises_error",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_predict_with_real_algorithm",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_score_with_real_algorithm",
  "application/services/test_algorithm_adapter_registry.py::TestPyODAlgorithmAdapter::test_unsupported_algorithm_raises_error",
  "application/services/test_algorithm_adapter_registry.py::TestSklearnAlgorithmAdapter::test_sklearn_isolation_forest_integration",
  "application/services/test_algorithm_adapter_registry.py::TestSklearnAlgorithmAdapter::test_sklearn_prediction_conversion",
  "application/services/test_automl_service.py::TestAutoMLService::test_algorithm_config_completeness",
  "application/services/test_automl_service.py::TestAutoMLService::test_algorithm_recommendation",
  "application/services/test_automl_service.py::TestAutoMLService::test_algorithm_scoring",
  "application/services/test_automl_service.py::TestAutoMLService::test_auto_select_and_optimize",
  "application/services/test_automl_service.py::TestAutoMLService::test_complex_dataset_profiling",
  "application/services/test_automl_service.py::TestAutoMLService::test_create_optimized_detector",
  "application/services/test_automl_service.py::TestAutoMLService::test_dataset_not_found_error",
  "application/services/test_automl_service.py::TestAutoMLService::test_dataset_profile_complexity_calculation",
  "application/services/test_automl_service.py::TestAutoMLService::test_dataset_profile_creation",
  "application/services/test_automl_service.py::TestAutoMLService::test_ensemble_config_creation",
  "application/services/test_automl_service.py::TestAutoMLService::test_hyperparameter_optimization_with_mocked_optuna",
  "application/services/test_automl_service.py::TestAutoMLService::test_hyperparameter_optimization_without_optuna",
  "application/services/test_automl_service.py::TestAutoMLService::test_large_dataset_recommendations",
  "application/services/test_automl_service.py::TestAutoMLService::test_low_score_recommendations",
  "application/services/test_automl_service.py::TestAutoMLService::test_optimization_summary",
  "application/services/test_automl_service.py::TestAutoMLService::test_real_automl_workflow_simulation",
  "application/services/test_automl_service.py::TestAutoMLService::test_small_dataset_recommendations",
  "application/services/test_automl_service.py::TestAutoMLService::test_unsupported_algorithm_error",
  "application/services/test_business_kpi_service.py::test_calculate_cost_savings_trends",
  "application/services/test_business_kpi_service.py::test_calculate_cost_savings_trends_empty",
  "application/services/test_business_kpi_service.py::test_calculate_prevented_loss",
  "application/services/test_business_kpi_service.py::test_calculate_revenue_at_risk",
  "application/services/test_business_kpi_service.py::test_calculate_roi",
  "application/services/test_cost_optimization_service.py::TestCostAnalysisEngine::test_analyze_cost_trends",
  "application/services/test_cost_optimization_service.py::TestCostAnalysisEngine::test_analyze_cost_trends_empty_resources",
  "application/services/test_cost_optimization_service.py::TestCostAnalysisEngine::test_identify_cost_anomalies",
  "application/services/test_cost_optimization_service.py::TestCostAnalysisEngine::test_predict_future_costs_with_limited_data",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_analyze_costs",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_analyze_costs_with_tenant_filter",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_check_budget_alerts",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_create_budget",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_error_handling_invalid_resource_id",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_generate_optimization_plan",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_get_resource_summary",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_get_service_metrics",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_implement_recommendation",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_register_resource",
  "application/services/test_cost_optimization_service.py::TestCostOptimizationService::test_update_resource_metrics",
  "application/services/test_cost_optimization_service.py::TestRecommendationEngine::test_filter_recommendations_conservative",
  "application/services/test_cost_optimization_service.py::TestRecommendationEngine::test_generate_idle_cleanup_recommendations",
  "application/services/test_cost_optimization_service.py::TestRecommendationEngine::test_generate_instance_type_recommendations_spot",
  "application/services/test_cost_optimization_service.py::TestRecommendationEngine::test_generate_recommendations_integration",
  "application/services/test_cost_optimization_service.py::TestRecommendationEngine::test_generate_rightsizing_recommendations_downsize",
  "application/services/test_cost_optimization_service.py::TestRecommendationEngine::test_generate_rightsizing_recommendations_upsize",
  "application/services/test_cost_optimization_service.py::TestRecommendationEngine::test_generate_scheduling_recommendations",
  "application/services/test_deep_learning_integration_service.py::TestDLFrameworkInfo::test_framework_info_creation",
  "application/services/test_deep_learning_integration_service.py::TestDLModelPerformance::test_performance_creation",
  "application/services/test_deep_learning_integration_service.py::TestDLOptimizationConfig::test_custom_config",
  "application/services/test_deep_learning_integration_service.py::TestDLOptimizationConfig::test_default_config",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_benchmark_frameworks",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_calculate_framework_score",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_create_deep_learning_detector",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_create_deep_learning_detector_auto_framework",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_create_framework_detector_jax",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_create_framework_detector_pytorch",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_create_framework_detector_tensorflow",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_create_framework_detector_unknown",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_detect_available_frameworks",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_get_available_frameworks",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_get_framework_capabilities",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_get_integration_status",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_get_performance_recommendations",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_get_performance_recommendations_high_dimensional",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_get_performance_recommendations_large_dataset",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_initialization",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_recommend_framework_auto_select",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_recommend_framework_no_support",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_recommend_framework_with_target",
  "application/services/test_deep_learning_integration_service.py::TestDeepLearningIntegrationService::test_update_framework_preferences",
  "application/services/test_deep_learning_integration_service.py::test_placeholder",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_check_drift_monitoring",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_check_drift_monitoring_not_due",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_detect_data_drift_basic",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_detect_data_drift_no_drift",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_detect_data_drift_with_methods",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_detect_performance_drift",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_detect_performance_drift_no_change",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_detect_prediction_drift",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_generate_drift_report",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_monitoring_loop_error_handling",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_pause_resume_monitoring",
  "application/services/test_drift_detection_service.py::TestDriftDetectionService::test_setup_monitoring",
  "application/services/test_drift_detection_service.py::TestPerformanceDriftDetector::test_calculate_prediction_drift_binary",
  "application/services/test_drift_detection_service.py::TestPerformanceDriftDetector::test_calculate_prediction_drift_continuous",
  "application/services/test_drift_detection_service.py::TestPerformanceDriftDetector::test_detect_performance_drift",
  "application/services/test_drift_detection_service.py::TestPerformanceDriftDetector::test_detect_performance_drift_no_change",
  "application/services/test_drift_detection_service.py::TestStatisticalDriftDetector::test_jensen_shannon_divergence",
  "application/services/test_drift_detection_service.py::TestStatisticalDriftDetector::test_kolmogorov_smirnov_test",
  "application/services/test_drift_detection_service.py::TestStatisticalDriftDetector::test_population_stability_index",
  "application/services/test_drift_detection_service.py::TestStatisticalDriftDetector::test_wasserstein_distance",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_background_data_sampling",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_compare_explanations",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_exception_handling_in_explain_instance",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_exception_handling_in_explain_model",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_cohort_invalid_indices",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_cohort_success",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_instance_detector_not_found",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_instance_detector_not_trained",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_instance_insufficient_data",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_instance_invalid_dataset_index",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_instance_with_dataset_index",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_instance_with_instance_data",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_model_missing_dataset",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_explain_model_success",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_get_available_methods",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_get_feature_statistics",
  "application/services/test_explainability_service.py::TestExplainabilityService::test_get_feature_statistics_no_explanations",
  "application/services/test_explainable_ai_service.py::TestErrorHandling::test_empty_data",
  "application/services/test_explainable_ai_service.py::TestErrorHandling::test_invalid_model_type",
  "application/services/test_explainable_ai_service.py::TestErrorHandling::test_mismatched_feature_names",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_analyze_feature_importance",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_assess_explanation_trust",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_detect_explanation_bias",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_explain_model_global",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_explain_prediction_success",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_explanation_caching",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_generate_counterfactual_explanations",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_get_explanation_summary",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_service_initialization",
  "application/services/test_explainable_ai_service.py::TestExplainableAIService::test_unsupported_explanation_method",
  "application/services/test_explainable_ai_service.py::TestExplanationCache::test_cache_expiration",
  "application/services/test_explainable_ai_service.py::TestExplanationCache::test_cache_initialization",
  "application/services/test_explainable_ai_service.py::TestExplanationCache::test_cache_storage_and_retrieval",
  "application/services/test_explainable_ai_service.py::TestExplanationConfiguration::test_configuration_initialization",
  "application/services/test_explainable_ai_service.py::TestExplanationConfiguration::test_configuration_validation",
  "application/services/test_explainable_ai_service.py::TestFeatureAblationExplainer::test_feature_ablation",
  "application/services/test_explainable_ai_service.py::TestIntegration::test_end_to_end_explanation_workflow",
  "application/services/test_explainable_ai_service.py::TestIntegration::test_multiple_explanation_methods_comparison",
  "application/services/test_explainable_ai_service.py::TestLIMEExplainer::test_lime_explainer_with_mock",
  "application/services/test_explainable_ai_service.py::TestPermutationImportanceExplainer::test_permutation_importance",
  "application/services/test_explainable_ai_service.py::TestSHAPExplainer::test_shap_explain_instance_with_mock",
  "application/services/test_explainable_ai_service.py::TestSHAPExplainer::test_shap_explainer_availability",
  "application/services/test_explainable_ai_service.py::test_concurrent_explanations",
  "application/services/test_explainable_ai_service.py::test_explanation_consistency",
  "application/services/test_export_service.py::TestExportService::test_create_export_options_excel",
  "application/services/test_export_service.py::TestExportService::test_create_export_options_powerbi",
  "application/services/test_export_service.py::TestExportService::test_export_multiple_formats",
  "application/services/test_export_service.py::TestExportService::test_export_multiple_formats_with_failure",
  "application/services/test_export_service.py::TestExportService::test_export_results_adapter_failure",
  "application/services/test_export_service.py::TestExportService::test_export_results_excel_success",
  "application/services/test_export_service.py::TestExportService::test_export_results_unsupported_format",
  "application/services/test_export_service.py::TestExportService::test_export_results_validation_failure",
  "application/services/test_export_service.py::TestExportService::test_get_export_statistics",
  "application/services/test_export_service.py::TestExportService::test_get_supported_file_extensions",
  "application/services/test_export_service.py::TestExportService::test_get_supported_file_extensions_unsupported_format",
  "application/services/test_export_service.py::TestExportService::test_get_supported_formats",
  "application/services/test_export_service.py::TestExportService::test_initialization_all_adapters_available",
  "application/services/test_export_service.py::TestExportService::test_initialization_some_adapters_unavailable",
  "application/services/test_export_service.py::TestExportService::test_validate_export_request_invalid_file",
  "application/services/test_export_service.py::TestExportService::test_validate_export_request_invalid_format",
  "application/services/test_export_service.py::TestExportService::test_validate_export_request_valid",
  "application/services/test_export_service.py::TestExportServiceIntegration::test_excel_export_integration",
  "application/services/test_export_service.py::TestExportServiceIntegration::test_service_statistics_integration",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_approve_change_request",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_audit_entry_integrity",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_audit_indices_update",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_audit_trail_entry_serialization",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_change_request_approval_workflow",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_compliance_metric_status",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_conduct_risk_assessment",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_create_policy",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_generate_audit_report",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_get_governance_dashboard",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_governance_policy_validation",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_log_audit_event",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_risk_assessment_calculations",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_service_initialization",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_submit_change_request",
  "application/services/test_governance_framework_service.py::TestGovernanceFrameworkService::test_track_compliance_metric",
  "application/services/test_intelligent_alert_service.py::TestAlertCorrelationEngine::test_add_alert",
  "application/services/test_intelligent_alert_service.py::TestAlertCorrelationEngine::test_extract_correlation_features",
  "application/services/test_intelligent_alert_service.py::TestAlertCorrelationEngine::test_find_causal_correlations",
  "application/services/test_intelligent_alert_service.py::TestAlertCorrelationEngine::test_find_pattern_correlations",
  "application/services/test_intelligent_alert_service.py::TestAlertCorrelationEngine::test_find_temporal_correlations",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_acknowledge_alert",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_are_alerts_duplicate",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_count_similar_alerts",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_create_alert",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_escalate_alert",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_get_alert_analytics",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_list_alerts_filtering",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_nonexistent_alert_operations",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_process_alert_intelligence",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_resolve_alert",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_should_suppress_alert_duplicates",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_should_suppress_alert_noise",
  "application/services/test_intelligent_alert_service.py::TestIntelligentAlertService::test_suppress_alert",
  "application/services/test_intelligent_alert_service.py::TestNoiseClassificationModel::test_add_training_sample",
  "application/services/test_intelligent_alert_service.py::TestNoiseClassificationModel::test_extract_features",
  "application/services/test_intelligent_alert_service.py::TestNoiseClassificationModel::test_feature_vector_conversion",
  "application/services/test_intelligent_alert_service.py::TestNoiseClassificationModel::test_heuristic_classification_noise",
  "application/services/test_intelligent_alert_service.py::TestNoiseClassificationModel::test_heuristic_classification_signal",
  "application/services/test_intelligent_selection_service.py::TestAlgorithmPerformanceDTO::test_performance_validation",
  "application/services/test_intelligent_selection_service.py::TestAlgorithmPerformanceDTO::test_valid_performance",
  "application/services/test_intelligent_selection_service.py::TestDatasetCharacteristicsDTO::test_characteristics_validation",
  "application/services/test_intelligent_selection_service.py::TestDatasetCharacteristicsDTO::test_valid_characteristics",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_analyze_algorithm_performance",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_analyze_dataset_preferences",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_analyze_feature_importance_no_model",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_analyze_performance_trends",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_benchmark_algorithms",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_calculate_recommendation_confidence",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_characteristics_to_features",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_compute_dataset_hash",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_extract_dataset_characteristics",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_filter_algorithm_candidates",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_get_learning_insights",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_get_meta_model_accuracy_insufficient_data",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_get_service_info",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_historical_similarity_recommendation",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_initialization",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_initialization_with_options",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_initialize_algorithm_registry",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_learn_from_result",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_meta_learning_recommendation_no_model",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_predict_performance_no_predictor",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_recommend_algorithm_basic",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_recommend_algorithm_with_constraints",
  "application/services/test_intelligent_selection_service.py::TestIntelligentSelectionService::test_rule_based_recommendation",
  "application/services/test_intelligent_selection_service.py::TestOptimizationConstraintsDTO::test_constraints_validation",
  "application/services/test_intelligent_selection_service.py::TestOptimizationConstraintsDTO::test_valid_constraints",
  "application/services/test_model_ab_testing_service.py::TestModelABTestingService::test_placeholder",
  "application/services/test_model_drift_detection_service.py::TestModelDriftDetectionService::test_placeholder",
  "application/services/test_model_governance_service.py::TestModelGovernanceService::test_placeholder",
  "application/services/test_model_lineage_service.py::TestErrorHandling::test_duplicate_relationship_handling",
  "application/services/test_model_lineage_service.py::TestErrorHandling::test_invalid_model_id_error",
  "application/services/test_model_lineage_service.py::TestErrorHandling::test_self_reference_prevention",
  "application/services/test_model_lineage_service.py::TestLineageGraph::test_graph_traversal",
  "application/services/test_model_lineage_service.py::TestLineageGraph::test_lineage_graph_creation",
  "application/services/test_model_lineage_service.py::TestLineageGraph::test_lineage_graph_export",
  "application/services/test_model_lineage_service.py::TestLineageMetadata::test_add_relationship_metadata",
  "application/services/test_model_lineage_service.py::TestLineageMetadata::test_update_relationship_metadata",
  "application/services/test_model_lineage_service.py::TestLineagePerformance::test_deep_dependency_chain_performance",
  "application/services/test_model_lineage_service.py::TestLineagePerformance::test_large_graph_performance",
  "application/services/test_model_lineage_service.py::TestLineageQuery::test_find_impact_analysis",
  "application/services/test_model_lineage_service.py::TestLineageQuery::test_get_downstream_dependencies",
  "application/services/test_model_lineage_service.py::TestLineageQuery::test_get_model_lineage",
  "application/services/test_model_lineage_service.py::TestLineageQuery::test_get_upstream_dependencies",
  "application/services/test_model_lineage_service.py::TestLineageSearch::test_search_by_metadata",
  "application/services/test_model_lineage_service.py::TestLineageSearch::test_search_by_node_type",
  "application/services/test_model_lineage_service.py::TestLineageSearch::test_search_by_relationship_type",
  "application/services/test_model_lineage_service.py::TestLineageTracking::test_add_model_dataset_relationship",
  "application/services/test_model_lineage_service.py::TestLineageTracking::test_add_model_model_relationship",
  "application/services/test_model_lineage_service.py::TestLineageTracking::test_circular_dependency_detection",
  "application/services/test_model_lineage_service.py::TestLineageTracking::test_remove_relationship",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_config_validation_invalid_confidence",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_config_validation_invalid_delta",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_config_validation_invalid_statistical_method",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_config_validation_metric_weights",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_config_validation_valid",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_degradation_details_calculation",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_degradation_result_to_dict",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_ml_based_model_exception_fallback",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_ml_based_no_model",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_ml_based_with_mock_model",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_overall_severity_calculation",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_simple_threshold_no_degradation",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_simple_threshold_with_degradation",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_statistical_t_test_with_degradation",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_statistical_z_score_no_degradation",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_statistical_z_score_with_degradation",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_statistical_zero_std_fallback",
  "application/services/test_model_performance_degradation_detector.py::TestModelPerformanceDegradationDetector::test_unsupported_algorithm_error",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_billing_tracking",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_create_duplicate_tenant_name",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_create_tenant",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_get_tenant_by_name",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_list_tenants_with_filters",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_nonexistent_tenant_operations",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_quota_reset",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_resource_quota_management",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_subscription_upgrade",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_tenant_lifecycle",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_tenant_metrics",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_tenant_usage_summary",
  "application/services/test_multi_tenant_service.py::TestMultiTenantService::test_validate_tenant_access",
  "application/services/test_multi_tenant_service.py::TestTenantIsolationService::test_create_tenant_isolation",
  "application/services/test_multi_tenant_service.py::TestTenantIsolationService::test_encryption_key_management",
  "application/services/test_multi_tenant_service.py::TestTenantIsolationService::test_validate_tenant_access",
  "application/services/test_multi_tenant_service.py::TestTenantResourceManager::test_allocate_resources",
  "application/services/test_multi_tenant_service.py::TestTenantResourceManager::test_deallocate_resources",
  "application/services/test_multi_tenant_service.py::TestTenantResourceManager::test_job_registration",
  "application/services/test_performance_benchmarking_service.py::TestBenchmarkConfig::test_benchmark_config_custom",
  "application/services/test_performance_benchmarking_service.py::TestBenchmarkConfig::test_benchmark_config_defaults",
  "application/services/test_performance_benchmarking_service.py::TestBenchmarkSuite::test_benchmark_suite_custom",
  "application/services/test_performance_benchmarking_service.py::TestBenchmarkSuite::test_benchmark_suite_defaults",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_algorithm_comparison",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_benchmark_single_run",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_benchmark_single_run_with_error",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_calculate_average_metrics",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_calculate_average_metrics_with_failures",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_calculate_scalability_grade",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_calculate_trend",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_compare_to_baseline",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_create_benchmark_suite",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_estimate_time_complexity",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_generate_benchmark_datasets",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_generate_synthetic_dataset",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_get_system_info",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_get_test_environment",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_memory_scalability_assessment",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_memory_stress_test",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_performance_trends_empty_history",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_performance_trends_with_data",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_scalability_test",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_service_initialization",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceBenchmarkingService::test_throughput_benchmark",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceMetrics::test_performance_metrics_custom",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceMetrics::test_performance_metrics_defaults",
  "application/services/test_performance_benchmarking_service.py::TestPerformanceMetrics::test_performance_metrics_failed_run",
  "application/services/test_performance_benchmarking_service.py::TestSystemMonitor::test_monitor_data_clearing",
  "application/services/test_performance_benchmarking_service.py::TestSystemMonitor::test_monitor_initialization",
  "application/services/test_performance_benchmarking_service.py::TestSystemMonitor::test_monitoring_lifecycle",
  "application/services/test_performance_config_v2.py::TestPerformanceConfigV2::test_load_v2_config",
  "application/services/test_performance_testing_service.py::TestBenchmarkResult::test_benchmark_result_initialization",
  "application/services/test_performance_testing_service.py::TestBenchmarkResult::test_get_summary",
  "application/services/test_performance_testing_service.py::TestBenchmarkSuite::test_benchmark_suite_initialization",
  "application/services/test_performance_testing_service.py::TestPerformanceMetrics::test_performance_metrics_initialization",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingIntegration::test_end_to_end_benchmark",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingIntegration::test_performance_comparison_workflow",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_aggregate_benchmark_results",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_aggregate_empty_results",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_aggregate_single_result",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_analyze_algorithmic_complexity",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_calculate_overall_stability",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_compare_algorithms",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_default_benchmark_suites",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_generate_scalability_recommendations",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_generate_synthetic_dataset",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_generate_test_datasets",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_run_benchmark_suite",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_run_scalability_analysis",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_run_single_benchmark",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_run_single_benchmark_with_labels",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_run_stress_test",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_save_benchmark_results",
  "application/services/test_performance_testing_service.py::TestPerformanceTestingService::test_service_initialization",
  "application/services/test_performance_testing_service.py::TestStressTestConfig::test_stress_test_config_initialization",
  "application/services/test_performance_testing_service.py::TestSystemMonitor::test_get_summary_empty",
  "application/services/test_performance_testing_service.py::TestSystemMonitor::test_get_summary_with_stats",
  "application/services/test_performance_testing_service.py::TestSystemMonitor::test_start_and_stop_monitoring",
  "application/services/test_performance_testing_service.py::TestSystemMonitor::test_system_monitor_initialization",
  "application/services/test_streaming_service.py::TestStreamingService::test_placeholder",
  "application/services/test_unified_data_service.py::TestDataSourceType::test_data_source_types",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_auto_detect_target_column_binary",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_auto_detect_target_column_by_name",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_auto_detect_target_column_none_found",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_clear_cache",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_combine_datasets_empty_list",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_combine_datasets_multiple",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_combine_datasets_single",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_create_processing_config_classification_use_case",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_create_processing_config_custom_settings",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_create_processing_config_default",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_create_processing_config_with_characteristics",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_generate_cache_key",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_get_dataset_summary_existing",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_get_dataset_summary_nonexistent",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_get_registered_dataset",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_init_custom_components",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_init_default",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_is_database_source",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_list_registered_datasets",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_and_process_auto_detect_target",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_and_process_database_source",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_and_process_dataframe",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_and_process_file_source",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_and_process_url_source",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_and_process_with_caching",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_and_process_with_report",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_from_database_no_query_or_table",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_from_database_with_query",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_from_database_with_table",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_from_dataframe_empty",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_from_dataframe_success",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_from_file",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_from_url",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_multiple_sources_all_fail",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_multiple_sources_combine",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_multiple_sources_parallel",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_multiple_sources_sequential",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_load_multiple_sources_with_failures",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_validate_dataset_quality_good",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_validate_dataset_quality_poor",
  "application/services/test_unified_data_service.py::TestUnifiedDataService::test_validate_dataset_quality_with_warnings",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_analytical_metrics_calculation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_business_kpis_calculation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_calculate_performance_metrics_with_data",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_chart_config_creation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_chart_generation_gauge_chart",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_chart_generation_line_chart",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_collect_algorithm_metrics_no_repository",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_collect_algorithm_metrics_with_mock_data",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_dashboard_config_creation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_dashboard_data_serialization",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_executive_metrics_calculation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_export_dashboard_html",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_export_dashboard_json",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_export_nonexistent_dashboard",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_export_unsupported_format",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_generate_analytical_dashboard",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_generate_executive_dashboard",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_generate_operational_dashboard",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_generate_performance_dashboard",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_generate_real_time_dashboard",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_metrics_history_size_limit",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_operational_metrics_calculation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_performance_dashboard_with_custom_metrics",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_performance_metrics_calculation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_real_time_metrics_creation",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_service_initialization",
  "application/services/test_visualization_dashboard_service.py::TestVisualizationDashboardService::test_update_real_time_metrics",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowDataClasses::test_user_experience_enum",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowDataClasses::test_workflow_complexity_enum",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowDataClasses::test_workflow_step_defaults",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_dataset_analysis_for_workflow",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_dataset_comprehensive_analysis",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_help_type_determination",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_intelligent_recommendations",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_outlier_estimation",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_popular_workflows_tracking",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_service_initialization",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_success_rate_calculation",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_workflow_analytics",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_workflow_recommendation_creation",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_workflow_step_creation",
  "application/services/test_workflow_simplification_basic.py::TestWorkflowSimplificationBasic::test_workflow_template_customization",
  "application/services/test_workflow_simplification_service.py::TestWorkflowDataClasses::test_user_experience_enum",
  "application/services/test_workflow_simplification_service.py::TestWorkflowDataClasses::test_workflow_complexity_enum",
  "application/services/test_workflow_simplification_service.py::TestWorkflowDataClasses::test_workflow_recommendation_defaults",
  "application/services/test_workflow_simplification_service.py::TestWorkflowDataClasses::test_workflow_step_defaults",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_dataset_analysis_for_workflow",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_dataset_comprehensive_analysis",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_error_recovery_suggestions",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_feature_flag_integration",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_get_contextual_help",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_get_next_step_guidance",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_handle_workflow_error",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_help_type_determination",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_intelligent_recommendations",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_outlier_estimation",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_popular_workflows_tracking",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_recommend_workflow_advanced_user",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_recommend_workflow_basic",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_recommend_workflow_production",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_simplify_detection_workflow_automated",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_simplify_detection_workflow_guided",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_simplify_detection_workflow_manual",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_success_rate_calculation",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_workflow_analytics",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_workflow_recommendation_creation",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_workflow_service_initialization",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_workflow_step_creation",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_workflow_step_validation",
  "application/services/test_workflow_simplification_service.py::TestWorkflowSimplificationService::test_workflow_template_customization",
  "application/test_autonomous_service.py::TestAlgorithmRecommendation::test_recommend_algorithms_complex_data",
  "application/test_autonomous_service.py::TestAlgorithmRecommendation::test_recommend_algorithms_general",
  "application/test_autonomous_service.py::TestAlgorithmRecommendation::test_recommend_algorithms_numeric_data",
  "application/test_autonomous_service.py::TestAutonomousConfig::test_custom_config",
  "application/test_autonomous_service.py::TestAutonomousConfig::test_default_config",
  "application/test_autonomous_service.py::TestAutonomousDetection::test_autonomous_detection_error_handling",
  "application/test_autonomous_service.py::TestAutonomousDetection::test_detect_autonomous_with_dataframe",
  "application/test_autonomous_service.py::TestConfigurationOptimization::test_auto_configure_csv_encoding",
  "application/test_autonomous_service.py::TestConfigurationOptimization::test_auto_configure_csv_loader",
  "application/test_autonomous_service.py::TestDataProfile::test_profile_data",
  "application/test_autonomous_service.py::TestDataProfile::test_profile_data_with_missing_values",
  "application/test_autonomous_service.py::TestDataProfile::test_profile_large_data_sampling",
  "application/test_autonomous_service.py::TestDataSourceDetection::test_detect_csv_format",
  "application/test_autonomous_service.py::TestDataSourceDetection::test_detect_excel_format",
  "application/test_autonomous_service.py::TestDataSourceDetection::test_detect_json_format",
  "application/test_autonomous_service.py::TestDataSourceDetection::test_detect_parquet_format",
  "application/test_autonomous_service.py::TestDetectorCreation::test_create_detector",
  "application/test_autonomous_service.py::test_full_integration",
  "application/test_configuration_dto_complete.py::TestConfigurationIntegration::test_merge_then_validate_workflow",
  "application/test_configuration_dto_complete.py::TestEdgeCases::test_merge_with_identical_configs",
  "application/test_configuration_dto_complete.py::TestEdgeCases::test_validate_identical_configs",
  "application/test_configuration_dto_complete.py::TestMergeConfigurations::test_merge_configurations_deep_copy",
  "application/test_configuration_dto_complete.py::TestMergeConfigurations::test_merge_configurations_partial_override",
  "application/test_configuration_dto_complete.py::TestMergeConfigurations::test_merge_configurations_preserves_dataset_config",
  "application/test_configuration_dto_complete.py::TestMergeConfigurations::test_merge_configurations_success",
  "application/test_configuration_dto_complete.py::TestValidateConfigurationCompatibility::test_validate_compatible_configurations",
  "application/test_configuration_dto_complete.py::TestValidateConfigurationCompatibility::test_validate_different_algorithms",
  "application/test_configuration_dto_complete.py::TestValidateConfigurationCompatibility::test_validate_different_datasets",
  "application/test_configuration_dto_complete.py::TestValidateConfigurationCompatibility::test_validate_different_preprocessing_scaling",
  "application/test_configuration_dto_complete.py::TestValidateConfigurationCompatibility::test_validate_multiple_incompatibilities",
  "application/test_configuration_dto_complete.py::TestValidateConfigurationCompatibility::test_validate_none_dataset_paths",
  "application/test_configuration_dto_complete.py::TestValidateConfigurationCompatibility::test_validate_none_preprocessing_configs",
  "application/test_dto.py::TestAnomalyDTO::test_from_domain_entity",
  "application/test_dto.py::TestAnomalyDTO::test_without_optional_fields",
  "application/test_dto.py::TestBatchDetectionRequestDTO::test_processing_options",
  "application/test_dto.py::TestBatchDetectionRequestDTO::test_valid_batch_request",
  "application/test_dto.py::TestBatchDetectionRequestDTO::test_validation",
  "application/test_dto.py::TestCreateDetectorDTO::test_algorithm_validation",
  "application/test_dto.py::TestCreateDetectorDTO::test_contamination_validation",
  "application/test_dto.py::TestCreateDetectorDTO::test_json_serialization",
  "application/test_dto.py::TestCreateDetectorDTO::test_name_validation",
  "application/test_dto.py::TestCreateDetectorDTO::test_parameters_optional",
  "application/test_dto.py::TestCreateDetectorDTO::test_valid_dto_creation",
  "application/test_dto.py::TestCreateExperimentDTO::test_name_validation",
  "application/test_dto.py::TestCreateExperimentDTO::test_optional_description",
  "application/test_dto.py::TestCreateExperimentDTO::test_valid_experiment_creation",
  "application/test_dto.py::TestDatasetDTO::test_dataset_without_targets",
  "application/test_dto.py::TestDatasetDTO::test_feature_validation",
  "application/test_dto.py::TestDatasetDTO::test_targets_validation",
  "application/test_dto.py::TestDatasetDTO::test_to_domain_entity",
  "application/test_dto.py::TestDatasetDTO::test_valid_dataset_dto",
  "application/test_dto.py::TestDetectionRequestDTO::test_optional_parameters",
  "application/test_dto.py::TestDetectionRequestDTO::test_valid_request",
  "application/test_dto.py::TestDetectionRequestDTO::test_validation",
  "application/test_dto.py::TestDetectionResultDTO::test_from_domain_entity",
  "application/test_dto.py::TestDetectionResultDTO::test_summary_statistics",
  "application/test_dto.py::TestDetectorResponseDTO::test_serialization",
  "application/test_dto.py::TestDetectorResponseDTO::test_valid_response_dto",
  "application/test_dto.py::TestEnsembleRequestDTO::test_valid_ensemble_request",
  "application/test_dto.py::TestEnsembleRequestDTO::test_validation",
  "application/test_dto.py::TestEnsembleRequestDTO::test_weighted_ensemble",
  "application/test_dto.py::TestModelMetricsDTO::test_classification_metrics",
  "application/test_dto.py::TestModelMetricsDTO::test_without_ground_truth",
  "application/test_dto.py::TestValidationErrorDTO::test_error_serialization",
  "application/test_dto.py::TestValidationErrorDTO::test_multiple_errors",
  "application/test_dto.py::TestValidationErrorDTO::test_single_error",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_automl_optimization_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_batch_processing_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_complete_anomaly_detection_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_comprehensive_detection_pipeline",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_disaster_recovery_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_ensemble_model_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_explainability_integration_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_model_training_and_evaluation_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_multi_tenant_workflow",
  "application/test_integration_workflows.py::TestApplicationWorkflows::test_real_time_detection_workflow",
  "application/test_services.py::TestDetectionService::test_batch_detection",
  "application/test_services.py::TestDetectionService::test_get_detection_history",
  "application/test_services.py::TestDetectionService::test_run_detection_detector_not_found",
  "application/test_services.py::TestDetectionService::test_run_detection_invalid_dataset",
  "application/test_services.py::TestDetectionService::test_run_detection_success",
  "application/test_services.py::TestEnsembleService::test_create_ensemble",
  "application/test_services.py::TestEnsembleService::test_ensemble_empty_detectors",
  "application/test_services.py::TestEnsembleService::test_ensemble_nonexistent_detector",
  "application/test_services.py::TestEnsembleService::test_ensemble_with_weights",
  "application/test_services.py::TestExperimentTrackingService::test_compare_runs",
  "application/test_services.py::TestExperimentTrackingService::test_create_experiment",
  "application/test_services.py::TestExperimentTrackingService::test_create_multiple_experiments",
  "application/test_services.py::TestExperimentTrackingService::test_get_best_run",
  "application/test_services.py::TestExperimentTrackingService::test_log_artifact",
  "application/test_services.py::TestExperimentTrackingService::test_log_run",
  "application/test_services.py::TestModelPersistenceService::test_delete_model",
  "application/test_services.py::TestModelPersistenceService::test_list_saved_models",
  "application/test_services.py::TestModelPersistenceService::test_load_model",
  "application/test_services.py::TestModelPersistenceService::test_load_nonexistent_model",
  "application/test_services.py::TestModelPersistenceService::test_save_model",
  "application/test_use_case_requests_responses.py::TestDetectAnomaliesRequest::test_detect_anomalies_request_creation",
  "application/test_use_case_requests_responses.py::TestDetectAnomaliesRequest::test_detect_anomalies_request_defaults",
  "application/test_use_case_requests_responses.py::TestDetectAnomaliesRequest::test_detect_anomalies_request_with_targets",
  "application/test_use_case_requests_responses.py::TestDetectAnomaliesResponse::test_detect_anomalies_response_creation",
  "application/test_use_case_requests_responses.py::TestDetectAnomaliesResponse::test_detect_anomalies_response_minimal",
  "application/test_use_case_requests_responses.py::TestDetectAnomaliesResponse::test_detect_anomalies_response_with_complex_quality_report",
  "application/test_use_case_requests_responses.py::TestEvaluateModelRequest::test_evaluate_model_request_comprehensive",
  "application/test_use_case_requests_responses.py::TestEvaluateModelResponse::test_evaluate_model_response_comprehensive",
  "application/test_use_case_requests_responses.py::TestEvaluateModelResponse::test_evaluate_model_response_without_ground_truth",
  "application/test_use_case_requests_responses.py::TestTrainDetectorRequest::test_train_detector_request_comprehensive",
  "application/test_use_case_requests_responses.py::TestTrainDetectorRequest::test_train_detector_request_defaults",
  "application/test_use_case_requests_responses.py::TestTrainDetectorResponse::test_train_detector_response_comprehensive",
  "application/test_use_case_requests_responses.py::TestTrainDetectorResponse::test_train_detector_response_minimal",
  "application/test_use_case_requests_responses.py::TestUseCaseIntegration::test_detection_request_response_flow",
  "application/test_use_case_requests_responses.py::TestUseCaseIntegration::test_training_request_response_flow",
  "application/test_use_cases.py::TestDetectAnomaliesUseCase::test_execute_batch_processing",
  "application/test_use_cases.py::TestDetectAnomaliesUseCase::test_execute_detector_not_found",
  "application/test_use_cases.py::TestDetectAnomaliesUseCase::test_execute_invalid_features",
  "application/test_use_cases.py::TestDetectAnomaliesUseCase::test_execute_success",
  "application/test_use_cases.py::TestDetectAnomaliesUseCase::test_execute_with_preprocessing",
  "application/test_use_cases.py::TestEvaluateModelUseCase::test_execute_cross_validation",
  "application/test_use_cases.py::TestEvaluateModelUseCase::test_execute_success",
  "application/test_use_cases.py::TestEvaluateModelUseCase::test_execute_with_ground_truth",
  "application/test_use_cases.py::TestExplainAnomalyUseCase::test_execute_lime_explanation",
  "application/test_use_cases.py::TestExplainAnomalyUseCase::test_execute_multiple_anomalies",
  "application/test_use_cases.py::TestExplainAnomalyUseCase::test_execute_shap_explanation",
  "application/test_use_cases.py::TestExplainAnomalyUseCase::test_execute_success",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_batch_training_simulation",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_comprehensive_request_response",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_detector_not_found_pattern",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_hyperparameter_tuning",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_insufficient_samples",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_minimal_vs_comprehensive_response",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_success",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_with_quality_warnings",
  "application/test_use_cases.py::TestTrainDetectorUseCase::test_execute_with_validation_split",
  "application/use_cases/streaming_detection_use_case_test.py::TestBackpressureHandling::test_backpressure_detection",
  "application/use_cases/streaming_detection_use_case_test.py::TestBackpressureHandling::test_backpressure_handling_newest_drop",
  "application/use_cases/streaming_detection_use_case_test.py::TestBackpressureHandling::test_backpressure_handling_oldest_drop",
  "application/use_cases/streaming_detection_use_case_test.py::TestCheckpointManagement::test_checkpoint_cleanup",
  "application/use_cases/streaming_detection_use_case_test.py::TestCheckpointManagement::test_load_checkpoint",
  "application/use_cases/streaming_detection_use_case_test.py::TestCheckpointManagement::test_save_checkpoint",
  "application/use_cases/streaming_detection_use_case_test.py::TestConcurrentProcessing::test_concurrent_batch_processing",
  "application/use_cases/streaming_detection_use_case_test.py::TestConcurrentProcessing::test_concurrent_stream_operations",
  "application/use_cases/streaming_detection_use_case_test.py::TestErrorHandling::test_invalid_configuration_error",
  "application/use_cases/streaming_detection_use_case_test.py::TestErrorHandling::test_stream_not_found_error",
  "application/use_cases/streaming_detection_use_case_test.py::TestErrorHandling::test_stream_processing_error_recovery",
  "application/use_cases/streaming_detection_use_case_test.py::TestMetricsCollection::test_collect_metrics",
  "application/use_cases/streaming_detection_use_case_test.py::TestMetricsCollection::test_metrics_aggregation",
  "application/use_cases/streaming_detection_use_case_test.py::TestMetricsCollection::test_update_metrics_on_processing",
  "application/use_cases/streaming_detection_use_case_test.py::TestPerformanceCharacteristics::test_latency_characteristics",
  "application/use_cases/streaming_detection_use_case_test.py::TestPerformanceCharacteristics::test_memory_efficiency",
  "application/use_cases/streaming_detection_use_case_test.py::TestPerformanceCharacteristics::test_processing_throughput",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamConfiguration::test_create_stream_success",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamConfiguration::test_get_stream_status",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamConfiguration::test_start_stream_success",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamConfiguration::test_stop_stream_success",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamConfiguration::test_update_configuration",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamProcessing::test_batch_aggregation",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamProcessing::test_process_batch_detector_error",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamProcessing::test_process_batch_detector_not_found",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamProcessing::test_process_batch_success",
  "application/use_cases/streaming_detection_use_case_test.py::TestStreamProcessing::test_process_single_data_point",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_calculates_appropriate_threshold",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_handles_detection_errors",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_handles_empty_dataset",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_orchestrates_complete_detection_workflow",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_provides_backward_compatibility",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_saves_results_when_requested",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_skips_validation_when_disabled",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_validates_data_quality_when_enabled",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_validates_detector_exists",
  "application/use_cases/test_detect_anomalies.py::TestDetectAnomaliesUseCase::test_execute_validates_detector_is_fitted",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_create_drift_alert",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_error_handling_in_detection",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_generate_drift_report",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_get_drift_metrics",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_get_monitoring_status",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_initialization",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_initialization_with_defaults",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_monitor_model_continuous",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_notification_failure_handling",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_run_concept_drift_detection",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_run_drift_detection_basic",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_run_drift_detection_with_config",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_send_drift_notification",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_stop_monitoring",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCase::test_update_monitoring_config",
  "application/use_cases/test_drift_monitoring_use_case.py::TestDriftMonitoringUseCaseIntegration::test_end_to_end_monitoring_workflow",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_cache_key_generation",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_cache_management",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_data_preparation_different_formats",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_cascaded_voting",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_consensus_voting",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_detector_not_found",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_dynamic_selection",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_simple_average",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_uncertainty_weighted",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_unfitted_detector",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_validation_errors",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_weighted_average",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_detect_anomalies_ensemble_with_caching",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_ensemble_metrics_calculation",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_explanation_generation",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_individual_detector_failure_handling",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_optimization_history_tracking",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_optimize_ensemble_basic",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_optimize_ensemble_dataset_not_found",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_optimize_ensemble_validation_errors",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_performance_tracking_updates",
  "application/use_cases/test_ensemble_detection_use_case.py::TestEnsembleDetectionUseCase::test_voting_strategy_robustness",
  "application/use_cases/test_streaming_detection_use_case.py::TestBackpressureHandling::test_backpressure_detection",
  "application/use_cases/test_streaming_detection_use_case.py::TestBackpressureHandling::test_backpressure_handling_newest_drop",
  "application/use_cases/test_streaming_detection_use_case.py::TestBackpressureHandling::test_backpressure_handling_oldest_drop",
  "application/use_cases/test_streaming_detection_use_case.py::TestCheckpointManagement::test_checkpoint_cleanup",
  "application/use_cases/test_streaming_detection_use_case.py::TestCheckpointManagement::test_load_checkpoint",
  "application/use_cases/test_streaming_detection_use_case.py::TestCheckpointManagement::test_save_checkpoint",
  "application/use_cases/test_streaming_detection_use_case.py::TestConcurrentProcessing::test_concurrent_batch_processing",
  "application/use_cases/test_streaming_detection_use_case.py::TestConcurrentProcessing::test_concurrent_stream_operations",
  "application/use_cases/test_streaming_detection_use_case.py::TestErrorHandling::test_invalid_configuration_error",
  "application/use_cases/test_streaming_detection_use_case.py::TestErrorHandling::test_stream_not_found_error",
  "application/use_cases/test_streaming_detection_use_case.py::TestErrorHandling::test_stream_processing_error_recovery",
  "application/use_cases/test_streaming_detection_use_case.py::TestMetricsCollection::test_collect_metrics",
  "application/use_cases/test_streaming_detection_use_case.py::TestMetricsCollection::test_metrics_aggregation",
  "application/use_cases/test_streaming_detection_use_case.py::TestMetricsCollection::test_update_metrics_on_processing",
  "application/use_cases/test_streaming_detection_use_case.py::TestPerformanceCharacteristics::test_latency_characteristics",
  "application/use_cases/test_streaming_detection_use_case.py::TestPerformanceCharacteristics::test_memory_efficiency",
  "application/use_cases/test_streaming_detection_use_case.py::TestPerformanceCharacteristics::test_processing_throughput",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamConfiguration::test_create_stream_success",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamConfiguration::test_get_stream_status",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamConfiguration::test_start_stream_success",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamConfiguration::test_stop_stream_success",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamConfiguration::test_update_configuration",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamProcessing::test_batch_aggregation",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamProcessing::test_process_batch_detector_error",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamProcessing::test_process_batch_detector_not_found",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamProcessing::test_process_batch_success",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamProcessing::test_process_single_data_point",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_add_sample_backpressure_drop_newest",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_add_sample_backpressure_drop_oldest",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_add_sample_circuit_breaker",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_add_sample_success",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_ensemble_streaming_missing_detector",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_ensemble_streaming_validation",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_get_stream_metrics",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_list_active_streams",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_processing_batch_adaptive_strategy",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_processing_batch_real_time_strategy",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_sample_data_formats",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_start_streaming_detector_not_fitted",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_start_streaming_detector_not_found",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_start_streaming_max_concurrent_limit",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_start_streaming_success",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_stop_streaming_not_found",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_stop_streaming_success",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_configuration_defaults",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_configuration_validation",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_configuration_validation_watermarks",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_enums",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_metrics_initialization",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_performance_metrics_update",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_result_creation",
  "application/use_cases/test_streaming_detection_use_case.py::TestStreamingDetectionUseCase::test_streaming_sample_creation",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_handles_hyperparameter_tuning",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_handles_training_failures",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_orchestrates_complete_training_workflow",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_skips_data_validation_when_disabled",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_updates_detector_parameters",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_validates_data_quality",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_validates_dataset_size",
  "application/use_cases/test_train_detector.py::TestTrainDetectorUseCase::test_execute_validates_detector_exists",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_30_minute_time_limit",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_endpoint_exception_handling",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_endpoint_optimization_failure",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_endpoint_success",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_endpoint_unsupported_algorithm",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_parameter_validation",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_performance_criteria_calculation",
  "automl/test_automl_api.py::TestAutoMLAPI::test_automl_run_storage_functionality",
  "automl/test_automl_api.py::TestPerformanceCriteriaAPI::test_f1_improvement_calculation",
  "automl/test_automl_api.py::TestPerformanceCriteriaAPI::test_performance_improvement_formatting",
  "automl/test_automl_api.py::TestTrialPersistenceAPI::test_trial_data_json_serialization",
  "automl/test_automl_api.py::TestTrialPersistenceAPI::test_trial_data_structure",
  "automl/test_automl_cli.py::TestAutoMLCLI::test_automl_run_command_help",
  "automl/test_automl_cli.py::TestAutoMLCLI::test_automl_run_command_success",
  "automl/test_automl_cli.py::TestAutoMLCLI::test_automl_run_dataset_loading_error",
  "automl/test_automl_cli.py::TestAutoMLCLI::test_automl_run_performance_criteria_met",
  "automl/test_automl_cli.py::TestAutoMLCLI::test_automl_run_performance_criteria_not_met",
  "automl/test_automl_cli.py::TestAutoMLCLI::test_automl_run_unsupported_algorithm",
  "automl/test_automl_cli.py::TestAutoMLCLI::test_automl_run_with_output_file",
  "automl/test_automl_cli.py::TestDatasetLoading::test_load_csv_dataset",
  "automl/test_automl_cli.py::TestDatasetLoading::test_load_parquet_dataset",
  "automl/test_automl_cli.py::TestDatasetLoading::test_load_unsupported_format",
  "automl/test_automl_cli.py::TestTrialPersistence::test_storage_directory_creation",
  "automl/test_automl_cli.py::TestTrialPersistence::test_trial_results_saved_to_storage",
  "automl/test_automl_service.py::TestAutoMLService::test_auto_select_algorithm_quick_mode",
  "automl/test_automl_service.py::TestAutoMLService::test_automl_service_initialization",
  "automl/test_automl_service.py::TestAutoMLService::test_get_optimization_recommendations",
  "automl/test_automl_service.py::TestAutoMLService::test_global_automl_service_instance",
  "automl/test_automl_service.py::TestAutoMLService::test_optimization_with_mock_detection_service",
  "automl/test_automl_service.py::TestAutoMLService::test_parameter_spaces_initialization",
  "automl/test_automl_service.py::TestAutoMLService::test_pyod_parameter_spaces",
  "automl/test_automl_service.py::TestAutoMLService::test_quick_algorithm_selection",
  "automl/test_automl_service.py::TestOptimizationConfig::test_custom_config",
  "automl/test_automl_service.py::TestOptimizationConfig::test_default_config",
  "automl/test_automl_service.py::TestOptimizationResult::test_optimization_result_creation",
  "automl/test_automl_service.py::TestPerformanceRequirements::test_100_trials_under_30_minutes",
  "automl/test_automl_service.py::TestPerformanceRequirements::test_f1_improvement_calculation",
  "automl/test_automl_service.py::TestPyODAlgorithmSupport::test_pyod_specific_parameters",
  "automl/test_automl_service.py::TestPyODAlgorithmSupport::test_supported_pyod_algorithms",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_algorithm_comparison_medium_dataset[IsolationForest]",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_algorithm_comparison_medium_dataset[LocalOutlierFactor]",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_algorithm_comparison_medium_dataset[OneClassSVM]",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_isolation_forest_performance[100-5]",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_isolation_forest_performance[1000-10]",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_isolation_forest_performance[10000-50]",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_isolation_forest_performance[5000-20]",
  "benchmarks/test_algorithm_performance.py::TestAlgorithmPerformance::test_large_dataset_scalability",
  "benchmarks/test_algorithm_performance.py::TestConcurrencyPerformance::test_parallel_execution",
  "benchmarks/test_algorithm_performance.py::TestMemoryPerformance::test_memory_usage_scaling[10000]",
  "benchmarks/test_algorithm_performance.py::TestMemoryPerformance::test_memory_usage_scaling[1000]",
  "benchmarks/test_algorithm_performance.py::TestMemoryPerformance::test_memory_usage_scaling[5000]",
  "benchmarks/test_algorithm_performance.py::TestPerformanceRegression::test_baseline_performance",
  "benchmarks/test_algorithm_performance.py::test_performance_summary",
  "benchmarks/test_edge_performance_validation.py::TestEdgePerformanceValidation::test_medium_dataset_stress",
  "benchmarks/test_edge_performance_validation.py::TestEdgePerformanceValidation::test_small_dataset_benchmark",
  "benchmarks/test_large_scale_performance.py::TestLargeScalePerformance::test_high_dimensional_performance",
  "benchmarks/test_large_scale_performance.py::TestLargeScalePerformance::test_large_scale_throughput",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmFittingBranches::test_fitting_convergence_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmFittingBranches::test_fitting_with_different_data_sizes",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmFittingBranches::test_incremental_learning_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmSelectionBranches::test_algorithm_availability_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmSelectionBranches::test_contamination_rate_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmSelectionBranches::test_parameter_validation_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmSpecificBranches::test_autoencoder_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmSpecificBranches::test_isolation_forest_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmSpecificBranches::test_lof_algorithm_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestAlgorithmSpecificBranches::test_ocsvm_algorithm_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestDetectionBranches::test_score_normalization_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestDetectionBranches::test_threshold_calculation_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestEnsembleAlgorithmBranches::test_feature_bagging_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestEnsembleAlgorithmBranches::test_lscp_ensemble_branches",
  "branch_coverage/test_algorithm_branch_coverage.py::TestEnsembleAlgorithmBranches::test_suod_ensemble_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestAlgorithmSelectionBranches::test_algorithm_registry_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestAlgorithmSelectionBranches::test_parameter_validation_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestConfigurationBranches::test_config_loading_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestConfigurationBranches::test_config_validation_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDataProcessingBranches::test_data_preprocessing_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDataProcessingBranches::test_data_validation_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDataProcessingBranches::test_feature_selection_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDomainEntityBranches::test_anomaly_score_validation_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDomainEntityBranches::test_contamination_rate_validation_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDomainEntityBranches::test_dataset_validation_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDomainEntityBranches::test_detection_result_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestDomainEntityBranches::test_detector_state_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestExceptionHandlingBranches::test_configuration_error_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestExceptionHandlingBranches::test_detector_not_fitted_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestExceptionHandlingBranches::test_fitting_error_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestExceptionHandlingBranches::test_invalid_algorithm_error_branches",
  "branch_coverage/test_conditional_logic_comprehensive.py::TestExceptionHandlingBranches::test_validation_error_branches",
  "branch_coverage/test_edge_case_coverage.py::TestBoundaryConditions::test_dataset_size_boundaries",
  "branch_coverage/test_edge_case_coverage.py::TestBoundaryConditions::test_floating_point_edge_cases",
  "branch_coverage/test_edge_case_coverage.py::TestBoundaryConditions::test_numeric_boundary_conditions",
  "branch_coverage/test_edge_case_coverage.py::TestBoundaryConditions::test_string_boundary_conditions",
  "branch_coverage/test_edge_case_coverage.py::TestDataTypeEdgeCases::test_categorical_edge_cases",
  "branch_coverage/test_edge_case_coverage.py::TestDataTypeEdgeCases::test_datetime_edge_cases",
  "branch_coverage/test_edge_case_coverage.py::TestDataTypeEdgeCases::test_mixed_data_types",
  "branch_coverage/test_edge_case_coverage.py::TestMemoryAndPerformanceEdges::test_memory_efficient_operations",
  "branch_coverage/test_edge_case_coverage.py::TestMemoryAndPerformanceEdges::test_parallel_processing_edge_cases",
  "branch_coverage/test_edge_case_coverage.py::TestMemoryAndPerformanceEdges::test_streaming_data_edge_cases",
  "branch_coverage/test_edge_case_coverage.py::TestStatisticalEdgeCases::test_correlation_edge_cases",
  "branch_coverage/test_edge_case_coverage.py::TestStatisticalEdgeCases::test_distribution_edge_cases",
  "branch_coverage/test_edge_case_coverage.py::TestStatisticalEdgeCases::test_time_series_edge_cases",
  "branch_coverage/test_error_path_coverage.py::TestConcurrencyErrorPaths::test_deadlock_prevention",
  "branch_coverage/test_error_path_coverage.py::TestConcurrencyErrorPaths::test_thread_safety_error_paths",
  "branch_coverage/test_error_path_coverage.py::TestFileOperationErrorPaths::test_database_connection_error_paths",
  "branch_coverage/test_error_path_coverage.py::TestFileOperationErrorPaths::test_file_loading_error_paths",
  "branch_coverage/test_error_path_coverage.py::TestFileOperationErrorPaths::test_memory_error_paths",
  "branch_coverage/test_error_path_coverage.py::TestFileOperationErrorPaths::test_serialization_error_paths",
  "branch_coverage/test_error_path_coverage.py::TestIntegrationErrorPaths::test_adapter_integration_errors",
  "branch_coverage/test_error_path_coverage.py::TestIntegrationErrorPaths::test_configuration_integration_errors",
  "branch_coverage/test_error_path_coverage.py::TestIntegrationErrorPaths::test_pipeline_integration_errors",
  "branch_coverage/test_error_path_coverage.py::TestPerformanceErrorPaths::test_resource_limit_errors",
  "branch_coverage/test_error_path_coverage.py::TestPerformanceErrorPaths::test_timeout_error_paths",
  "branch_coverage/test_error_path_coverage.py::TestResourceExhaustionPaths::test_disk_space_exhaustion",
  "branch_coverage/test_error_path_coverage.py::TestResourceExhaustionPaths::test_file_descriptor_exhaustion",
  "branch_coverage/test_error_path_coverage.py::TestResourceExhaustionPaths::test_network_timeout_paths",
  "branch_coverage/test_error_path_coverage.py::TestValidationErrorPaths::test_data_type_validation_errors",
  "branch_coverage/test_error_path_coverage.py::TestValidationErrorPaths::test_parameter_validation_edge_cases",
  "branch_coverage/test_error_path_coverage.py::TestValidationErrorPaths::test_schema_validation_errors",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_auto_help_failure",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_check_for_group_object_registered_commands_error",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_dataset_show_failure",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_detector_list_failure",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_export_formats_failure",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_help_command_failure",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_server_help_failure",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_trace_typer_internal_call_stack",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_typer_registered_commands_attribute_error",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_version_command_failure",
  "cli/test_cli_failures_reproduction.py::TestCLIFailuresReproduction::test_version_command_with_mocked_container",
  "cli/test_cli_failures_reproduction.py::test_typer_version_compatibility",
  "cli/test_cli_simple.py::test_autonomous_service",
  "cli/test_cli_simple.py::test_cli_help_generation",
  "cli/test_cli_simple.py::test_cli_module_structure",
  "cli/test_cli_simple.py::test_data_loaders",
  "cli/test_cli_simple.py::test_typer_cli_structure",
  "cli/test_converted_commands.py::TestConvertedCommands::test_command_without_required_args",
  "cli/test_converted_commands.py::TestConvertedCommands::test_commands_with_invalid_file_paths",
  "cli/test_converted_commands.py::TestConvertedCommands::test_commands_with_valid_file_paths",
  "cli/test_converted_commands.py::TestConvertedCommands::test_deep_learning_frameworks",
  "cli/test_converted_commands.py::TestConvertedCommands::test_deep_learning_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_deep_learning_info",
  "cli/test_converted_commands.py::TestConvertedCommands::test_deep_learning_train_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_disabled_commands_count",
  "cli/test_converted_commands.py::TestConvertedCommands::test_explainability_analyze_bias_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_explainability_explain_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_explainability_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_explainability_info",
  "cli/test_converted_commands.py::TestConvertedCommands::test_explainability_status",
  "cli/test_converted_commands.py::TestConvertedCommands::test_invalid_choice_options",
  "cli/test_converted_commands.py::TestConvertedCommands::test_main_help_shows_converted_commands",
  "cli/test_converted_commands.py::TestConvertedCommands::test_selection_benchmark_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_selection_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_selection_learn_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_selection_recommend_help",
  "cli/test_converted_commands.py::TestConvertedCommands::test_selection_status",
  "cli/test_converted_commands.py::test_cli_imports_successfully",
  "cli/test_dashboard_cli_functional.py::test_available_subcommands",
  "cli/test_dashboard_cli_functional.py::test_cli_persistence",
  "cli/test_dashboard_cli_functional.py::test_command_help_output",
  "cli/test_dashboard_cli_functional.py::test_command_robustness",
  "cli/test_dashboard_cli_functional.py::test_error_handling",
  "cli/test_dashboard_cli_functional.py::test_exit_codes",
  "cli/test_dashboard_cli_functional.py::test_generate_config_command",
  "cli/test_dashboard_cli_functional.py::test_help_command",
  "cli/test_dashboard_cli_functional.py::test_output_format",
  "cli/test_dashboard_cli_functional.py::test_quiet_flag",
  "cli/test_dashboard_cli_functional.py::test_status_command",
  "cli/test_dashboard_cli_functional.py::test_verbose_flag",
  "cli/test_dashboard_cli_functional.py::test_version_command",
  "cli/test_integration.py::test_anomaly_detection",
  "cli/test_integration.py::test_dataset_loading",
  "cli/test_integration.py::test_detector_creation",
  "cli/test_integration.py::test_help_command",
  "cli/test_integration.py::test_invalid_input_handling",
  "cli/test_integration.py::test_training_detector",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_cli_commands_work_correctly",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_commands_that_were_failing_in_integration_report",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_create_red_test_for_typer_incompatibility",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_demonstrate_old_typer_code_pattern_failure",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_group_object_registered_commands_original_issue",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_registered_commands_compatibility",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_simulate_original_integration_failure",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_typer_version_compatibility",
  "cli/test_typer_compatibility_failures.py::TestTyperCompatibilityFailures::test_version_command_isolated",
  "cli/test_typer_compatibility_failures.py::test_typer_version_information",
  "contract/test_adapter_contracts.py::TestAdapterErrorHandling::test_consistent_error_types",
  "contract/test_adapter_contracts.py::TestAdapterErrorHandling::test_graceful_failure_on_invalid_data",
  "contract/test_adapter_contracts.py::TestAdapterErrorHandling::test_unfitted_detector_behavior",
  "contract/test_adapter_contracts.py::TestAdapterInteroperability::test_adapter_interface_consistency",
  "contract/test_adapter_contracts.py::TestAdapterInteroperability::test_cross_adapter_result_correlation",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_adapter_creates_valid_detector",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_adapter_provides_algorithms",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_contamination_parameter_effect",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_decision_function_workflow",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_detector_has_required_methods",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_deterministic_behavior",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_edge_cases",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_fit_predict_workflow",
  "contract/test_adapter_contracts.py::TestPyODAdapterContract::test_input_validation",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_adapter_creates_valid_detector",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_adapter_provides_algorithms",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_contamination_parameter_effect",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_decision_function_workflow",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_detector_has_required_methods",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_deterministic_behavior",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_edge_cases",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_fit_predict_workflow",
  "contract/test_adapter_contracts.py::TestSklearnAdapterContract::test_input_validation",
  "contracts/test_api_contracts_phase3.py::TestAPIContractValidationPhase3::test_api_contract_backward_compatibility",
  "contracts/test_api_contracts_phase3.py::TestAPIContractValidationPhase3::test_dataset_api_contract_validation",
  "contracts/test_api_contracts_phase3.py::TestAPIContractValidationPhase3::test_detection_api_contract_validation",
  "contracts/test_api_contracts_phase3.py::TestAPIContractValidationPhase3::test_detector_api_contract_validation",
  "contracts/test_api_contracts_phase3.py::TestAPIContractValidationPhase3::test_error_response_contract_validation",
  "contracts/test_api_contracts_phase3.py::TestInterfaceCompliancePhase3::test_data_loader_protocol_compliance",
  "contracts/test_api_contracts_phase3.py::TestInterfaceCompliancePhase3::test_detector_protocol_compliance",
  "contracts/test_api_contracts_phase3.py::TestInterfaceCompliancePhase3::test_phase3_contract_completion",
  "contracts/test_api_contracts_phase3.py::TestInterfaceCompliancePhase3::test_repository_protocol_compliance",
  "contracts/test_api_contracts_phase3.py::TestInterfaceCompliancePhase3::test_use_case_protocol_compliance",
  "cross_platform/test_compatibility_phase3.py::TestDeploymentScenarioTestingPhase3::test_cloud_deployment_simulation",
  "cross_platform/test_compatibility_phase3.py::TestDeploymentScenarioTestingPhase3::test_configuration_management_scenarios",
  "cross_platform/test_compatibility_phase3.py::TestDeploymentScenarioTestingPhase3::test_containerized_deployment_simulation",
  "cross_platform/test_compatibility_phase3.py::TestDeploymentScenarioTestingPhase3::test_kubernetes_deployment_simulation",
  "cross_platform/test_compatibility_phase3.py::TestDeploymentScenarioTestingPhase3::test_monitoring_deployment_scenarios",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_concurrency_compatibility",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_database_driver_compatibility",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_dependency_installation_compatibility",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_environment_variable_handling",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_file_system_compatibility",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_operating_system_compatibility",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_phase3_cross_platform_completion",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_python_version_compatibility",
  "cross_platform/test_compatibility_phase3.py::TestMultiEnvironmentCompatibilityPhase3::test_unicode_and_encoding_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestCoreDependencyCompatibility::test_numpy_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestCoreDependencyCompatibility::test_pandas_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestCoreDependencyCompatibility::test_python_version_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestCoreDependencyCompatibility::test_scikit_learn_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestDependencyConflictResolution::test_dependency_tree_consistency",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestDependencyConflictResolution::test_extension_module_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestDependencyConflictResolution::test_namespace_package_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestDependencyConflictResolution::test_optional_dependency_graceful_fallback",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestDependencyConflictResolution::test_version_pinning_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestOptionalDependencyCompatibility::test_distributed_computing_dependencies",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestOptionalDependencyCompatibility::test_jax_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestOptionalDependencyCompatibility::test_pytorch_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestOptionalDependencyCompatibility::test_tensorflow_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestOptionalDependencyCompatibility::test_visualization_dependencies",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPackageManagerCompatibility::test_conda_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPackageManagerCompatibility::test_pip_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPackageManagerCompatibility::test_pipenv_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPackageManagerCompatibility::test_poetry_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPythonDistributionCompatibility::test_anaconda_distribution_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPythonDistributionCompatibility::test_cpython_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPythonDistributionCompatibility::test_pypy_compatibility",
  "cross_platform/test_dependency_compatibility_comprehensive.py::TestPythonDistributionCompatibility::test_virtual_environment_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestCloudDeploymentCompatibility::test_aws_deployment_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestCloudDeploymentCompatibility::test_azure_deployment_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestCloudDeploymentCompatibility::test_gcp_deployment_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestContainerDeploymentCompatibility::test_container_health_checks",
  "cross_platform/test_deployment_environments_comprehensive.py::TestContainerDeploymentCompatibility::test_container_resource_limits",
  "cross_platform/test_deployment_environments_comprehensive.py::TestContainerDeploymentCompatibility::test_docker_container_detection",
  "cross_platform/test_deployment_environments_comprehensive.py::TestContainerDeploymentCompatibility::test_kubernetes_deployment_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestDevelopmentEnvironmentCompatibility::test_development_debug_features",
  "cross_platform/test_deployment_environments_comprehensive.py::TestDevelopmentEnvironmentCompatibility::test_development_hot_reload_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestDevelopmentEnvironmentCompatibility::test_development_tooling_integration",
  "cross_platform/test_deployment_environments_comprehensive.py::TestEdgeDeploymentCompatibility::test_embedded_system_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestEdgeDeploymentCompatibility::test_iot_device_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestEdgeDeploymentCompatibility::test_mobile_device_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestHybridDeploymentCompatibility::test_disaster_recovery_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestHybridDeploymentCompatibility::test_multi_cloud_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestHybridDeploymentCompatibility::test_on_premises_cloud_hybrid",
  "cross_platform/test_deployment_environments_comprehensive.py::TestProductionEnvironmentCompatibility::test_production_error_handling",
  "cross_platform/test_deployment_environments_comprehensive.py::TestProductionEnvironmentCompatibility::test_production_performance_settings",
  "cross_platform/test_deployment_environments_comprehensive.py::TestProductionEnvironmentCompatibility::test_production_resource_limits",
  "cross_platform/test_deployment_environments_comprehensive.py::TestProductionEnvironmentCompatibility::test_production_security_settings",
  "cross_platform/test_deployment_environments_comprehensive.py::TestStagingEnvironmentCompatibility::test_staging_configuration_validation",
  "cross_platform/test_deployment_environments_comprehensive.py::TestStagingEnvironmentCompatibility::test_staging_database_compatibility",
  "cross_platform/test_deployment_environments_comprehensive.py::TestStagingEnvironmentCompatibility::test_staging_load_testing_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestCloudPlatformCompatibility::test_aws_environment_detection",
  "cross_platform/test_os_compatibility_comprehensive.py::TestCloudPlatformCompatibility::test_azure_environment_detection",
  "cross_platform/test_os_compatibility_comprehensive.py::TestCloudPlatformCompatibility::test_gcp_environment_detection",
  "cross_platform/test_os_compatibility_comprehensive.py::TestContainerCompatibility::test_docker_environment_detection",
  "cross_platform/test_os_compatibility_comprehensive.py::TestContainerCompatibility::test_network_configuration_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestContainerCompatibility::test_resource_constraints_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestDependencyCompatibility::test_numpy_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestDependencyCompatibility::test_pandas_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestDependencyCompatibility::test_scikit_learn_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestDeploymentEnvironmentCompatibility::test_development_environment",
  "cross_platform/test_os_compatibility_comprehensive.py::TestDeploymentEnvironmentCompatibility::test_production_environment_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestDeploymentEnvironmentCompatibility::test_testing_environment_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestEdgeDeviceCompatibility::test_arm_architecture_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestEdgeDeviceCompatibility::test_low_memory_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestEdgeDeviceCompatibility::test_offline_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestEdgeDeviceCompatibility::test_single_core_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestOperatingSystemCompatibility::test_environment_variables_cross_platform",
  "cross_platform/test_os_compatibility_comprehensive.py::TestOperatingSystemCompatibility::test_file_permissions_cross_platform",
  "cross_platform/test_os_compatibility_comprehensive.py::TestOperatingSystemCompatibility::test_file_system_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestOperatingSystemCompatibility::test_multiprocessing_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestOperatingSystemCompatibility::test_process_management_cross_platform",
  "cross_platform/test_os_compatibility_comprehensive.py::TestOperatingSystemCompatibility::test_unicode_handling_cross_platform",
  "cross_platform/test_os_compatibility_comprehensive.py::TestPythonVersionCompatibility::test_async_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestPythonVersionCompatibility::test_dataclass_compatibility",
  "cross_platform/test_os_compatibility_comprehensive.py::TestPythonVersionCompatibility::test_python_version_requirements",
  "cross_platform/test_os_compatibility_comprehensive.py::TestPythonVersionCompatibility::test_type_hints_compatibility",
  "cross_platform/test_performance_portability_comprehensive.py::TestCPUPerformancePortability::test_cpu_architecture_compatibility",
  "cross_platform/test_performance_portability_comprehensive.py::TestCPUPerformancePortability::test_cpu_thermal_throttling_resilience",
  "cross_platform/test_performance_portability_comprehensive.py::TestCPUPerformancePortability::test_multi_core_performance_scaling",
  "cross_platform/test_performance_portability_comprehensive.py::TestCPUPerformancePortability::test_single_core_performance",
  "cross_platform/test_performance_portability_comprehensive.py::TestConcurrencyPerformancePortability::test_async_performance_characteristics",
  "cross_platform/test_performance_portability_comprehensive.py::TestConcurrencyPerformancePortability::test_multiprocessing_performance_characteristics",
  "cross_platform/test_performance_portability_comprehensive.py::TestConcurrencyPerformancePortability::test_threading_performance_characteristics",
  "cross_platform/test_performance_portability_comprehensive.py::TestMemoryPerformancePortability::test_memory_access_patterns",
  "cross_platform/test_performance_portability_comprehensive.py::TestMemoryPerformancePortability::test_memory_allocation_patterns",
  "cross_platform/test_performance_portability_comprehensive.py::TestMemoryPerformancePortability::test_memory_fragmentation_resilience",
  "cross_platform/test_performance_portability_comprehensive.py::TestMemoryPerformancePortability::test_memory_pressure_handling",
  "cross_platform/test_performance_portability_comprehensive.py::TestNetworkPerformancePortability::test_localhost_communication_performance",
  "cross_platform/test_performance_portability_comprehensive.py::TestNetworkPerformancePortability::test_serialization_performance",
  "cross_platform/test_performance_portability_comprehensive.py::TestScalabilityPortability::test_concurrent_user_scalability",
  "cross_platform/test_performance_portability_comprehensive.py::TestScalabilityPortability::test_data_size_scalability",
  "cross_platform/test_performance_portability_comprehensive.py::TestScalabilityPortability::test_memory_usage_scalability",
  "cross_platform/test_performance_portability_comprehensive.py::TestStoragePerformancePortability::test_database_io_performance",
  "cross_platform/test_performance_portability_comprehensive.py::TestStoragePerformancePortability::test_dataframe_io_performance",
  "cross_platform/test_performance_portability_comprehensive.py::TestStoragePerformancePortability::test_file_io_performance",
  "domain/entities/lineage_record_test.py::TestLineageArtifact::test_artifact_creation",
  "domain/entities/lineage_record_test.py::TestLineageArtifact::test_artifact_minimal_creation",
  "domain/entities/lineage_record_test.py::TestLineageEnums::test_enum_values_in_record",
  "domain/entities/lineage_record_test.py::TestLineageEnums::test_lineage_relation_types",
  "domain/entities/lineage_record_test.py::TestLineageEnums::test_transformation_types",
  "domain/entities/lineage_record_test.py::TestLineageNode::test_node_creation",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_add_input_artifact",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_add_output_artifact",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_get_all_model_ids",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_is_direct_descendant_false_wrong_child",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_is_direct_descendant_false_wrong_parent",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_is_direct_descendant_true",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_lineage_record_creation",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_lineage_with_experiment_metadata",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_lineage_with_provenance",
  "domain/entities/lineage_record_test.py::TestLineageRecord::test_multiple_parents",
  "domain/entities/lineage_record_test.py::TestLineageRecordValidation::test_record_immutable_after_creation",
  "domain/entities/lineage_record_test.py::TestLineageRecordValidation::test_record_with_empty_parent_list",
  "domain/entities/lineage_record_test.py::TestLineageRecordValidation::test_valid_record_creation",
  "domain/entities/test_detector.py::TestDetectorDetection::test_detect_provides_confidence_intervals",
  "domain/entities/test_detector.py::TestDetectorDetection::test_detect_with_empty_dataset_handles_gracefully",
  "domain/entities/test_detector.py::TestDetectorDetection::test_detect_with_fitted_detector_returns_detection_result",
  "domain/entities/test_detector.py::TestDetectorDetection::test_detect_with_unfitted_detector_raises_error",
  "domain/entities/test_detector.py::TestDetectorTraining::test_train_updates_detector_state",
  "domain/entities/test_detector.py::TestDetectorTraining::test_train_with_algorithm_error_handles_gracefully",
  "domain/entities/test_detector.py::TestDetectorTraining::test_train_with_empty_dataset_raises_error",
  "domain/entities/test_detector.py::TestDetectorTraining::test_train_with_valid_dataset_returns_training_result",
  "domain/entities/test_detector.py::TestDetectorValidation::test_detector_requires_algorithm_adapter",
  "domain/entities/test_detector.py::TestDetectorValidation::test_train_validates_dataset_compatibility",
  "domain/entities/test_lineage_record.py::TestLineageArtifact::test_artifact_creation",
  "domain/entities/test_lineage_record.py::TestLineageArtifact::test_artifact_minimal_creation",
  "domain/entities/test_lineage_record.py::TestLineageEnums::test_enum_values_in_record",
  "domain/entities/test_lineage_record.py::TestLineageEnums::test_lineage_relation_types",
  "domain/entities/test_lineage_record.py::TestLineageEnums::test_transformation_types",
  "domain/entities/test_lineage_record.py::TestLineageNode::test_node_creation",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_add_input_artifact",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_add_output_artifact",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_get_all_model_ids",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_is_direct_descendant_false_wrong_child",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_is_direct_descendant_false_wrong_parent",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_is_direct_descendant_true",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_lineage_record_creation",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_lineage_with_experiment_metadata",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_lineage_with_provenance",
  "domain/entities/test_lineage_record.py::TestLineageRecord::test_multiple_parents",
  "domain/entities/test_lineage_record.py::TestLineageRecordValidation::test_record_immutable_after_creation",
  "domain/entities/test_lineage_record.py::TestLineageRecordValidation::test_record_with_empty_parent_list",
  "domain/entities/test_lineage_record.py::TestLineageRecordValidation::test_valid_record_creation",
  "domain/services/test_explainable_ai_service_fallback.py::TestExplainableAIServiceFallback::test_domain_service_import_without_shap_lime",
  "domain/services/test_explainable_ai_service_fallback.py::TestExplainableAIServiceFallback::test_flags_always_defined",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_acknowledge_event",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_add_remove_tags",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_create_minimal_event",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_get_age",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_ignore_event",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_is_actionable",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_mark_failed",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_mark_processing",
  "domain/test_anomaly_event.py::TestAnomalyEvent::test_resolve_event",
  "domain/test_anomaly_event.py::TestAnomalyEventData::test_anomaly_score_validation",
  "domain/test_anomaly_event.py::TestAnomalyEventData::test_confidence_validation",
  "domain/test_anomaly_event.py::TestAnomalyEventData::test_valid_anomaly_event_data",
  "domain/test_anomaly_event.py::TestDataQualityEventData::test_percentage_validation",
  "domain/test_anomaly_event.py::TestDataQualityEventData::test_severity_score_validation",
  "domain/test_anomaly_event.py::TestDataQualityEventData::test_valid_data_quality_event",
  "domain/test_anomaly_event.py::TestEventAggregation::test_create_event_aggregation",
  "domain/test_anomaly_event.py::TestEventFilter::test_anomaly_score_filters",
  "domain/test_anomaly_event.py::TestEventFilter::test_default_event_filter",
  "domain/test_anomaly_event.py::TestEventFilter::test_event_filter_validation",
  "domain/test_anomaly_event.py::TestEventPattern::test_create_event_pattern",
  "domain/test_anomaly_event.py::TestEventPattern::test_pattern_validation",
  "domain/test_anomaly_event.py::TestEventSummary::test_create_event_summary",
  "domain/test_anomaly_event.py::TestEventSummary::test_summary_validation",
  "domain/test_anomaly_event.py::TestPerformanceEventData::test_trend_direction_validation",
  "domain/test_anomaly_event.py::TestPerformanceEventData::test_valid_performance_event",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_arithmetic",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_classification",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_comparison",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_confidence_level",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_creation_boundary_values",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_creation_invalid",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_creation_valid",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_serialization",
  "domain/test_comprehensive_domain.py::TestAnomalyScoreValueObject::test_anomaly_score_statistical_operations",
  "domain/test_comprehensive_domain.py::TestContaminationRateValueObject::test_contamination_rate_adjustment",
  "domain/test_comprehensive_domain.py::TestContaminationRateValueObject::test_contamination_rate_creation_boundary",
  "domain/test_comprehensive_domain.py::TestContaminationRateValueObject::test_contamination_rate_creation_invalid",
  "domain/test_comprehensive_domain.py::TestContaminationRateValueObject::test_contamination_rate_creation_valid",
  "domain/test_comprehensive_domain.py::TestContaminationRateValueObject::test_contamination_rate_to_sample_count",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_add_sample",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_add_sample_invalid_dimensions",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_creation_minimal",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_creation_valid",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_equality",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_get_subset",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_quality_assessment",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_remove_sample",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_serialization",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_statistics",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_transformation_log",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_validation_empty_data",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_validation_mismatched_features",
  "domain/test_comprehensive_domain.py::TestDatasetEntity::test_dataset_versioning",
  "domain/test_comprehensive_domain.py::TestDetectionResultEntity::test_detection_result_anomaly_extraction",
  "domain/test_comprehensive_domain.py::TestDetectionResultEntity::test_detection_result_creation_valid",
  "domain/test_comprehensive_domain.py::TestDetectionResultEntity::test_detection_result_export_formats",
  "domain/test_comprehensive_domain.py::TestDetectionResultEntity::test_detection_result_performance_metrics",
  "domain/test_comprehensive_domain.py::TestDetectionResultEntity::test_detection_result_statistical_summary",
  "domain/test_comprehensive_domain.py::TestDetectionResultEntity::test_detection_result_threshold_adjustment",
  "domain/test_comprehensive_domain.py::TestDetectionResultEntity::test_detection_result_validation_mismatched_lengths",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_clone",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_creation_minimal",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_creation_valid",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_fit_already_fitted",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_fit_operation",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_hyperparameter_tuning",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_model_persistence",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_parameter_validation",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_performance_tracking",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_predict_fitted",
  "domain/test_comprehensive_domain.py::TestDetectorEntity::test_detector_predict_unfitted",
  "domain/test_comprehensive_domain.py::TestDomainEvents::test_anomaly_detected_event",
  "domain/test_comprehensive_domain.py::TestDomainEvents::test_detector_created_event",
  "domain/test_comprehensive_domain.py::TestDomainEvents::test_event_serialization",
  "domain/test_comprehensive_domain.py::TestDomainEvents::test_experiment_completed_event",
  "domain/test_comprehensive_domain.py::TestDomainServices::test_data_quality_service_assessment",
  "domain/test_comprehensive_domain.py::TestDomainServices::test_detection_service_single_detection",
  "domain/test_comprehensive_domain.py::TestDomainServices::test_ensemble_service_multiple_detectors",
  "domain/test_comprehensive_domain.py::TestDomainServices::test_model_validation_service_cross_validation",
  "domain/test_comprehensive_domain.py::TestDomainServices::test_performance_analysis_service_comparison",
  "domain/test_comprehensive_domain.py::TestDomainSpecifications::test_high_quality_dataset_specification",
  "domain/test_comprehensive_domain.py::TestDomainSpecifications::test_specification_composition",
  "domain/test_comprehensive_domain.py::TestDomainSpecifications::test_trained_detector_specification",
  "domain/test_domain_services_comprehensive.py::TestAnomalyScorer::test_contextual_scoring",
  "domain/test_domain_services_comprehensive.py::TestAnomalyScorer::test_density_scoring",
  "domain/test_domain_services_comprehensive.py::TestAnomalyScorer::test_distance_scoring",
  "domain/test_domain_services_comprehensive.py::TestAnomalyScorer::test_ensemble_scoring",
  "domain/test_domain_services_comprehensive.py::TestAnomalyScorer::test_isolation_scoring",
  "domain/test_domain_services_comprehensive.py::TestAnomalyScorer::test_score_calibration",
  "domain/test_domain_services_comprehensive.py::TestAnomalyScorer::test_statistical_scoring",
  "domain/test_domain_services_comprehensive.py::TestEnsembleAggregator::test_adaptive_ensemble",
  "domain/test_domain_services_comprehensive.py::TestEnsembleAggregator::test_ensemble_diversity_analysis",
  "domain/test_domain_services_comprehensive.py::TestEnsembleAggregator::test_rank_aggregation",
  "domain/test_domain_services_comprehensive.py::TestEnsembleAggregator::test_stacking_aggregation",
  "domain/test_domain_services_comprehensive.py::TestEnsembleAggregator::test_uncertainty_aware_ensemble",
  "domain/test_domain_services_comprehensive.py::TestEnsembleAggregator::test_voting_aggregation",
  "domain/test_domain_services_comprehensive.py::TestEnsembleAggregator::test_weighted_averaging",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_comparative_explanation",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_counterfactual_explanation",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_ensemble_explanation",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_explanation_quality_assessment",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_feature_importance_explanation",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_lime_explanation",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_rule_based_explanation",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_shap_explanation",
  "domain/test_domain_services_comprehensive.py::TestExplainabilityService::test_temporal_explanation",
  "domain/test_domain_services_comprehensive.py::TestFeatureValidator::test_comprehensive_validation",
  "domain/test_domain_services_comprehensive.py::TestFeatureValidator::test_feature_validation_with_remediation",
  "domain/test_domain_services_comprehensive.py::TestFeatureValidator::test_validate_feature_correlation",
  "domain/test_domain_services_comprehensive.py::TestFeatureValidator::test_validate_feature_distribution",
  "domain/test_domain_services_comprehensive.py::TestFeatureValidator::test_validate_feature_importance",
  "domain/test_domain_services_comprehensive.py::TestFeatureValidator::test_validate_feature_types",
  "domain/test_domain_services_comprehensive.py::TestFeatureValidator::test_validate_missing_values",
  "domain/test_domain_services_comprehensive.py::TestThresholdCalculator::test_calculate_adaptive_threshold",
  "domain/test_domain_services_comprehensive.py::TestThresholdCalculator::test_calculate_contamination_threshold",
  "domain/test_domain_services_comprehensive.py::TestThresholdCalculator::test_calculate_percentile_threshold",
  "domain/test_domain_services_comprehensive.py::TestThresholdCalculator::test_calculate_statistical_threshold",
  "domain/test_domain_services_comprehensive.py::TestThresholdCalculator::test_calculate_threshold_with_confidence",
  "domain/test_domain_services_comprehensive.py::TestThresholdCalculator::test_threshold_optimization",
  "domain/test_domain_services_comprehensive.py::TestThresholdCalculator::test_threshold_validation",
  "domain/test_drift_report.py::TestDriftConfiguration::test_configuration_validation",
  "domain/test_drift_report.py::TestDriftConfiguration::test_custom_configuration",
  "domain/test_drift_report.py::TestDriftConfiguration::test_default_configuration",
  "domain/test_drift_report.py::TestDriftConfiguration::test_severity_thresholds",
  "domain/test_drift_report.py::TestDriftMonitor::test_create_drift_monitor",
  "domain/test_drift_report.py::TestDriftMonitor::test_monitor_frequency_validation",
  "domain/test_drift_report.py::TestDriftMonitor::test_needs_alert",
  "domain/test_drift_report.py::TestDriftMonitor::test_recent_reports_limit",
  "domain/test_drift_report.py::TestDriftMonitor::test_record_drift_detection",
  "domain/test_drift_report.py::TestDriftMonitor::test_should_check_now",
  "domain/test_drift_report.py::TestDriftReport::test_create_drift_report",
  "domain/test_drift_report.py::TestDriftReport::test_get_drift_summary",
  "domain/test_drift_report.py::TestDriftReport::test_get_high_priority_features",
  "domain/test_drift_report.py::TestDriftReport::test_get_recommended_actions",
  "domain/test_drift_report.py::TestDriftReport::test_requires_immediate_attention",
  "domain/test_drift_report.py::TestFeatureDrift::test_create_feature_drift",
  "domain/test_entities.py::TestAnomaly::test_anomaly_validation",
  "domain/test_entities.py::TestAnomaly::test_create_anomaly",
  "domain/test_entities.py::TestDataset::test_create_dataset",
  "domain/test_entities.py::TestDataset::test_dataset_split",
  "domain/test_entities.py::TestDataset::test_dataset_validation",
  "domain/test_entities.py::TestDataset::test_get_feature_types",
  "domain/test_entities.py::TestDetectionResult::test_create_detection_result",
  "domain/test_entities.py::TestDetectionResult::test_detection_result_validation",
  "domain/test_entities.py::TestDetector::test_create_detector",
  "domain/test_entities.py::TestDetector::test_detector_validation",
  "domain/test_entities.py::TestDetector::test_update_parameters",
  "domain/test_value_objects.py::TestAnomalyScore::test_anomaly_score_comparison",
  "domain/test_value_objects.py::TestAnomalyScore::test_anomaly_score_with_confidence",
  "domain/test_value_objects.py::TestAnomalyScore::test_create_anomaly_score",
  "domain/test_value_objects.py::TestAnomalyScore::test_invalid_anomaly_score",
  "domain/test_value_objects.py::TestConfidenceInterval::test_confidence_interval_contains",
  "domain/test_value_objects.py::TestConfidenceInterval::test_confidence_interval_validation",
  "domain/test_value_objects.py::TestConfidenceInterval::test_create_confidence_interval",
  "domain/test_value_objects.py::TestContaminationRate::test_contamination_rate_validation",
  "domain/test_value_objects.py::TestContaminationRate::test_create_contamination_rate",
  "domain/test_value_objects.py::TestThresholdConfig::test_create_threshold_config",
  "domain/test_value_objects.py::TestThresholdConfig::test_threshold_config_defaults",
  "domain/test_value_objects.py::TestThresholdConfig::test_threshold_config_validation",
  "domain/test_value_objects_comprehensive.py::TestAnomalyScoreAdvanced::test_anomaly_score_calibration",
  "domain/test_value_objects_comprehensive.py::TestAnomalyScoreAdvanced::test_anomaly_score_explanation",
  "domain/test_value_objects_comprehensive.py::TestAnomalyScoreAdvanced::test_anomaly_score_temporal_context",
  "domain/test_value_objects_comprehensive.py::TestAnomalyScoreAdvanced::test_anomaly_score_uncertainty",
  "domain/test_value_objects_comprehensive.py::TestContaminationRateAdvanced::test_contamination_rate_adaptive",
  "domain/test_value_objects_comprehensive.py::TestContaminationRateAdvanced::test_contamination_rate_confidence_interval",
  "domain/test_value_objects_comprehensive.py::TestContaminationRateAdvanced::test_contamination_rate_optimization",
  "domain/test_value_objects_comprehensive.py::TestContaminationRateAdvanced::test_contamination_rate_validation_advanced",
  "domain/test_value_objects_comprehensive.py::TestModelStorageInfo::test_model_storage_info_checksum_verification",
  "domain/test_value_objects_comprehensive.py::TestModelStorageInfo::test_model_storage_info_creation",
  "domain/test_value_objects_comprehensive.py::TestModelStorageInfo::test_model_storage_info_metadata",
  "domain/test_value_objects_comprehensive.py::TestModelStorageInfo::test_model_storage_info_size_formatting",
  "domain/test_value_objects_comprehensive.py::TestModelStorageInfo::test_model_storage_info_validation",
  "domain/test_value_objects_comprehensive.py::TestPerformanceMetrics::test_performance_metrics_aggregation",
  "domain/test_value_objects_comprehensive.py::TestPerformanceMetrics::test_performance_metrics_calculations",
  "domain/test_value_objects_comprehensive.py::TestPerformanceMetrics::test_performance_metrics_comparison",
  "domain/test_value_objects_comprehensive.py::TestPerformanceMetrics::test_performance_metrics_confidence_intervals",
  "domain/test_value_objects_comprehensive.py::TestPerformanceMetrics::test_performance_metrics_creation",
  "domain/test_value_objects_comprehensive.py::TestPerformanceMetrics::test_performance_metrics_validation",
  "domain/test_value_objects_comprehensive.py::TestSemanticVersion::test_semantic_version_comparison",
  "domain/test_value_objects_comprehensive.py::TestSemanticVersion::test_semantic_version_compatibility",
  "domain/test_value_objects_comprehensive.py::TestSemanticVersion::test_semantic_version_creation",
  "domain/test_value_objects_comprehensive.py::TestSemanticVersion::test_semantic_version_operations",
  "domain/test_value_objects_comprehensive.py::TestSemanticVersion::test_semantic_version_validation",
  "domain/test_value_objects_comprehensive.py::TestThresholdConfigAdvanced::test_threshold_config_adaptive",
  "domain/test_value_objects_comprehensive.py::TestThresholdConfigAdvanced::test_threshold_config_contextual",
  "domain/test_value_objects_comprehensive.py::TestThresholdConfigAdvanced::test_threshold_config_multi_criteria",
  "domain/test_value_objects_comprehensive.py::TestThresholdConfigAdvanced::test_threshold_config_serialization",
  "domain/test_value_objects_comprehensive.py::TestThresholdConfigAdvanced::test_threshold_config_validation_complex",
  "domain/test_value_objects_simple.py::TestAnomalyScore::test_boundary_values",
  "domain/test_value_objects_simple.py::TestAnomalyScore::test_invalid_scores",
  "domain/test_value_objects_simple.py::TestAnomalyScore::test_property_valid_range",
  "domain/test_value_objects_simple.py::TestAnomalyScore::test_score_comparison",
  "domain/test_value_objects_simple.py::TestAnomalyScore::test_score_is_anomaly_property",
  "domain/test_value_objects_simple.py::TestAnomalyScore::test_valid_score_creation",
  "domain/test_value_objects_simple.py::TestConfidenceInterval::test_boundary_intervals",
  "domain/test_value_objects_simple.py::TestConfidenceInterval::test_interval_properties",
  "domain/test_value_objects_simple.py::TestConfidenceInterval::test_invalid_intervals",
  "domain/test_value_objects_simple.py::TestConfidenceInterval::test_property_valid_intervals",
  "domain/test_value_objects_simple.py::TestConfidenceInterval::test_valid_interval_creation",
  "domain/test_value_objects_simple.py::TestContaminationRate::test_boundary_values",
  "domain/test_value_objects_simple.py::TestContaminationRate::test_invalid_rates",
  "domain/test_value_objects_simple.py::TestContaminationRate::test_property_valid_range",
  "domain/test_value_objects_simple.py::TestContaminationRate::test_typical_contamination_rates",
  "domain/test_value_objects_simple.py::TestContaminationRate::test_valid_rate_creation",
  "domain/test_value_objects_simple.py::TestValueObjectEdgeCases::test_floating_point_precision",
  "domain/test_value_objects_simple.py::TestValueObjectEdgeCases::test_numpy_compatibility",
  "domain/test_value_objects_simple.py::TestValueObjectEdgeCases::test_type_coercion",
  "domain/test_value_objects_simple.py::TestValueObjectIntegration::test_anomaly_score_with_confidence_interval",
  "domain/test_value_objects_simple.py::TestValueObjectIntegration::test_contamination_rate_for_threshold_calculation",
  "domain/test_value_objects_simple.py::TestValueObjectIntegration::test_score_threshold_relationship",
  "e2e/test_api_basic.py::test_basic_api",
  "e2e/test_api_dependencies.py::test_api_dependencies",
  "e2e/test_api_direct.py::test_app_creation",
  "e2e/test_api_direct.py::test_authentication_dependencies",
  "e2e/test_api_smoke.py::test_endpoints",
  "e2e/test_api_versioning_compatibility_workflows.py::TestAPIVersioningCompatibilityWorkflows::test_api_contract_testing_workflow",
  "e2e/test_api_versioning_compatibility_workflows.py::TestAPIVersioningCompatibilityWorkflows::test_api_version_discovery_workflow",
  "e2e/test_api_versioning_compatibility_workflows.py::TestAPIVersioningCompatibilityWorkflows::test_cross_version_detector_workflow",
  "e2e/test_api_versioning_compatibility_workflows.py::TestAPIVersioningCompatibilityWorkflows::test_data_format_compatibility_workflow",
  "e2e/test_api_versioning_compatibility_workflows.py::TestAPIVersioningCompatibilityWorkflows::test_deprecation_workflow",
  "e2e/test_api_versioning_compatibility_workflows.py::TestAPIVersioningCompatibilityWorkflows::test_feature_flag_workflow",
  "e2e/test_api_versioning_compatibility_workflows.py::TestAPIVersioningCompatibilityWorkflows::test_response_format_evolution_workflow",
  "e2e/test_complete_user_journey.py::TestCompleteUserJourney::test_batch_processing_workflow",
  "e2e/test_complete_user_journey.py::TestCompleteUserJourney::test_complete_api_workflow",
  "e2e/test_complete_user_journey.py::TestCompleteUserJourney::test_ensemble_detection_workflow",
  "e2e/test_complete_user_journey.py::TestCompleteUserJourney::test_error_handling_workflow",
  "e2e/test_complete_user_journey.py::TestCompleteUserJourney::test_performance_monitoring_workflow",
  "e2e/test_complete_user_journey.py::TestCompleteUserJourney::test_real_time_detection_workflow",
  "e2e/test_complete_workflow_fixed.py::test_complete_workflow_with_adapters",
  "e2e/test_data_pipeline_workflows.py::TestDataPipelineWorkflows::test_categorical_data_pipeline",
  "e2e/test_data_pipeline_workflows.py::TestDataPipelineWorkflows::test_complete_data_pipeline_workflow",
  "e2e/test_data_pipeline_workflows.py::TestDataPipelineWorkflows::test_data_validation_pipeline",
  "e2e/test_data_pipeline_workflows.py::TestDataPipelineWorkflows::test_large_scale_pipeline",
  "e2e/test_data_pipeline_workflows.py::TestDataPipelineWorkflows::test_time_series_pipeline",
  "e2e/test_disaster_recovery_resilience_workflows.py::TestDisasterRecoveryResilienceWorkflows::test_comprehensive_disaster_scenario_workflow",
  "e2e/test_disaster_recovery_resilience_workflows.py::TestDisasterRecoveryResilienceWorkflows::test_data_corruption_recovery_workflow",
  "e2e/test_disaster_recovery_resilience_workflows.py::TestDisasterRecoveryResilienceWorkflows::test_database_failure_recovery_workflow",
  "e2e/test_disaster_recovery_resilience_workflows.py::TestDisasterRecoveryResilienceWorkflows::test_high_availability_failover_workflow",
  "e2e/test_disaster_recovery_resilience_workflows.py::TestDisasterRecoveryResilienceWorkflows::test_network_partition_resilience_workflow",
  "e2e/test_disaster_recovery_resilience_workflows.py::TestDisasterRecoveryResilienceWorkflows::test_resource_exhaustion_recovery_workflow",
  "e2e/test_disaster_recovery_resilience_workflows.py::TestDisasterRecoveryResilienceWorkflows::test_system_backup_restore_workflow",
  "e2e/test_infrastructure_validation_report.py::test_api_infrastructure",
  "e2e/test_infrastructure_validation_report.py::test_async_repositories",
  "e2e/test_infrastructure_validation_report.py::test_database_infrastructure",
  "e2e/test_infrastructure_validation_report.py::test_dto_compatibility",
  "e2e/test_infrastructure_validation_report.py::test_security_infrastructure",
  "e2e/test_monitoring_alerting_workflows.py::TestMonitoringAlertingWorkflows::test_alert_system_workflow",
  "e2e/test_monitoring_alerting_workflows.py::TestMonitoringAlertingWorkflows::test_model_drift_monitoring",
  "e2e/test_monitoring_alerting_workflows.py::TestMonitoringAlertingWorkflows::test_performance_monitoring_workflow",
  "e2e/test_monitoring_alerting_workflows.py::TestMonitoringAlertingWorkflows::test_real_time_monitoring_setup",
  "e2e/test_monitoring_alerting_workflows.py::TestMonitoringAlertingWorkflows::test_streaming_anomaly_detection",
  "e2e/test_multi_algorithm_workflows.py::TestMultiAlgorithmWorkflows::test_adaptive_algorithm_selection",
  "e2e/test_multi_algorithm_workflows.py::TestMultiAlgorithmWorkflows::test_algorithm_comparison_workflow",
  "e2e/test_multi_algorithm_workflows.py::TestMultiAlgorithmWorkflows::test_cross_validation_workflow",
  "e2e/test_multi_algorithm_workflows.py::TestMultiAlgorithmWorkflows::test_ensemble_algorithm_workflow",
  "e2e/test_multi_algorithm_workflows.py::TestMultiAlgorithmWorkflows::test_hyperparameter_optimization_workflow",
  "e2e/test_performance_scaling_workflows.py::TestPerformanceScalingWorkflows::test_auto_scaling_workflow",
  "e2e/test_performance_scaling_workflows.py::TestPerformanceScalingWorkflows::test_caching_optimization_workflow",
  "e2e/test_performance_scaling_workflows.py::TestPerformanceScalingWorkflows::test_cpu_optimization_workflow",
  "e2e/test_performance_scaling_workflows.py::TestPerformanceScalingWorkflows::test_high_dimensional_performance_workflow",
  "e2e/test_performance_scaling_workflows.py::TestPerformanceScalingWorkflows::test_load_testing_workflow",
  "e2e/test_performance_scaling_workflows.py::TestPerformanceScalingWorkflows::test_memory_optimization_workflow",
  "e2e/test_performance_scaling_workflows.py::TestPerformanceScalingWorkflows::test_scalability_benchmarking_workflow",
  "e2e/test_powershell.py::test_powershell_env",
  "e2e/test_powershell_simple.py::test_powershell_env",
  "e2e/test_preprocessing_cli.py::TestCommandValidation::test_invalid_action_pipeline",
  "e2e/test_preprocessing_cli.py::TestCommandValidation::test_missing_required_arguments",
  "e2e/test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_comprehensive",
  "e2e/test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_duplicates",
  "e2e/test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_invalid_strategy",
  "e2e/test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_missing_values_dry_run",
  "e2e/test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_outliers",
  "e2e/test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_comprehensive",
  "e2e/test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_encoding",
  "e2e/test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_feature_selection",
  "e2e/test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_polynomial_features",
  "e2e/test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_scaling",
  "e2e/test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_create_from_config",
  "e2e/test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_create_interactive",
  "e2e/test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_list_empty",
  "e2e/test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_save",
  "e2e/test_preprocessing_cli.py::TestPreprocessingIntegration::test_dataset_not_found",
  "e2e/test_preprocessing_cli.py::TestPreprocessingIntegration::test_save_as_new_dataset",
  "e2e/test_preprocessing_cli.py::TestPreprocessingWorkflow::test_complete_preprocessing_workflow",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_async_operation_monitoring",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_audit_logging",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_basic_logging",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_error_reporting",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_global_monitor_functions",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_health_check_integration",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_log_export",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_memory_limits",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_metrics_summary",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_monitor_initialization",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_operation_monitoring",
  "e2e/test_production_monitoring.py::TestProductionMonitor::test_operation_monitoring_with_error",
  "e2e/test_production_readiness.py::test_configuration_management",
  "e2e/test_production_readiness.py::test_error_handling",
  "e2e/test_production_readiness.py::test_health_checks",
  "e2e/test_production_readiness.py::test_logging_infrastructure",
  "e2e/test_production_readiness.py::test_monitoring_integration",
  "e2e/test_production_readiness.py::test_security_features",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_api_key_authentication_workflow",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_brute_force_protection_workflow",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_data_encryption_workflow",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_password_security_workflow",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_role_based_access_control_workflow",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_secure_data_upload_workflow",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_session_management_workflow",
  "e2e/test_security_authentication_workflows.py::TestSecurityAuthenticationWorkflows::test_user_registration_login_workflow",
  "e2e/test_server_direct.py::test_server_direct_import",
  "e2e/test_server_direct.py::test_server_startup_config",
  "e2e/test_setup.py::test_setup",
  "e2e/test_setup_validation.py::test_cross_platform_paths",
  "e2e/test_setup_validation.py::test_setup_simple_logic",
  "e2e/test_simple_api.py::test_api_creation",
  "examples/test_example_banking_detection.py::test_basic_anomaly_detection",
  "examples/test_example_banking_detection.py::test_data_quality",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_algorithm_recommendations",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_configuration_profiles",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_early_stopping",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_error_handling",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_graceful_degradation",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_hyperparameter_optimization",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_metrics_tracking",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_optimization_with_sample_data",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_service_availability[automl]",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_automl_service_fallback",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_hyperopt_import_with_extras",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_individual_optimizer_availability[hyperopt]",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_individual_optimizer_availability[optuna]",
  "extras/test_automl_extras.py::TestAutoMLExtras::test_optuna_import_with_extras",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_deep_learning_adapter_availability[deep]",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_deep_learning_error_handling",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_deep_learning_graceful_degradation",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_deep_learning_integration_with_sample_data",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_deep_learning_model_creation",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_deep_learning_service_fallback",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_deep_learning_stub_modules",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_individual_framework_availability[jax]",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_individual_framework_availability[tensorflow]",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_individual_framework_availability[torch]",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_jax_import_with_extras",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_pytorch_import_with_extras",
  "extras/test_deep_learning_extras.py::TestDeepLearningExtras::test_tensorflow_import_with_extras",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_explainability_algorithm_recommendations",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_explainability_error_handling",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_explainability_graceful_degradation",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_explainability_integration_with_sample_data",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_explainability_service_availability[explainability]",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_explainability_service_fallback",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_lime_import_with_extras",
  "extras/test_explainability_extras.py::TestExplainabilityExtras::test_shap_import_with_extras",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_kafka_import_with_extras",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_redis_import_with_extras",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_streaming_error_handling",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_streaming_error_handling_with_mock",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_streaming_graceful_degradation",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_streaming_integration_with_sample_data",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_streaming_processor_fallback",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_streaming_service_availability[streaming]",
  "extras/test_streaming_extras.py::TestStreamingExtras::test_streaming_service_fallback",
  "fixtures/test_fixture_regression.py::test_container_fixture",
  "fixtures/test_fixture_regression.py::test_db_engine_fixture",
  "fixtures/test_fixture_regression.py::test_db_session_fixture",
  "fixtures/test_fixture_regression.py::test_large_dataset_fixture",
  "fixtures/test_fixture_regression.py::test_malicious_inputs_fixture",
  "fixtures/test_fixture_regression.py::test_mock_model_fixture",
  "fixtures/test_fixture_regression.py::test_performance_data_fixture",
  "fixtures/test_fixture_regression.py::test_sample_csv_file_fixture",
  "fixtures/test_fixture_regression.py::test_sample_data_fixture",
  "fixtures/test_fixture_regression.py::test_sample_dataset_fixture",
  "fixtures/test_fixture_regression.py::test_sample_detector_fixture",
  "fixtures/test_fixture_regression.py::test_settings_fixture",
  "fixtures/test_fixture_regression.py::test_temp_dir_fixture",
  "fixtures/test_fixture_regression.py::test_test_detection_result_fixture",
  "fixtures/test_fixture_regression.py::test_trained_detector_fixture",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterEnsembleCompatibility::test_adapter_weight_compatibility",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterEnsembleCompatibility::test_multiple_adapter_ensemble",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterErrorHandlingConsistency::test_adapter_fitting_error_handling",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterErrorHandlingConsistency::test_adapter_invalid_algorithm_errors",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterErrorHandlingConsistency::test_adapter_not_fitted_errors",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterInterfaceCompliance::test_adapter_protocol_compliance",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterInterfaceCompliance::test_pyod_adapter_interface_compliance",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterInterfaceCompliance::test_sklearn_adapter_interface_compliance",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterPerformanceCharacteristics::test_adapter_metadata_consistency",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterPerformanceCharacteristics::test_adapter_scalability_indicators",
  "infrastructure/adapters/test_adapter_integration.py::TestAdapterPerformanceCharacteristics::test_adapter_training_metadata_updates",
  "infrastructure/adapters/test_adapter_integration.py::TestCrossAdapterCompatibility::test_adapter_parameter_compatibility",
  "infrastructure/adapters/test_adapter_integration.py::TestCrossAdapterCompatibility::test_adapter_result_consistency",
  "infrastructure/adapters/test_adapter_integration.py::TestCrossAdapterCompatibility::test_adapter_score_normalization",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestJAXAdapterAdvanced::test_jax_advanced_optimization",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestJAXAdapterAdvanced::test_jax_graph_neural_network",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestJAXAdapterAdvanced::test_jax_memory_efficient_training",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestJAXAdapterAdvanced::test_jax_neural_ode_autoencoder",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestJAXAdapterAdvanced::test_jax_normalizing_flow",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestJAXAdapterAdvanced::test_jax_probabilistic_models",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_attention_mechanism",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_convolutional_autoencoder",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_ensemble_detection",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_gan_based_detection",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_gpu_acceleration",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_lstm_autoencoder",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_quantization_optimization",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestPyTorchAdapterAdvanced::test_pytorch_variational_autoencoder",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestTensorFlowAdapterAdvanced::test_tensorflow_bayesian_layers",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestTensorFlowAdapterAdvanced::test_tensorflow_custom_layers",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestTensorFlowAdapterAdvanced::test_tensorflow_distributed_training",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestTensorFlowAdapterAdvanced::test_tensorflow_mixed_precision",
  "infrastructure/adapters/test_deep_learning_adapters.py::TestTensorFlowAdapterAdvanced::test_tensorflow_tensorboard_integration",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDistanceBasedDriftDetector::test_distance_detector_initialization",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDistanceBasedDriftDetector::test_fit_reference",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDistanceBasedDriftDetector::test_mmd_no_drift",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDistanceBasedDriftDetector::test_mmd_with_drift",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDistanceBasedDriftDetector::test_rbf_kernel_computation",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_error_handling",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_fit",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_fit_detect",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_get_algorithm_info",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_get_supported_algorithms",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_initialization",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_params",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_predict_no_drift",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_predict_with_drift",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_score",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_adapter_unsupported_algorithm",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_all_algorithms[DistanceBasedDrift]",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_all_algorithms[PerformanceBasedDrift]",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_all_algorithms[StatisticalDrift]",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionAdapter::test_all_algorithms[StreamingDrift]",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionIntegration::test_feature_specific_drift",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionIntegration::test_multi_method_drift_detection",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionIntegration::test_performance_drift_with_model_degradation",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestDriftDetectionIntegration::test_temporal_drift_simulation",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestPerformanceBasedDriftDetector::test_fit_reference_with_labels",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestPerformanceBasedDriftDetector::test_fit_reference_without_labels",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestPerformanceBasedDriftDetector::test_performance_detector_initialization",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestPerformanceBasedDriftDetector::test_performance_drift_detection",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStatisticalDriftDetector::test_chi_square_test",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStatisticalDriftDetector::test_fit_reference",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStatisticalDriftDetector::test_ks_test_no_drift",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStatisticalDriftDetector::test_ks_test_with_drift",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStatisticalDriftDetector::test_statistical_detector_initialization",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStreamingDriftDetector::test_adaptation_mechanism",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStreamingDriftDetector::test_streaming_detector_initialization",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStreamingDriftDetector::test_streaming_drift_detection",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStreamingDriftDetector::test_streaming_update_initial",
  "infrastructure/adapters/test_drift_detection_adapter.py::TestStreamingDriftDetector::test_window_management",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_export_results_no_libraries",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_export_results_with_openpyxl",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_export_results_with_xlsxwriter",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_get_supported_formats",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_import_dataset_no_numeric_columns",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_import_dataset_no_openpyxl",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_import_dataset_success",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_import_dataset_with_options",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_initialization_no_dependencies",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_initialization_with_dependencies",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_validate_and_clean_data_drop_missing",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_validate_and_clean_data_fill_mean",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_validate_file_invalid_extension",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapter::test_validate_file_success",
  "infrastructure/adapters/test_excel_adapter.py::TestExcelAdapterIntegration::test_end_to_end_export_import",
  "infrastructure/adapters/test_excel_adapter.py::TestExportOptions::test_default_initialization",
  "infrastructure/adapters/test_excel_adapter.py::TestExportOptions::test_for_excel_configuration",
  "infrastructure/adapters/test_excel_adapter.py::TestExportOptions::test_from_dict_creation",
  "infrastructure/adapters/test_excel_adapter.py::TestExportOptions::test_invalid_chart_types_filtering",
  "infrastructure/adapters/test_excel_adapter.py::TestExportOptions::test_invalid_permissions_default",
  "infrastructure/adapters/test_excel_adapter.py::TestExportOptions::test_to_dict_conversion",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_algorithm_parameter_variations",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_autoencoder_training_and_prediction",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_batch_processing_consistency",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_different_contamination_rates",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_edge_cases_and_error_handling",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_feature_scaling_robustness",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_get_algorithm_info",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_isolation_forest_training_and_prediction",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_jax_adapter_initialization[AutoEncoder]",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_jax_adapter_initialization[IsolationForest]",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_jax_adapter_initialization[LOF]",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_jax_adapter_initialization[OCSVM]",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_jax_adapter_initialization[VAE]",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_jax_adapter_invalid_algorithm",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_jax_availability_handling",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_list_available_algorithms",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_lof_training_and_prediction",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_memory_efficiency",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_ocsvm_training_and_prediction",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_performance_with_large_dataset",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_prediction_without_fitting",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_reproducibility_with_random_seed",
  "infrastructure/adapters/test_jax_adapter_comprehensive.py::TestJAXAdapterComprehensive::test_vae_training_and_prediction",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterEdgeCases::test_adapter_concurrent_access",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterEdgeCases::test_adapter_contamination_rate_edge_cases",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterEdgeCases::test_adapter_empty_dataset",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterEdgeCases::test_adapter_high_dimensional_data",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterEdgeCases::test_adapter_single_sample_dataset",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterPerformanceCharacteristics::test_adapter_memory_usage_tracking",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterPerformanceCharacteristics::test_adapter_scalability_metadata",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestMLAdapterPerformanceCharacteristics::test_adapter_streaming_capabilities",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_algorithm_metadata",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_detect_comprehensive",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_detect_not_fitted",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_fit_comprehensive",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_fit_error_handling",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_initialization_all_algorithms",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_invalid_algorithm",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_knn_variants",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_parameter_management",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_adapter_score_method",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_version_detection",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_sklearn_adapter_detect_with_decision_function",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_sklearn_adapter_detect_with_score_samples",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_sklearn_adapter_fallback_scoring",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_sklearn_adapter_initialization_all_algorithms",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_sklearn_adapter_lof_novelty_detection",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_sklearn_adapter_sgd_streaming_support",
  "infrastructure/adapters/test_ml_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_sklearn_version_detection",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapter::test_cloud_storage_adapter_context_manager",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapter::test_cloud_storage_adapter_instantiation",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapter::test_cloud_storage_adapter_subclass_methods",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapterImplementation::test_context_manager_connect_disconnect",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapterImplementation::test_delete_object_when_connected",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapterImplementation::test_download_file_when_connected",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapterImplementation::test_list_objects_when_connected",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapterImplementation::test_object_exists_when_connected",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapterImplementation::test_upload_file_when_connected",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageAdapterImplementation::test_upload_file_when_not_connected",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageConfig::test_cloud_storage_config_creation",
  "infrastructure/cloud_storage/test_base.py::TestCloudStorageConfig::test_cloud_storage_config_defaults",
  "infrastructure/cloud_storage/test_base.py::TestStorageMetadata::test_storage_metadata_creation",
  "infrastructure/cloud_storage/test_base.py::TestStorageMetadata::test_storage_metadata_defaults",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_create_loader_auto_detect",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_create_loader_explicit_type",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_create_loader_unsupported_type",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_create_loader_with_config",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_detect_loader_type_csv",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_detect_loader_type_excel",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_detect_loader_type_json",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_detect_loader_type_no_extension",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_detect_loader_type_parquet",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_detect_loader_type_unsupported",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_detect_loader_type_url",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_get_loader_info",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_get_loader_info_unknown",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_init_default_loaders",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_load_data_success",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_register_loader",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_validate_source_invalid",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestDataLoaderFactory::test_validate_source_valid",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_combine_datasets_empty",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_combine_datasets_multiple",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_combine_datasets_single",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_combine_datasets_with_target_column",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_estimate_load_time",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_estimate_load_time_excel_adjustment",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_estimate_load_time_file_not_found",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_estimate_load_time_json_adjustment",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_init_custom_factory",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_init_default",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_load_file_not_found",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_load_large_file",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_load_multiple_sources",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_load_multiple_sources_combine",
  "infrastructure/data_loaders/test_data_loader_factory.py::TestSmartDataLoader::test_load_small_file",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_close_connections",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_connection_context_manager",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_create_connection_string_mysql_default_port",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_create_connection_string_postgresql",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_create_connection_string_sqlite",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_create_connection_string_unsupported_type",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_create_connection_string_with_params",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_estimate_size_no_connection",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_estimate_size_query",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_estimate_size_table",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_get_database_type",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_get_engine_cached_connection",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_get_engine_connection_failure",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_get_engine_existing_engine",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_get_engine_new_connection",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_get_table_info_error",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_get_table_info_success",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_init_custom_config",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_init_default",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_is_connection_string_invalid",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_is_connection_string_valid",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_list_schemas",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_list_schemas_not_supported",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_list_tables",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_list_tables_with_schema",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_batch_no_connection",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_batch_query",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_batch_table",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_connection_string_no_query_or_table",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_connection_string_with_query",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_connection_string_with_table",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_query_empty_result",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_query_sql_error",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_query_success",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_query_target_column_not_found",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_query_with_chunking",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_table_name_no_default_connection",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_table_name_with_default_connection",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_table_success",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_table_with_filters",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_load_table_with_schema",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_supported_databases_constant",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_supported_formats",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_validate_connection_error",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_validate_connection_string_valid",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_validate_no_connection_string",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_validate_table_name_invalid",
  "infrastructure/data_loaders/test_database_loader.py::TestDatabaseLoader::test_validate_table_name_valid",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_estimate_size_fallback",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_estimate_size_invalid_file",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_estimate_size_pyarrow",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_extract_metadata_error",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_extract_metadata_success",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_get_file_size_mb_directory",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_get_file_size_mb_file",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_get_file_size_mb_invalid_path",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_get_schema_info_fallback",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_get_schema_info_invalid_file",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_get_schema_info_pyarrow",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_init_custom_config",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_init_default",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_init_fastparquet_missing",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_init_pyarrow_missing",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_batch_fallback",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_batch_invalid_file",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_batch_pyarrow",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_empty_file",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_invalid_source",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_success",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_target_column_not_found",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_load_with_custom_options",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_supported_formats",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_validate_corrupt_parquet",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_validate_directory_no_parquet_files",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_validate_directory_with_parquet_files",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_validate_file_exists",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_validate_file_not_exists",
  "infrastructure/data_loaders/test_enhanced_parquet_loader.py::TestEnhancedParquetLoader::test_validate_wrong_extension",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_feature_selection_with_target",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_get_feature_info",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_get_processing_report",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_high_cardinality_categorical_skip",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_init_custom_config",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_init_default",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_knn_imputation",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_label_encoding",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_memory_efficient_dtype_optimization",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_ordinal_encoding",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_parallel_processing_config",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_process_dataset_simple",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_process_dataset_with_categorical_encoding",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_process_dataset_with_duplicates",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_process_dataset_with_low_variance_removal",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_process_dataset_with_missing_values",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_process_dataset_with_scaling",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_processing_error_handling",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_reset_transformers",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_strict_validation_failure",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_transform_new_data",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_transform_new_data_no_transformers",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_validate_data_empty_dataframe",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_validate_data_missing_column",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_validate_data_null_percentage_rule",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_validate_data_success",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_validate_data_type_rule",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestAdvancedDataPipeline::test_validate_data_with_rules",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestProcessingConfig::test_custom_config",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestProcessingConfig::test_default_config",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestProcessingReport::test_processing_report_creation",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestProcessingReport::test_report_properties",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestValidationRule::test_validation_rule_creation",
  "infrastructure/data_processing/test_advanced_data_pipeline.py::TestValidationRule::test_validation_rule_defaults",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationEnums::test_aggregation_strategy_enum",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationEnums::test_cluster_mode_enum",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationEnums::test_communication_protocol_enum",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationEnums::test_load_balancing_strategy_enum",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationEnums::test_partition_strategy_enum",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationIntegration::test_development_vs_production_config",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationIntegration::test_realistic_cluster_configuration",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationManager::test_config_export_import",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationManager::test_config_update",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationManager::test_config_validation",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationManager::test_config_watcher",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationManager::test_configuration_manager_creation",
  "infrastructure/distributed/test_distributed_config.py::TestConfigurationManager::test_environment_overrides",
  "infrastructure/distributed/test_distributed_config.py::TestDistributedConfig::test_cluster_config_validation",
  "infrastructure/distributed/test_distributed_config.py::TestDistributedConfig::test_complete_distributed_config",
  "infrastructure/distributed/test_distributed_config.py::TestDistributedConfig::test_default_config_creation",
  "infrastructure/distributed/test_distributed_config.py::TestDistributedConfig::test_fault_tolerance_config",
  "infrastructure/distributed/test_distributed_config.py::TestDistributedConfig::test_network_config_validation",
  "infrastructure/distributed/test_distributed_config.py::TestDistributedConfig::test_worker_config_validation",
  "infrastructure/distributed/test_distributed_config.py::TestGlobalConfigurationFunctions::test_get_distributed_config_manager",
  "infrastructure/distributed/test_distributed_config.py::TestGlobalConfigurationFunctions::test_init_distributed_config",
  "infrastructure/distributed/test_task_distributor.py::TestDistributedTask::test_task_creation",
  "infrastructure/distributed/test_task_distributor.py::TestDistributedTask::test_task_resource_requirements",
  "infrastructure/distributed/test_task_distributor.py::TestDistributedTask::test_task_with_metadata",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_cancel_task",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_completion_handler",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_distributor_start_stop",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_find_best_worker",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_get_statistics",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_get_task_status",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_submit_task",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_worker_load_update",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_worker_registration",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributor::test_worker_unregistration",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributorIntegration::test_full_task_lifecycle",
  "infrastructure/distributed/test_task_distributor.py::TestTaskDistributorIntegration::test_multiple_workers_load_balancing",
  "infrastructure/distributed/test_task_distributor.py::TestTaskQueue::test_priority_ordering",
  "infrastructure/distributed/test_task_distributor.py::TestTaskQueue::test_put_and_get_task",
  "infrastructure/distributed/test_task_distributor.py::TestTaskQueue::test_queue_full_behavior",
  "infrastructure/distributed/test_task_distributor.py::TestTaskQueue::test_queue_statistics",
  "infrastructure/distributed/test_task_distributor.py::TestTaskQueue::test_remove_task",
  "infrastructure/distributed/test_task_distributor.py::TestTaskQueue::test_task_queue_creation",
  "infrastructure/distributed/test_task_distributor.py::TestTaskQueue::test_wait_for_task",
  "infrastructure/distributed/test_task_distributor.py::TestTaskResult::test_failed_result",
  "infrastructure/distributed/test_task_distributor.py::TestTaskResult::test_successful_result",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerContainerOperationsPhase2::test_docker_build_validation",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerContainerOperationsPhase2::test_docker_environment_variables",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerContainerOperationsPhase2::test_docker_image_layers_optimization",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerContainerOperationsPhase2::test_docker_security_considerations",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerContainerOperationsPhase2::test_docker_volume_mounting",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerDependencyManagementPhase2::test_docker_database_driver_installation",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerDependencyManagementPhase2::test_docker_ml_framework_installation",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerDependencyManagementPhase2::test_docker_optional_dependency_handling",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerDependencyManagementPhase2::test_docker_system_dependency_management",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerDependencyManagementPhase2::test_docker_testing_framework_installation",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_docker_compose_testing_database_config",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_docker_compose_testing_exists",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_docker_compose_testing_health_checks",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_docker_compose_testing_networking",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_docker_compose_testing_redis_config",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_docker_compose_testing_services",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_dockerfile_testing_exists",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_dockerfile_testing_ml_dependencies",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerInfrastructurePhase2::test_dockerfile_testing_test_dependencies",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerIntegrationWorkflowPhase2::test_docker_ci_integration",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerIntegrationWorkflowPhase2::test_docker_development_workflow",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerIntegrationWorkflowPhase2::test_docker_monitoring_integration",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerIntegrationWorkflowPhase2::test_docker_phase2_completion_validation",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerIntegrationWorkflowPhase2::test_docker_production_readiness",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerTestExecutionPhase2::test_docker_cleanup_and_teardown",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerTestExecutionPhase2::test_docker_compose_test_command",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerTestExecutionPhase2::test_docker_parallel_testing",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerTestExecutionPhase2::test_docker_test_data_persistence",
  "infrastructure/docker/test_docker_environment_phase2.py::TestDockerTestExecutionPhase2::test_docker_test_isolation",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardExportScript::test_all_exported_dashboards_are_valid_json",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardExportScript::test_export_script_execution",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_alert_thresholds_are_reasonable",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_complete_dashboard_contains_all_panel_types",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_complete_dashboard_template_structure",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_exported_json_file_exists_and_valid",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_individual_dashboard_files_exist",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_individual_dashboards_generation",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_panel_grid_positioning",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_panel_queries_are_valid_prometheus",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_panels_have_required_properties",
  "infrastructure/monitoring/test_dashboard_json.py::TestDashboardJSON::test_provisioning_config_exists",
  "infrastructure/monitoring/test_health_checks.py::TestGlobalHealthChecker::test_get_health_checker_singleton",
  "infrastructure/monitoring/test_health_checks.py::TestGlobalHealthChecker::test_register_health_check_global",
  "infrastructure/monitoring/test_health_checks.py::TestHealthCheckResult::test_health_check_result_creation",
  "infrastructure/monitoring/test_health_checks.py::TestHealthCheckResult::test_health_check_result_to_dict",
  "infrastructure/monitoring/test_health_checks.py::TestHealthCheckResult::test_health_check_result_unhealthy",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_check_all_components",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_check_all_components_empty",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_check_component_failure",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_check_component_not_found",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_check_component_success",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_get_cached_results",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_get_system_health_degraded",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_get_system_health_healthy",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_get_system_health_no_checks",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_get_system_health_unhealthy",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_health_checker_creation",
  "infrastructure/monitoring/test_health_checks.py::TestHealthChecker::test_register_check",
  "infrastructure/monitoring/test_health_checks.py::TestKubernetesProbes::test_liveness_probe",
  "infrastructure/monitoring/test_health_checks.py::TestKubernetesProbes::test_readiness_probe_not_ready",
  "infrastructure/monitoring/test_health_checks.py::TestKubernetesProbes::test_readiness_probe_ready",
  "infrastructure/monitoring/test_health_checks.py::TestPredefinedHealthChecks::test_check_detector_service",
  "infrastructure/monitoring/test_health_checks.py::TestPredefinedHealthChecks::test_check_filesystem_health",
  "infrastructure/monitoring/test_health_checks.py::TestPredefinedHealthChecks::test_check_memory_health",
  "infrastructure/monitoring/test_health_checks.py::TestPredefinedHealthChecks::test_check_model_repository",
  "infrastructure/monitoring/test_health_checks.py::TestPredefinedHealthChecks::test_check_streaming_service",
  "infrastructure/monitoring/test_health_checks.py::TestPredefinedHealthChecks::test_check_system_resources",
  "infrastructure/monitoring/test_health_checks.py::TestPredefinedHealthChecks::test_check_system_resources_high_usage",
  "infrastructure/monitoring/test_health_checks.py::TestSystemHealth::test_system_health_creation",
  "infrastructure/monitoring/test_health_checks.py::TestSystemHealth::test_system_health_to_dict",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestGlobalMetricsService::test_get_metrics_service_not_initialized",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestGlobalMetricsService::test_initialize_metrics",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestMetricDefinition::test_metric_definition_creation",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestMetricDefinition::test_metric_definition_defaults",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_categorize_size",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_get_metrics_data",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_init_with_custom_namespace",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_init_with_prometheus",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_init_without_prometheus",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_api_response",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_cache_metrics",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_dataset_processing",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_detection",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_ensemble_metrics",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_error",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_http_request",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_streaming_metrics",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_record_training",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_set_application_info",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_update_quality_metrics",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_update_system_metrics",
  "infrastructure/monitoring/test_prometheus_metrics.py::TestPrometheusMetricsService::test_without_prometheus_client",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_concurrent_sessions",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_connection_pooling",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_engine_creation_postgresql",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_engine_creation_sqlite",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_error_handling",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_initialization",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_session_creation",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_session_factory",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseManagerPhase2::test_database_manager_table_creation",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabasePerformancePhase2::test_batch_operations_performance",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabasePerformancePhase2::test_bulk_insert_performance",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabasePerformancePhase2::test_connection_pooling_performance",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabasePerformancePhase2::test_query_optimization",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_complex_queries",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_delete",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_error_handling",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_find_all",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_find_by_algorithm",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_find_by_id",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_find_fitted",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_save_new",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseRepositoriesPhase2::test_detector_repository_save_update",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseTransactionsPhase2::test_nested_transactions",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseTransactionsPhase2::test_transaction_commit",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestDatabaseTransactionsPhase2::test_transaction_rollback",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestRedisIntegrationPhase2::test_redis_caching_operations",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestRedisIntegrationPhase2::test_redis_connection_mock",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestRedisIntegrationPhase2::test_redis_model_caching",
  "infrastructure/persistence/test_database_comprehensive_phase2.py::TestRedisIntegrationPhase2::test_redis_session_storage",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDatasetRepository::test_find_by_id",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDatasetRepository::test_find_by_metadata",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDatasetRepository::test_find_by_name",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDatasetRepository::test_save_and_load_data",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDatasetRepository::test_save_dataset",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectionResultRepository::test_find_by_dataset_id",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectionResultRepository::test_find_by_detector_id",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectionResultRepository::test_find_by_id",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectionResultRepository::test_find_recent",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectionResultRepository::test_get_summary_stats",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectionResultRepository::test_save_detection_result",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_count",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_delete",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_exists",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_find_all",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_find_by_algorithm",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_find_by_id",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_find_by_id_not_found",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_find_by_name",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseDetectorRepository::test_save_detector",
  "infrastructure/persistence/test_database_repositories.py::TestDatabaseIntegration::test_end_to_end_workflow",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateEnums::test_quality_gate_type_enum",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateEnums::test_quality_level_enum",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateIntegration::test_full_validation_workflow",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_clean_architecture_gate",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_convenience_function",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_cyclomatic_complexity_gate",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_docstring_coverage_gate",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_generate_html_report",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_quality_gate_report_creation",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_quality_gate_result_creation",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_security_patterns_gate",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_type_hints_coverage_gate",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_validate_good_quality_code",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_validate_non_existent_file",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_validate_poor_quality_code",
  "infrastructure/quality/test_quality_gates.py::TestQualityGateValidator::test_validator_initialization",
  "infrastructure/security/test_advanced_threat_detection.py::TestAdvancedBehaviorAnalyzer::test_api_usage_anomaly",
  "infrastructure/security/test_advanced_threat_detection.py::TestAdvancedBehaviorAnalyzer::test_behavioral_anomaly_detection",
  "infrastructure/security/test_advanced_threat_detection.py::TestAdvancedBehaviorAnalyzer::test_configuration_management",
  "infrastructure/security/test_advanced_threat_detection.py::TestAdvancedBehaviorAnalyzer::test_insufficient_samples_no_alert",
  "infrastructure/security/test_advanced_threat_detection.py::TestAdvancedBehaviorAnalyzer::test_new_user_no_alert",
  "infrastructure/security/test_advanced_threat_detection.py::TestBehaviorProfile::test_behavior_profile_creation",
  "infrastructure/security/test_advanced_threat_detection.py::TestBehaviorProfile::test_behavior_profile_with_data",
  "infrastructure/security/test_advanced_threat_detection.py::TestDataExfiltrationDetector::test_configuration_management",
  "infrastructure/security/test_advanced_threat_detection.py::TestDataExfiltrationDetector::test_high_request_count_detection",
  "infrastructure/security/test_advanced_threat_detection.py::TestDataExfiltrationDetector::test_large_data_access_detection",
  "infrastructure/security/test_advanced_threat_detection.py::TestDataExfiltrationDetector::test_normal_usage_no_alert",
  "infrastructure/security/test_advanced_threat_detection.py::TestFactoryFunction::test_create_advanced_threat_detectors",
  "infrastructure/security/test_advanced_threat_detection.py::TestIntegration::test_detector_configuration_isolation",
  "infrastructure/security/test_advanced_threat_detection.py::TestIntegration::test_detector_enable_disable",
  "infrastructure/security/test_advanced_threat_detection.py::TestIntegration::test_multiple_detector_analysis",
  "infrastructure/security/test_advanced_threat_detection.py::TestThreatIntelligence::test_threat_intelligence_creation",
  "infrastructure/security/test_advanced_threat_detection.py::TestThreatIntelligenceDetector::test_add_threat_intelligence",
  "infrastructure/security/test_advanced_threat_detection.py::TestThreatIntelligenceDetector::test_configuration_management",
  "infrastructure/security/test_advanced_threat_detection.py::TestThreatIntelligenceDetector::test_malicious_ip_detection",
  "infrastructure/security/test_advanced_threat_detection.py::TestThreatIntelligenceDetector::test_safe_request_no_alert",
  "infrastructure/security/test_advanced_threat_detection.py::TestThreatIntelligenceDetector::test_suspicious_user_agent_detection",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_connect_failure",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_connect_success",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_disconnect",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_from_access_key",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_from_environment_with_env_vars",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_from_environment_without_env_vars",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_from_sts_role",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_init",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_test_connection_failure",
  "infrastructure/storage/test_s3_adapter.py::TestS3Adapter::test_test_connection_success",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestDataSources::test_kafka_connect_disconnect",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestDataSources::test_kafka_consume_data",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestDataSources::test_kafka_data_source_initialization",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestDataSources::test_websocket_connect_disconnect",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestDataSources::test_websocket_consume_data",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestDataSources::test_websocket_data_source_initialization",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestErrorHandling::test_data_source_connection_error",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestErrorHandling::test_processing_timeout",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestIntegration::test_end_to_end_pipeline",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestRealTimeAnomalyPipeline::test_alert_generation",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestRealTimeAnomalyPipeline::test_alert_severity_determination",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestRealTimeAnomalyPipeline::test_backpressure_handling",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestRealTimeAnomalyPipeline::test_metrics_collection",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestRealTimeAnomalyPipeline::test_pipeline_initialization",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestRealTimeAnomalyPipeline::test_pipeline_processing",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestRealTimeAnomalyPipeline::test_pipeline_start_stop",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingAnomalyDetector::test_detector_initialization",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingAnomalyDetector::test_process_batch_empty",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingAnomalyDetector::test_process_batch_trained",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingAnomalyDetector::test_process_batch_untrained",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingAnomalyDetector::test_unsupported_algorithm",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingWindow::test_add_data_points",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingWindow::test_sliding_window",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::TestStreamingWindow::test_streaming_window_initialization",
  "infrastructure/streaming/test_real_time_anomaly_pipeline.py::test_concurrent_pipelines",
  "infrastructure/test_adapters.py::TestAdapterIntegration::test_adapter_error_handling",
  "infrastructure/test_adapters.py::TestAdapterIntegration::test_adapter_protocol_compliance",
  "infrastructure/test_adapters.py::TestPyGODAdapter::test_create_model",
  "infrastructure/test_adapters.py::TestPyGODAdapter::test_list_algorithms",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_algorithm_validation_comprehensive",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_create_model",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_fit_predict",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_list_algorithms",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_missing_class_algorithms",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_missing_dependency_algorithms",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_missing_module_algorithms",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_score_function",
  "infrastructure/test_adapters.py::TestPyODAdapter::test_unsupported_algorithm",
  "infrastructure/test_adapters.py::TestPyTorchAdapter::test_create_model",
  "infrastructure/test_adapters.py::TestPyTorchAdapter::test_torch_device_selection",
  "infrastructure/test_adapters.py::TestSklearnAdapter::test_create_model",
  "infrastructure/test_adapters.py::TestSklearnAdapter::test_fit_predict",
  "infrastructure/test_adapters.py::TestSklearnAdapter::test_list_algorithms",
  "infrastructure/test_adapters.py::TestSklearnAdapter::test_local_outlier_factor",
  "infrastructure/test_adapters.py::TestTODSAdapter::test_create_model",
  "infrastructure/test_adapters.py::TestTODSAdapter::test_list_algorithms",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterConfigurationManagement::test_adapter_metadata",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterConfigurationManagement::test_adapter_versioning",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterConfigurationManagement::test_configuration_serialization",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterConfigurationManagement::test_hyperparameter_grid_search",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterErrorHandling::test_data_validation_errors",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterErrorHandling::test_dimension_mismatch_error",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterErrorHandling::test_invalid_algorithm_error",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterErrorHandling::test_model_not_fitted_error",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterIntegration::test_adapter_configuration_consistency",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterIntegration::test_adapter_factory",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterIntegration::test_adapter_performance_comparison",
  "infrastructure/test_adapters_comprehensive.py::TestAdapterIntegration::test_cross_adapter_ensemble",
  "infrastructure/test_adapters_comprehensive.py::TestPyGODAdapterComprehensive::test_gnn_model_training",
  "infrastructure/test_adapters_comprehensive.py::TestPyGODAdapterComprehensive::test_graph_algorithm_parameters",
  "infrastructure/test_adapters_comprehensive.py::TestPyGODAdapterComprehensive::test_graph_feature_processing",
  "infrastructure/test_adapters_comprehensive.py::TestPyGODAdapterComprehensive::test_graph_structure_inference",
  "infrastructure/test_adapters_comprehensive.py::TestPyGODAdapterComprehensive::test_pygod_model_creation",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_memory_efficient_processing",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_algorithm_creation[ABOD]",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_algorithm_creation[FeatureBagging]",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_algorithm_creation[IsolationForest]",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_algorithm_creation[LOF]",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_algorithm_creation[OCSVM]",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_algorithm_parameters",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_ensemble_methods",
  "infrastructure/test_adapters_comprehensive.py::TestPyODAdapterComprehensive::test_pyod_with_preprocessing",
  "infrastructure/test_adapters_comprehensive.py::TestPyTorchAdapterComprehensive::test_anomaly_scoring",
  "infrastructure/test_adapters_comprehensive.py::TestPyTorchAdapterComprehensive::test_autoencoder_training",
  "infrastructure/test_adapters_comprehensive.py::TestPyTorchAdapterComprehensive::test_gpu_detection_and_usage",
  "infrastructure/test_adapters_comprehensive.py::TestPyTorchAdapterComprehensive::test_model_persistence",
  "infrastructure/test_adapters_comprehensive.py::TestPyTorchAdapterComprehensive::test_pytorch_model_creation",
  "infrastructure/test_adapters_comprehensive.py::TestPyTorchAdapterComprehensive::test_vae_training",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_algorithm_creation[EllipticEnvelope]",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_algorithm_creation[IsolationForest]",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_algorithm_creation[LocalOutlierFactor]",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_algorithm_creation[OneClassSVM]",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_error_handling",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_fit_and_detect_pipeline",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_hyperparameter_validation",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_local_outlier_factor_specific",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_one_class_svm_parameters",
  "infrastructure/test_adapters_comprehensive.py::TestSklearnAdapterComprehensive::test_performance_with_large_dataset",
  "infrastructure/test_autonomous_data_loaders.py::TestDataLoaderIntegration::test_batch_loading_consistency",
  "infrastructure/test_autonomous_data_loaders.py::TestDataLoaderIntegration::test_error_handling_consistency",
  "infrastructure/test_autonomous_data_loaders.py::TestDataLoaderIntegration::test_json_loader_error_recovery",
  "infrastructure/test_autonomous_data_loaders.py::TestDataLoaderIntegration::test_json_loader_with_complex_data",
  "infrastructure/test_autonomous_data_loaders.py::TestDataLoaderIntegration::test_loader_metadata_consistency",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_estimate_size_excel_file",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_init_custom",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_init_default",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_load_excel_file",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_supported_formats",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_validate_excel_extension",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_validate_nonexistent_file",
  "infrastructure/test_autonomous_data_loaders.py::TestExcelLoader::test_validate_with_mock",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_estimate_size_jsonl",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_estimate_size_regular_json",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_init_custom",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_init_default",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_batch_jsonl",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_batch_regular_json",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_empty_file_error",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_invalid_json_error",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_jsonl_format",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_nested_json_with_normalization",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_simple_json",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_load_with_target_column",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_supported_formats",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_validate_invalid_json",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_validate_nonexistent_file",
  "infrastructure/test_autonomous_data_loaders.py::TestJSONLoader::test_validate_valid_json",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_async_cache_operations",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_batch_operations_error_handling",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_configuration_reload",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_health_check_edge_cases",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_initialization_edge_cases",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_key_validation_edge_cases",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_layering_fallback_strategy",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_monitoring_and_alerts",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_statistics_edge_cases",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_cache_warming_edge_cases",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_compression_edge_cases",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_concurrent_access_scenarios",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_memory_cache_eviction_policies",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_memory_pressure_handling",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_redis_cluster_fallback",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_redis_connection_failure_fallback",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_serialization_error_handling",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_serialization_format_fallbacks",
  "infrastructure/test_caching_branch_coverage.py::TestAdvancedCacheServiceBranchCoverage::test_ttl_handling_edge_cases",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationExtensions::test_configuration_encryption",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationExtensions::test_configuration_middleware",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationExtensions::test_configuration_plugin_system",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationExtensions::test_configuration_templating",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationMonitoring::test_configuration_change_detection",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationMonitoring::test_configuration_health_monitoring",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationMonitoring::test_configuration_hot_reload",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationProfiles::test_custom_profile_creation",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationProfiles::test_profile_environment_override",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationProfiles::test_profile_inheritance",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationProfiles::test_profile_validation",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationValidation::test_configuration_dependency_validation",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationValidation::test_configuration_environment_validation",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationValidation::test_configuration_performance_validation",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationValidation::test_configuration_schema_validation",
  "infrastructure/test_configuration_comprehensive.py::TestConfigurationValidation::test_configuration_security_validation",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_auto_wiring",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_circular_dependency_detection",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_conditional_registration",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_configuration_integration",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_dependency_injection",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_lazy_initialization",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_scoped_services",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_service_decoration",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_service_registration",
  "infrastructure/test_configuration_comprehensive.py::TestDependencyContainer::test_container_service_resolution",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_default_values",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_environment_override",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_file_loading",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_nested_configuration",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_profile_management",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_secret_management",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_serialization",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_type_conversion",
  "infrastructure/test_configuration_comprehensive.py::TestSettings::test_settings_validation",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_init_custom_parameters",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_init_default_parameters",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_load_batch_processing",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_load_csv_with_custom_delimiter",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_load_csv_with_missing_values",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_load_empty_file",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_load_nonexistent_file",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_load_simple_csv",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_load_with_target_column",
  "infrastructure/test_data_loaders.py::TestCSVLoader::test_supported_formats",
  "infrastructure/test_data_loaders.py::TestDataLoaderErrorHandling::test_csv_loader_invalid_encoding",
  "infrastructure/test_data_loaders.py::TestDataLoaderErrorHandling::test_csv_loader_malformed_data",
  "infrastructure/test_data_loaders.py::TestDataLoaderIntegration::test_dataset_creation_from_csv",
  "infrastructure/test_data_loaders.py::TestDataLoaderIntegration::test_dataset_metadata_preservation",
  "infrastructure/test_data_loaders.py::TestParquetLoader::test_init_custom_parameters",
  "infrastructure/test_data_loaders.py::TestParquetLoader::test_init_default_parameters",
  "infrastructure/test_data_loaders.py::TestParquetLoader::test_load_nonexistent_parquet_file",
  "infrastructure/test_data_loaders.py::TestParquetLoader::test_load_parquet_file",
  "infrastructure/test_data_loaders.py::TestParquetLoader::test_supported_formats",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_concurrent_error_handling",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_context_without_optional_fields",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_error_context_with_none_values",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_error_log_level_classification",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_error_reporting_failure_handling",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_error_reporting_with_disabled_reporting",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_error_response_formatting_edge_cases",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_logging_with_error_context",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_nested_exception_handling",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_not_found_error_handler",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_pynomaly_error_with_details",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_recovery_suggestions_edge_cases",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_unexpected_error_handler",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_unicode_error_messages",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_validation_error_handler",
  "infrastructure/test_error_handling_branch_coverage.py::TestErrorHandlerBranchCoverage::test_very_long_error_messages",
  "infrastructure/test_infrastructure_adapters.py::TestCachingAdapter::test_cache_disabled_handling",
  "infrastructure/test_infrastructure_adapters.py::TestCachingAdapter::test_cache_operations",
  "infrastructure/test_infrastructure_adapters.py::TestCachingAdapter::test_fake_redis_client_creation",
  "infrastructure/test_infrastructure_adapters.py::TestInfrastructureIntegration::test_settings_and_cache_integration",
  "infrastructure/test_infrastructure_adapters.py::TestInfrastructureIntegration::test_settings_and_database_integration",
  "infrastructure/test_infrastructure_adapters.py::TestObservabilityMiddleware::test_auth_middleware_import",
  "infrastructure/test_infrastructure_adapters.py::TestObservabilityMiddleware::test_middleware_import",
  "infrastructure/test_infrastructure_adapters.py::TestPersistenceAdapter::test_database_manager_session_context",
  "infrastructure/test_infrastructure_adapters.py::TestPersistenceAdapter::test_in_memory_sqlite_connection",
  "infrastructure/test_infrastructure_adapters.py::TestPersistenceAdapter::test_transaction_rollback",
  "infrastructure/test_infrastructure_adapters.py::TestSettingsConfiguration::test_database_configuration",
  "infrastructure/test_infrastructure_adapters.py::TestSettingsConfiguration::test_environment_variable_parsing",
  "infrastructure/test_infrastructure_adapters.py::TestSettingsConfiguration::test_monitoring_configuration",
  "infrastructure/test_infrastructure_adapters.py::TestSettingsConfiguration::test_security_configuration",
  "infrastructure/test_infrastructure_adapters.py::TestSettingsConfiguration::test_settings_defaults",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestJAXAdapterIntegration::test_jax_adapter_autoencoder",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestJAXAdapterIntegration::test_jax_jit_compilation",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestMLAdapterInteroperability::test_adapter_consistency",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestMLAdapterInteroperability::test_adapter_memory_cleanup",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestMLAdapterPerformance::test_large_dataset_handling",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestMLAdapterPerformance::test_memory_stress",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestPyODAdapterIntegration::test_pyod_adapter_full_lifecycle",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestPyODAdapterIntegration::test_pyod_algorithm_metadata",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestPyODAdapterIntegration::test_pyod_error_handling",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestPyTorchAdapterIntegration::test_pytorch_adapter_autoencoder",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestPyTorchAdapterIntegration::test_pytorch_gpu_cpu_compatibility",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestPyTorchAdapterIntegration::test_pytorch_vae_implementation",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestSklearnAdapterIntegration::test_sklearn_adapter_full_lifecycle",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestSklearnAdapterIntegration::test_sklearn_contamination_handling",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestTensorFlowAdapterIntegration::test_tensorflow_adapter_autoencoder",
  "infrastructure/test_ml_adapter_integration_phase2.py::TestTensorFlowAdapterIntegration::test_tensorflow_training_history",
  "infrastructure/test_repositories.py::TestInMemoryDatasetRepository::test_delete",
  "infrastructure/test_repositories.py::TestInMemoryDatasetRepository::test_find_by_name",
  "infrastructure/test_repositories.py::TestInMemoryDatasetRepository::test_init",
  "infrastructure/test_repositories.py::TestInMemoryDatasetRepository::test_save_and_find_by_id",
  "infrastructure/test_repositories.py::TestInMemoryDetectorRepository::test_delete",
  "infrastructure/test_repositories.py::TestInMemoryDetectorRepository::test_find_all",
  "infrastructure/test_repositories.py::TestInMemoryDetectorRepository::test_find_by_name",
  "infrastructure/test_repositories.py::TestInMemoryDetectorRepository::test_init",
  "infrastructure/test_repositories.py::TestInMemoryDetectorRepository::test_save_and_find_by_id",
  "infrastructure/test_repositories.py::TestInMemoryDetectorRepository::test_save_model_artifact",
  "infrastructure/test_repositories.py::TestInMemoryResultRepository::test_delete",
  "infrastructure/test_repositories.py::TestInMemoryResultRepository::test_find_by_dataset_id",
  "infrastructure/test_repositories.py::TestInMemoryResultRepository::test_find_by_detector_id",
  "infrastructure/test_repositories.py::TestInMemoryResultRepository::test_init",
  "infrastructure/test_repositories.py::TestInMemoryResultRepository::test_save_and_find_by_id",
  "integration/api/test_api_versioning.py::test_api_versioning",
  "integration/cicd/test_cicd_integration.py::TestCICDErrorScenarios::test_deployment_health_check_failure",
  "integration/cicd/test_cicd_integration.py::TestCICDErrorScenarios::test_invalid_repository_handling",
  "integration/cicd/test_cicd_integration.py::TestCICDErrorScenarios::test_resource_cleanup",
  "integration/cicd/test_cicd_integration.py::TestCICDErrorScenarios::test_test_execution_timeout",
  "integration/cicd/test_cicd_integration.py::TestCICDIntegration::test_complete_cicd_workflow",
  "integration/cicd/test_cicd_integration.py::TestCICDIntegration::test_concurrent_pipeline_execution",
  "integration/cicd/test_cicd_integration.py::TestCICDIntegration::test_deployment_strategies",
  "integration/cicd/test_cicd_integration.py::TestCICDIntegration::test_environment_progression",
  "integration/cicd/test_cicd_integration.py::TestCICDIntegration::test_metrics_and_monitoring",
  "integration/cicd/test_cicd_integration.py::TestCICDIntegration::test_pipeline_failure_handling",
  "integration/cicd/test_cicd_integration.py::TestCICDIntegration::test_test_runner_integration",
  "integration/infrastructure/test_buck2_quick.py::test_script_help",
  "integration/infrastructure/test_explainability_integration.py::test_explainability_infrastructure",
  "integration/sdk/test_sdk_basic.py::test_basic_imports",
  "integration/sdk/test_sdk_direct.py::test_direct_imports",
  "integration/sdk/test_sdk_full.py::test_sdk",
  "integration/sdk/test_sdk_working.py::test_working_sdk",
  "integration/test_adapter_integration_comprehensive.py::TestAdapterErrorHandlingIntegration::test_adapter_concurrent_access",
  "integration/test_adapter_integration_comprehensive.py::TestAdapterErrorHandlingIntegration::test_adapter_state_consistency",
  "integration/test_adapter_integration_comprehensive.py::TestAdapterErrorHandlingIntegration::test_invalid_data_handling",
  "integration/test_adapter_integration_comprehensive.py::TestCrossAdapterCompatibility::test_adapter_memory_usage_comparison",
  "integration/test_adapter_integration_comprehensive.py::TestCrossAdapterCompatibility::test_adapter_performance_comparison",
  "integration/test_adapter_integration_comprehensive.py::TestCrossAdapterCompatibility::test_adapter_score_consistency",
  "integration/test_adapter_integration_comprehensive.py::TestSklearnAdapterIntegration::test_adapter_parameter_validation_integration",
  "integration/test_adapter_integration_comprehensive.py::TestSklearnAdapterIntegration::test_isolation_forest_adapter_integration",
  "integration/test_adapter_integration_comprehensive.py::TestSklearnAdapterIntegration::test_local_outlier_factor_adapter_integration",
  "integration/test_adapter_integration_comprehensive.py::TestSklearnAdapterIntegration::test_one_class_svm_adapter_integration",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_algorithm_info_retrieval",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_algorithm_recommendations",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_auto_detector_creation",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_create_ensemble_detector",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_create_pyod_detector",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_create_sklearn_detector",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_factory_initialization",
  "integration/test_algorithm_adapters.py::TestAlgorithmFactory::test_library_detection",
  "integration/test_algorithm_adapters.py::TestEnhancedPyODAdapter::test_adapter_initialization",
  "integration/test_algorithm_adapters.py::TestEnhancedPyODAdapter::test_algorithm_metadata",
  "integration/test_algorithm_adapters.py::TestEnhancedPyODAdapter::test_algorithm_recommendations",
  "integration/test_algorithm_adapters.py::TestEnhancedPyODAdapter::test_detect_method",
  "integration/test_algorithm_adapters.py::TestEnhancedPyODAdapter::test_fit_method",
  "integration/test_algorithm_adapters.py::TestEnhancedPyODAdapter::test_invalid_algorithm",
  "integration/test_algorithm_adapters.py::TestEnhancedPyODAdapter::test_list_algorithms",
  "integration/test_algorithm_adapters.py::TestEnhancedSklearnAdapter::test_adapter_initialization",
  "integration/test_algorithm_adapters.py::TestEnhancedSklearnAdapter::test_algorithm_recommendations",
  "integration/test_algorithm_adapters.py::TestEnhancedSklearnAdapter::test_detect_with_scaling",
  "integration/test_algorithm_adapters.py::TestEnhancedSklearnAdapter::test_fit_method",
  "integration/test_algorithm_adapters.py::TestEnsembleMetaAdapter::test_add_remove_detectors",
  "integration/test_algorithm_adapters.py::TestEnsembleMetaAdapter::test_ensemble_detect",
  "integration/test_algorithm_adapters.py::TestEnsembleMetaAdapter::test_ensemble_fit",
  "integration/test_algorithm_adapters.py::TestEnsembleMetaAdapter::test_ensemble_initialization",
  "integration/test_algorithm_adapters.py::TestIntegration::test_end_to_end_detection",
  "integration/test_api_workflows.py::TestCompleteAPIWorkflows::test_automl_workflow",
  "integration/test_api_workflows.py::TestCompleteAPIWorkflows::test_complete_anomaly_detection_workflow",
  "integration/test_api_workflows.py::TestCompleteAPIWorkflows::test_event_processing_workflow",
  "integration/test_api_workflows.py::TestCompleteAPIWorkflows::test_experiment_management_workflow",
  "integration/test_api_workflows.py::TestCompleteAPIWorkflows::test_model_lifecycle_management_workflow",
  "integration/test_api_workflows.py::TestCompleteAPIWorkflows::test_performance_monitoring_workflow",
  "integration/test_api_workflows.py::TestCompleteAPIWorkflows::test_streaming_anomaly_detection_workflow",
  "integration/test_auth_flows.py::test_auth_deps_functionality",
  "integration/test_auth_flows.py::test_auth_integration_with_endpoints",
  "integration/test_auth_flows.py::test_container_creation",
  "integration/test_auth_flows.py::test_no_circular_imports",
  "integration/test_auth_flows.py::test_pydantic_forward_reference_fix",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_accuracy_metrics_calculation",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_algorithm_benchmark_small_dataset",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_benchmark_error_handling",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_concurrent_benchmarking",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_dataset_generation",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_memory_usage_tracking",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_multiple_algorithm_comparison",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_performance_report_generation",
  "integration/test_benchmark_testing.py::TestPerformanceBenchmarking::test_time_complexity_analysis",
  "integration/test_benchmark_testing.py::TestPerformanceRegression::test_performance_baseline_establishment",
  "integration/test_benchmark_testing.py::TestPerformanceRegression::test_performance_consistency",
  "integration/test_benchmark_testing.py::TestPerformanceRegression::test_scalability_characteristics",
  "integration/test_buck2_integration.py::TestBuck2Integration::test_buck2_availability",
  "integration/test_buck2_integration.py::TestBuck2Integration::test_buck2_build_dry_run",
  "integration/test_buck2_integration.py::TestBuck2Integration::test_buck2_config_validation",
  "integration/test_buck2_integration.py::TestBuck2Integration::test_buck_file_syntax",
  "integration/test_buck2_integration.py::TestBuck2Integration::test_python_targets_exist",
  "integration/test_buck2_integration.py::TestHatchIntegration::test_hatch_availability",
  "integration/test_buck2_integration.py::TestHatchIntegration::test_hatch_build_hook_plugin",
  "integration/test_buck2_integration.py::TestHatchIntegration::test_hatch_environments",
  "integration/test_buck2_integration.py::TestHatchIntegration::test_pyproject_toml_configuration",
  "integration/test_buck2_integration.py::TestIntegratedWorkflow::test_build_system_environment_detection",
  "integration/test_buck2_integration.py::TestIntegratedWorkflow::test_configuration_consistency",
  "integration/test_buck2_integration.py::TestIntegratedWorkflow::test_dependency_installation_workflow",
  "integration/test_buck2_integration.py::TestIntegratedWorkflow::test_make_help",
  "integration/test_buck2_integration.py::TestIntegratedWorkflow::test_makefile_targets",
  "integration/test_buck2_integration.py::TestNpmIntegration::test_npm_availability",
  "integration/test_buck2_integration.py::TestNpmIntegration::test_package_json_exists",
  "integration/test_buck2_integration.py::TestNpmIntegration::test_web_asset_directories",
  "integration/test_buck2_integration.py::TestPerformanceOptimizations::test_buck2_cache_configuration",
  "integration/test_buck2_integration.py::TestPerformanceOptimizations::test_parallel_build_configuration",
  "integration/test_buck2_integration.py::TestPerformanceOptimizations::test_web_asset_optimization",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_feature_integration_completeness",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_pwa_offline_functionality",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_real_algorithms_comparison",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_scalability_with_larger_dataset",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_step1_real_algorithm_integration",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_step2_api_endpoints_with_real_algorithms",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_step3_pwa_functionality",
  "integration/test_complete_workflow.py::TestCompleteWorkflowIntegration::test_step4_complete_end_to_end_workflow",
  "integration/test_comprehensive_integration.py::TestAPIIntegration::test_api_authentication_integration",
  "integration/test_comprehensive_integration.py::TestAPIIntegration::test_api_error_handling",
  "integration/test_comprehensive_integration.py::TestAPIIntegration::test_dataset_api_workflow",
  "integration/test_comprehensive_integration.py::TestAPIIntegration::test_detection_api_workflow",
  "integration/test_comprehensive_integration.py::TestAPIIntegration::test_detector_training_api_workflow",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_algorithm_adapter_integration",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_end_to_end_detection_workflow",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_error_handling_integration",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_file_processing_integration",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_memory_efficiency_integration",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_monitoring_integration",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_performance_monitoring_integration",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_production_readiness_checklist",
  "integration/test_comprehensive_integration.py::TestComprehensiveIntegration::test_streaming_processing_integration",
  "integration/test_comprehensive_integration.py::TestCrossLayerIntegration::test_configuration_integration",
  "integration/test_comprehensive_integration.py::TestCrossLayerIntegration::test_full_stack_integration",
  "integration/test_comprehensive_integration.py::TestCrossLayerIntegration::test_monitoring_integration",
  "integration/test_comprehensive_integration.py::TestDataFlowIntegration::test_batch_processing_pipeline",
  "integration/test_comprehensive_integration.py::TestDataFlowIntegration::test_end_to_end_detection_pipeline",
  "integration/test_comprehensive_integration.py::TestDataFlowIntegration::test_model_versioning_pipeline",
  "integration/test_comprehensive_integration.py::TestDataFlowIntegration::test_streaming_data_pipeline",
  "integration/test_comprehensive_integration.py::TestDatabaseIntegration::test_concurrent_database_operations",
  "integration/test_comprehensive_integration.py::TestDatabaseIntegration::test_dataset_persistence_workflow",
  "integration/test_comprehensive_integration.py::TestDatabaseIntegration::test_detection_result_storage",
  "integration/test_comprehensive_integration.py::TestDatabaseIntegration::test_detector_training_persistence",
  "integration/test_comprehensive_integration.py::TestDatabaseIntegration::test_transaction_rollback",
  "integration/test_comprehensive_integration.py::TestPerformanceIntegration::test_concurrent_api_requests",
  "integration/test_comprehensive_integration.py::TestPerformanceIntegration::test_database_performance_integration",
  "integration/test_comprehensive_integration.py::TestPerformanceIntegration::test_memory_usage_integration",
  "integration/test_comprehensive_integration.py::TestServiceLayerIntegration::test_detection_service_workflow",
  "integration/test_comprehensive_integration.py::TestServiceLayerIntegration::test_ensemble_service_integration",
  "integration/test_comprehensive_integration.py::TestServiceLayerIntegration::test_service_caching_integration",
  "integration/test_comprehensive_integration.py::TestServiceLayerIntegration::test_service_error_handling",
  "integration/test_comprehensive_integration.py::test_async_integration",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_capture_configuration_basic",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_capture_configuration_with_performance",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_capture_configuration_with_preprocessing",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_configuration_validation",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_configuration_validation_errors",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_export_configurations_json",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_export_configurations_python",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_export_configurations_yaml",
  "integration/test_configuration_management.py::TestConfigurationCaptureService::test_get_configuration_statistics",
  "integration/test_configuration_management.py::TestConfigurationDTOs::test_configuration_capture_request_dto",
  "integration/test_configuration_management.py::TestConfigurationDTOs::test_configuration_export_request_dto",
  "integration/test_configuration_management.py::TestConfigurationDTOs::test_configuration_search_request_dto",
  "integration/test_configuration_management.py::TestConfigurationDTOs::test_create_basic_configuration",
  "integration/test_configuration_management.py::TestConfigurationDTOs::test_experiment_configuration_validation",
  "integration/test_configuration_management.py::TestConfigurationIntegration::test_capture_and_retrieve_workflow",
  "integration/test_configuration_management.py::TestConfigurationIntegration::test_search_and_export_workflow",
  "integration/test_configuration_management.py::TestConfigurationRepository::test_delete_configuration",
  "integration/test_configuration_management.py::TestConfigurationRepository::test_export_import_configurations",
  "integration/test_configuration_management.py::TestConfigurationRepository::test_list_configurations",
  "integration/test_configuration_management.py::TestConfigurationRepository::test_repository_statistics",
  "integration/test_configuration_management.py::TestConfigurationRepository::test_save_and_load_configuration",
  "integration/test_configuration_management.py::TestConfigurationRepository::test_search_configurations",
  "integration/test_data_pipeline_integration_comprehensive.py::TestCompleteDataPipelineIntegration::test_multi_dataset_pipeline_integration",
  "integration/test_data_pipeline_integration_comprehensive.py::TestCompleteDataPipelineIntegration::test_pipeline_error_recovery_integration",
  "integration/test_data_pipeline_integration_comprehensive.py::TestCompleteDataPipelineIntegration::test_streaming_data_pipeline_simulation",
  "integration/test_data_pipeline_integration_comprehensive.py::TestDataLoadingPipelineIntegration::test_csv_loading_pipeline_integration",
  "integration/test_data_pipeline_integration_comprehensive.py::TestDataLoadingPipelineIntegration::test_json_loading_pipeline_integration",
  "integration/test_data_pipeline_integration_comprehensive.py::TestDataLoadingPipelineIntegration::test_parquet_loading_pipeline_integration",
  "integration/test_data_pipeline_integration_comprehensive.py::TestDataPreprocessingPipelineIntegration::test_feature_scaling_pipeline",
  "integration/test_data_pipeline_integration_comprehensive.py::TestDataPreprocessingPipelineIntegration::test_feature_selection_pipeline",
  "integration/test_data_pipeline_integration_comprehensive.py::TestDataPreprocessingPipelineIntegration::test_missing_value_handling_pipeline",
  "integration/test_database_integration.py::TestDatabaseIntegration::test_dataset_crud_operations",
  "integration/test_database_integration.py::TestDatabaseIntegration::test_detector_persistence_and_versioning",
  "integration/test_database_integration.py::TestDatabaseIntegration::test_experiment_result_persistence",
  "integration/test_database_integration.py::TestDatabaseIntegration::test_streaming_session_state_persistence",
  "integration/test_database_integration.py::TestDatabaseIntegration::test_transaction_integrity_and_rollback",
  "integration/test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_dataset_repository_basic_operations",
  "integration/test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_detector_repository_basic_operations",
  "integration/test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_repository_wrappers_are_properly_configured",
  "integration/test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_result_repository_basic_operations",
  "integration/test_deployment_infrastructure.py::TestDeploymentCLI::test_cli_import",
  "integration/test_deployment_infrastructure.py::TestDeploymentCLI::test_deployment_service_creation",
  "integration/test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_creation",
  "integration/test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_lifecycle",
  "integration/test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_strategy_configurations",
  "integration/test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_validation",
  "integration/test_deployment_infrastructure.py::TestDeploymentEntities::test_health_metrics",
  "integration/test_deployment_infrastructure.py::TestDeploymentEntities::test_rollback_criteria",
  "integration/test_deployment_infrastructure.py::TestDeploymentIntegration::test_end_to_end_deployment_workflow",
  "integration/test_deployment_infrastructure.py::TestDeploymentIntegration::test_persistence_and_recovery",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_deploy_model_success",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_deploy_model_with_existing_deployment",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_deployment_not_found_error",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_get_environment_status",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_health_metrics_update",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_list_deployments_with_filters",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_promote_to_production",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_rollback_deployment",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_rollback_without_previous_version",
  "integration/test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_service_initialization",
  "integration/test_deployment_infrastructure.py::TestModelServer::test_memory_usage_calculation",
  "integration/test_deployment_infrastructure.py::TestModelServer::test_model_eviction_lru",
  "integration/test_deployment_infrastructure.py::TestModelServer::test_model_loading_and_caching",
  "integration/test_deployment_infrastructure.py::TestModelServer::test_model_server_initialization",
  "integration/test_deployment_infrastructure.py::TestModelServer::test_prediction_functionality",
  "integration/test_detection_flow.py::TestDetectionFlow::test_ensemble_detection",
  "integration/test_detection_flow.py::TestDetectionFlow::test_experiment_tracking",
  "integration/test_detection_flow.py::TestDetectionFlow::test_full_detection_workflow",
  "integration/test_docker_integration.py::test_docker_integration",
  "integration/test_drift_detection_integration.py::test_drift_detection_integration",
  "integration/test_end_to_end_scenarios.py::TestEndToEndScenarios::test_data_scientist_research_workflow",
  "integration/test_end_to_end_scenarios.py::TestEndToEndScenarios::test_production_deployment_workflow",
  "integration/test_end_to_end_scenarios.py::TestEndToEndScenarios::test_security_analyst_monitoring_workflow",
  "integration/test_end_to_end_workflows.py::TestCompleteAnomalyDetectionWorkflow::test_basic_anomaly_detection_pipeline",
  "integration/test_end_to_end_workflows.py::TestCompleteAnomalyDetectionWorkflow::test_multi_algorithm_comparison_workflow",
  "integration/test_end_to_end_workflows.py::TestCompleteAnomalyDetectionWorkflow::test_streaming_anomaly_detection_workflow",
  "integration/test_end_to_end_workflows.py::TestDataPipelineIntegration::test_data_preprocessing_pipeline",
  "integration/test_end_to_end_workflows_phase3.py::TestComponentIntegrationPhase3::test_caching_integration",
  "integration/test_end_to_end_workflows_phase3.py::TestComponentIntegrationPhase3::test_configuration_integration",
  "integration/test_end_to_end_workflows_phase3.py::TestComponentIntegrationPhase3::test_data_pipeline_integration",
  "integration/test_end_to_end_workflows_phase3.py::TestComponentIntegrationPhase3::test_dependency_injection_integration",
  "integration/test_end_to_end_workflows_phase3.py::TestComponentIntegrationPhase3::test_monitoring_integration",
  "integration/test_end_to_end_workflows_phase3.py::TestComponentIntegrationPhase3::test_phase3_integration_completion",
  "integration/test_end_to_end_workflows_phase3.py::TestComponentIntegrationPhase3::test_security_integration",
  "integration/test_end_to_end_workflows_phase3.py::TestEndToEndWorkflowsPhase3::test_api_cli_integration_workflow",
  "integration/test_end_to_end_workflows_phase3.py::TestEndToEndWorkflowsPhase3::test_complete_anomaly_detection_workflow",
  "integration/test_end_to_end_workflows_phase3.py::TestEndToEndWorkflowsPhase3::test_database_integration_workflow",
  "integration/test_end_to_end_workflows_phase3.py::TestEndToEndWorkflowsPhase3::test_ml_framework_integration_workflow",
  "integration/test_end_to_end_workflows_phase3.py::TestEndToEndWorkflowsPhase3::test_streaming_integration_workflow",
  "integration/test_end_to_end_workflows_phase3.py::TestEndToEndWorkflowsPhase3::test_web_ui_api_integration_workflow",
  "integration/test_enhanced_isolation.py::TestContainerIntegration::test_real_database_integration",
  "integration/test_enhanced_isolation.py::TestContainerIntegration::test_real_redis_integration",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_async_service_integration_isolated",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_caching_integration_isolated",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_concurrent_operations_isolated",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_data_pipeline_isolated",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_end_to_end_workflow_isolated",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_error_recovery_isolated",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_external_api_integration_isolated",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_performance_isolation",
  "integration/test_enhanced_isolation.py::TestEnhancedIntegrationIsolation::test_resource_cleanup_isolated",
  "integration/test_ensemble_integration.py::test_ensemble_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestConfigurationManagementIntegration::test_environment_configuration_override_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestConfigurationManagementIntegration::test_json_configuration_loading_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestConfigurationManagementIntegration::test_yaml_configuration_loading_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestDependencyInjectionIntegration::test_configuration_injection_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestDependencyInjectionIntegration::test_container_creation_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestDependencyInjectionIntegration::test_service_registration_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestExternalServiceIntegration::test_cache_integration_simulation",
  "integration/test_infrastructure_integration_comprehensive.py::TestExternalServiceIntegration::test_database_integration_simulation",
  "integration/test_infrastructure_integration_comprehensive.py::TestExternalServiceIntegration::test_message_queue_integration_simulation",
  "integration/test_infrastructure_integration_comprehensive.py::TestMonitoringIntegration::test_alerting_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestMonitoringIntegration::test_health_check_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestMonitoringIntegration::test_logging_integration",
  "integration/test_infrastructure_integration_comprehensive.py::TestMonitoringIntegration::test_metrics_collection_integration",
  "integration/test_integration.py::TestAPIIntegration::test_api_authentication_workflow",
  "integration/test_integration.py::TestAPIIntegration::test_dataset_management_api_workflow",
  "integration/test_integration.py::TestAPIIntegration::test_detection_api_workflow",
  "integration/test_integration.py::TestAPIIntegration::test_health_and_monitoring_integration",
  "integration/test_integration.py::TestDatabaseIntegration::test_repository_integration",
  "integration/test_integration.py::TestDatabaseIntegration::test_transaction_handling",
  "integration/test_integration.py::TestEndToEndWorkflows::test_batch_processing_workflow",
  "integration/test_integration.py::TestEndToEndWorkflows::test_complete_anomaly_detection_workflow",
  "integration/test_integration.py::TestEndToEndWorkflows::test_multi_detector_comparison_workflow",
  "integration/test_integration.py::TestSecurityIntegration::test_audit_logging_integration",
  "integration/test_integration.py::TestSecurityIntegration::test_authentication_authorization_integration",
  "integration/test_integration.py::TestSecurityIntegration::test_rate_limiting_integration",
  "integration/test_jwt_auth.py::test_login",
  "integration/test_jwt_auth.py::test_login_locked_out",
  "integration/test_jwt_auth.py::test_login_with_invalid_credentials",
  "integration/test_jwt_auth.py::test_password_change",
  "integration/test_jwt_auth.py::test_refresh_token",
  "integration/test_migration_summary.py::test_app_router_inclusion",
  "integration/test_migration_summary.py::test_endpoint_migrations",
  "integration/test_migration_summary.py::test_migration_files",
  "integration/test_new_adapters.py::test_new_adapters",
  "integration/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_detection_latency_benchmark",
  "integration/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_memory_usage_benchmark",
  "integration/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_resource_cleanup_benchmark",
  "integration/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_throughput_benchmark",
  "integration/test_performance_integration.py::TestPerformanceIntegration::test_api_performance_under_load",
  "integration/test_performance_integration.py::TestPerformanceIntegration::test_api_rate_limiting_and_throttling",
  "integration/test_performance_integration.py::TestPerformanceIntegration::test_database_performance_under_load",
  "integration/test_performance_integration.py::TestPerformanceIntegration::test_memory_and_resource_usage",
  "integration/test_performance_integration.py::TestPerformanceIntegration::test_streaming_performance_scalability",
  "integration/test_phase2_configuration_integrations.py::TestAutoMLConfigurationIntegration::test_batch_capture_configurations",
  "integration/test_phase2_configuration_integrations.py::TestAutoMLConfigurationIntegration::test_capture_manual_configuration",
  "integration/test_phase2_configuration_integrations.py::TestAutoMLConfigurationIntegration::test_get_integration_statistics",
  "integration/test_phase2_configuration_integrations.py::TestAutoMLConfigurationIntegration::test_optimize_with_configuration_capture_failure",
  "integration/test_phase2_configuration_integrations.py::TestAutoMLConfigurationIntegration::test_optimize_with_configuration_capture_success",
  "integration/test_phase2_configuration_integrations.py::TestAutonomousConfigurationIntegration::test_analyze_autonomous_configurations",
  "integration/test_phase2_configuration_integrations.py::TestAutonomousConfigurationIntegration::test_capture_autonomous_experiment",
  "integration/test_phase2_configuration_integrations.py::TestAutonomousConfigurationIntegration::test_detect_with_configuration_capture_success",
  "integration/test_phase2_configuration_integrations.py::TestAutonomousConfigurationIntegration::test_get_integration_statistics",
  "integration/test_phase2_configuration_integrations.py::TestCLIParameterInterceptor::test_capture_cli_command_decorator_async",
  "integration/test_phase2_configuration_integrations.py::TestCLIParameterInterceptor::test_capture_cli_command_decorator_sync",
  "integration/test_phase2_configuration_integrations.py::TestCLIParameterInterceptor::test_capture_cli_command_with_exception",
  "integration/test_phase2_configuration_integrations.py::TestCLIParameterInterceptor::test_global_interceptor_initialization",
  "integration/test_phase2_configuration_integrations.py::TestCLIParameterInterceptor::test_parameter_extraction",
  "integration/test_phase2_configuration_integrations.py::TestCLIParameterInterceptor::test_serialize_parameter_value",
  "integration/test_phase2_configuration_integrations.py::TestConfigurationManagers::test_automl_configuration_manager",
  "integration/test_phase2_configuration_integrations.py::TestConfigurationManagers::test_autonomous_configuration_manager",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_automl_v2_missing",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_causal_models_availability",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_edge_deployment_missing",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_explainable_ai_availability",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_explainable_ai_basic_functionality",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_multimodal_models_availability",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_phase7_integration_readiness",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_quantum_algorithms_missing",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_synthetic_data_availability",
  "integration/test_phase7_implementations.py::TestPhase7Integration::test_synthetic_data_basic_functionality",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_advanced_caching_v2_availability",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_advanced_caching_v2_basic_functionality",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_massive_dataset_processing_availability",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_massive_dataset_processing_basic_functionality",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_multi_region_deployment_availability",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_multi_region_deployment_basic_functionality",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_phase8_integration_readiness",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_real_time_processing_enhancement_availability",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_real_time_processing_enhancement_basic_functionality",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_resource_optimization_availability",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_resource_optimization_basic_functionality",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_ultra_high_performance_availability",
  "integration/test_phase8_implementations.py::TestPhase8Integration::test_ultra_high_performance_basic_functionality",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_autoencoder_training_cpu",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_cpu_fallback",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_error_handling",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_factory_lists_pytorch_algorithms",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_model_info",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_multiple_algorithms_performance",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_pytorch_adapter_creation",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_save_load_functionality",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapter::test_vae_algorithm",
  "integration/test_pytorch_adapter.py::TestPyTorchAdapterWithoutPyTorch::test_factory_without_pytorch",
  "integration/test_regression_suite.py::TestRegressionSuite::test_api_backward_compatibility",
  "integration/test_regression_suite.py::TestRegressionSuite::test_authentication_and_authorization_compatibility",
  "integration/test_regression_suite.py::TestRegressionSuite::test_configuration_and_settings_stability",
  "integration/test_regression_suite.py::TestRegressionSuite::test_error_response_format_consistency",
  "integration/test_regression_suite.py::TestRegressionSuite::test_experiment_api_consistency",
  "integration/test_regression_suite.py::TestRegressionSuite::test_model_serialization_compatibility",
  "integration/test_regression_suite.py::TestRegressionSuite::test_pagination_and_filtering_consistency",
  "integration/test_regression_suite.py::TestRegressionSuite::test_performance_regression_baseline",
  "integration/test_regression_suite.py::TestRegressionSuite::test_streaming_api_stability",
  "integration/test_security_integration.py::TestSecurityIntegration::test_api_security_headers",
  "integration/test_security_integration.py::TestSecurityIntegration::test_authentication_bypass_attempts",
  "integration/test_security_integration.py::TestSecurityIntegration::test_authorization_and_access_control",
  "integration/test_security_integration.py::TestSecurityIntegration::test_data_privacy_and_encryption",
  "integration/test_security_integration.py::TestSecurityIntegration::test_input_validation_and_sanitization",
  "integration/test_security_integration.py::TestSecurityIntegration::test_rate_limiting_and_ddos_protection",
  "integration/test_security_integration.py::TestSecurityIntegration::test_secure_file_upload_handling",
  "integration/test_security_integration_simple.py::TestSecurityIntegrationSimple::test_auth_system_can_be_configured",
  "integration/test_security_integration_simple.py::TestSecurityIntegrationSimple::test_encryption_services_available",
  "integration/test_security_integration_simple.py::TestSecurityIntegrationSimple::test_health_endpoint_works_without_auth",
  "integration/test_security_integration_simple.py::TestSecurityIntegrationSimple::test_input_sanitization_available",
  "integration/test_security_integration_simple.py::TestSecurityIntegrationSimple::test_security_exceptions_are_importable",
  "integration/test_security_integration_simple.py::TestSecurityIntegrationSimple::test_security_headers_configuration",
  "integration/test_service_layer_integration_comprehensive.py::TestDetectionServiceIntegration::test_detection_service_error_handling_integration",
  "integration/test_service_layer_integration_comprehensive.py::TestDetectionServiceIntegration::test_detection_service_multiple_adapters_integration",
  "integration/test_service_layer_integration_comprehensive.py::TestDetectionServiceIntegration::test_detection_service_workflow_integration",
  "integration/test_service_layer_integration_comprehensive.py::TestEnsembleServiceIntegration::test_ensemble_service_evaluation_integration",
  "integration/test_service_layer_integration_comprehensive.py::TestEnsembleServiceIntegration::test_ensemble_service_prediction_integration",
  "integration/test_service_layer_integration_comprehensive.py::TestEnsembleServiceIntegration::test_ensemble_service_training_integration",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_cache_integration_stable",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_database_integration_stable",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_dependency_isolation",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_dependency_specific_stability[database]",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_dependency_specific_stability[http]",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_dependency_specific_stability[redis]",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_dependency_specific_stability[sklearn]",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_error_recovery_mechanisms",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_file_system_integration_stable",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_http_api_integration_stable",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_ml_library_integration_stable",
  "integration/test_stable_external_dependencies.py::TestStableExternalDependencies::test_multi_dependency_workflow_stable",
  "integration/test_statistical_tests.py::test_statistical_significance",
  "integration/test_streaming_integration.py::TestStreamingIntegration::test_streaming_data_sink_integration",
  "integration/test_streaming_integration.py::TestStreamingIntegration::test_streaming_error_handling",
  "integration/test_streaming_integration.py::TestStreamingIntegration::test_streaming_session_lifecycle",
  "integration/test_streaming_integration.py::TestStreamingIntegration::test_streaming_session_scaling",
  "integration/test_streaming_integration.py::TestStreamingIntegration::test_websocket_streaming_monitoring",
  "integration/test_streaming_integration.py::test_streaming_integration",
  "integration/test_synthetic_model_selection.py::test_selector_on_synthetic_data",
  "integration/test_workflow_container_integration.py::test_container_phase2_services",
  "integration/test_workflow_container_integration.py::test_workflow_simplification_service_availability",
  "maintenance/test_maintenance_demo.py::TestCoverageRequirements::test_coverage_calculation",
  "maintenance/test_maintenance_demo.py::TestCoverageRequirements::test_coverage_reporting",
  "maintenance/test_maintenance_demo.py::TestMaintenanceFramework::test_error_finder_basic",
  "maintenance/test_maintenance_demo.py::TestMaintenanceFramework::test_file_processing",
  "maintenance/test_maintenance_demo.py::TestMaintenanceFramework::test_messy_structure_detection",
  "maintenance/test_maintenance_demo.py::TestMaintenanceFramework::test_project_structure_validation",
  "maintenance/test_maintenance_demo.py::TestMaintenanceFramework::test_validation_result_structure",
  "maintenance/test_maintenance_demo.py::TestMaintenanceIntegration::test_end_to_end_error_detection",
  "maintenance/test_maintenance_demo.py::TestMaintenanceIntegration::test_mock_repository_validation",
  "maintenance/test_maintenance_demo.py::TestMaintenanceIntegration::test_structure_validation_workflow",
  "maintenance/test_maintenance_demo.py::TestMaintenancePerformance::test_large_file_processing",
  "maintenance/test_maintenance_demo.py::test_maintenance_test_markers",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_algorithm_selection_logic_mutations",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_anomaly_score_value_object_mutations",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_configuration_validation_mutations",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_contamination_rate_validation_mutations",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_data_validation_mutations",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_error_handling_mutations",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_mutation_testing_statistics",
  "mutation/test_critical_path_mutations.py::TestCriticalPathMutations::test_property_based_mutation_testing",
  "mutation/test_critical_paths.py::TestCriticalBusinessRules::test_anomaly_count_consistency",
  "mutation/test_critical_paths.py::TestCriticalBusinessRules::test_ensemble_score_aggregation_mutations",
  "mutation/test_critical_paths.py::TestCriticalBusinessRules::test_score_threshold_relationship",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_anomaly_detection_scoring_mutations",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_anomaly_score_boundary_validation",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_confidence_interval_ordering_mutation",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_contamination_rate_boundary_validation",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_dataset_validation_mutations",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_detector_contamination_usage_mutations",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_percentage_calculation_mutation",
  "mutation/test_critical_paths.py::TestCriticalDomainLogic::test_threshold_calculation_logic_mutations",
  "mutation/test_critical_paths.py::TestMutationSensitiveEdgeCases::test_array_indexing_mutations",
  "mutation/test_critical_paths.py::TestMutationSensitiveEdgeCases::test_floating_point_precision_mutations",
  "mutation/test_critical_paths.py::TestMutationSensitiveEdgeCases::test_maximum_contamination_edge_case",
  "mutation/test_critical_paths.py::TestMutationSensitiveEdgeCases::test_single_value_arrays",
  "mutation/test_critical_paths.py::TestMutationSensitiveEdgeCases::test_zero_contamination_edge_case",
  "mutation/test_domain_mutations.py::TestAnomalyMutations::test_anomaly_score_assignment",
  "mutation/test_domain_mutations.py::TestAnomalyMutations::test_anomaly_severity_classification",
  "mutation/test_domain_mutations.py::TestAnomalyScoreMutations::test_anomaly_score_comparison_logic",
  "mutation/test_domain_mutations.py::TestAnomalyScoreMutations::test_anomaly_score_invalid_values",
  "mutation/test_domain_mutations.py::TestAnomalyScoreMutations::test_anomaly_score_normalization",
  "mutation/test_domain_mutations.py::TestConfidenceIntervalMutations::test_confidence_interval_calculation",
  "mutation/test_domain_mutations.py::TestConfidenceIntervalMutations::test_confidence_interval_contains_logic",
  "mutation/test_domain_mutations.py::TestConfidenceIntervalMutations::test_confidence_interval_edge_cases",
  "mutation/test_domain_mutations.py::TestContaminationRateMutations::test_contamination_rate_auto_creation",
  "mutation/test_domain_mutations.py::TestContaminationRateMutations::test_contamination_rate_boundary_validation",
  "mutation/test_domain_mutations.py::TestContaminationRateMutations::test_contamination_rate_percentage_calculation",
  "mutation/test_domain_mutations.py::TestDatasetMutations::test_dataset_feature_extraction",
  "mutation/test_domain_mutations.py::TestDatasetMutations::test_dataset_sample_count_logic",
  "mutation/test_domain_mutations.py::TestDetectionResultMutations::test_anomaly_count_consistency",
  "mutation/test_domain_mutations.py::TestDetectionResultMutations::test_anomaly_rate_calculation",
  "mutation/test_domain_mutations.py::TestThresholdConfigMutations::test_threshold_config_fixed_value_validation",
  "mutation/test_domain_mutations.py::TestThresholdConfigMutations::test_threshold_config_method_validation",
  "mutation/test_domain_mutations.py::TestThresholdConfigMutations::test_threshold_config_percentile_validation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationOperators::test_arithmetic_operator_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationOperators::test_boolean_operator_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationOperators::test_comparison_operator_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationOperators::test_constant_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationQualityMetrics::test_equivalent_mutant_detection",
  "mutation/test_mutation_testing_enhanced.py::TestMutationQualityMetrics::test_mutation_coverage_analysis",
  "mutation/test_mutation_testing_enhanced.py::TestMutationQualityMetrics::test_mutation_score_calculation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationTesting::test_anomaly_score_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationTesting::test_contamination_rate_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationTesting::test_detection_service_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationTesting::test_prediction_aggregation_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationTesting::test_sklearn_adapter_mutation",
  "mutation/test_mutation_testing_enhanced.py::TestMutationTesting::test_threshold_calculation_mutation",
  "performance/test_comprehensive_performance.py::TestAPIPerformance::test_api_concurrent_load",
  "performance/test_comprehensive_performance.py::TestAPIPerformance::test_api_memory_usage_under_load",
  "performance/test_comprehensive_performance.py::TestAPIPerformance::test_api_response_time_benchmarks",
  "performance/test_comprehensive_performance.py::TestAPIPerformance::test_api_stress_testing",
  "performance/test_comprehensive_performance.py::TestDatabasePerformance::test_database_bulk_operations",
  "performance/test_comprehensive_performance.py::TestDatabasePerformance::test_database_concurrent_operations",
  "performance/test_comprehensive_performance.py::TestDatabasePerformance::test_database_connection_pool_performance",
  "performance/test_comprehensive_performance.py::TestDatabasePerformance::test_database_operation_benchmarks",
  "performance/test_comprehensive_performance.py::TestMLPerformance::test_algorithm_training_performance",
  "performance/test_comprehensive_performance.py::TestMLPerformance::test_concurrent_ml_operations",
  "performance/test_comprehensive_performance.py::TestMLPerformance::test_memory_efficiency_ml_operations",
  "performance/test_comprehensive_performance.py::TestMLPerformance::test_prediction_performance_scaling",
  "performance/test_comprehensive_performance.py::TestSystemPerformance::test_end_to_end_performance",
  "performance/test_comprehensive_performance.py::TestSystemPerformance::test_performance_regression_detection",
  "performance/test_comprehensive_performance.py::TestSystemPerformance::test_system_resource_utilization",
  "performance/test_infrastructure_optimization.py::test_caching_infrastructure",
  "performance/test_infrastructure_optimization.py::test_container_optimization",
  "performance/test_infrastructure_optimization.py::test_enhanced_automl_availability",
  "performance/test_infrastructure_optimization.py::test_monitoring_infrastructure",
  "performance/test_infrastructure_optimization.py::test_performance_optimizations",
  "performance/test_infrastructure_optimization.py::test_security_optimizations",
  "performance/test_load_testing.py::TestAPILoadTesting::test_concurrent_dataset_uploads",
  "performance/test_load_testing.py::TestAPILoadTesting::test_detector_creation_load",
  "performance/test_load_testing.py::TestAPILoadTesting::test_high_throughput_health_checks",
  "performance/test_load_testing.py::TestAPILoadTesting::test_mixed_workload_simulation",
  "performance/test_load_testing.py::TestMemoryAndResourceTesting::test_concurrent_resource_exhaustion",
  "performance/test_load_testing.py::TestMemoryAndResourceTesting::test_garbage_collection_effectiveness",
  "performance/test_load_testing.py::TestMemoryAndResourceTesting::test_memory_leak_detection",
  "performance/test_load_testing.py::TestStressAndReliability::test_rapid_scaling_scenario",
  "performance/test_load_testing.py::TestStressAndReliability::test_sustained_load_stability",
  "performance/test_load_testing_phase3.py::TestBenchmarkingPhase3::test_algorithm_comparison_benchmarking",
  "performance/test_load_testing_phase3.py::TestBenchmarkingPhase3::test_resource_utilization_benchmarking",
  "performance/test_load_testing_phase3.py::TestBenchmarkingPhase3::test_scalability_benchmarking",
  "performance/test_load_testing_phase3.py::TestLoadTestingPhase3::test_api_endpoint_load_testing",
  "performance/test_load_testing_phase3.py::TestLoadTestingPhase3::test_caching_performance_impact",
  "performance/test_load_testing_phase3.py::TestLoadTestingPhase3::test_concurrent_processing_performance",
  "performance/test_load_testing_phase3.py::TestLoadTestingPhase3::test_database_connection_pool_performance",
  "performance/test_load_testing_phase3.py::TestLoadTestingPhase3::test_machine_learning_algorithm_performance",
  "performance/test_load_testing_phase3.py::TestLoadTestingPhase3::test_memory_usage_profiling",
  "performance/test_load_testing_phase3.py::TestLoadTestingPhase3::test_phase3_performance_completion",
  "performance/test_memory_efficient_processing.py::TestDataValidator::test_basic_validation",
  "performance/test_memory_efficient_processing.py::TestDataValidator::test_custom_validation_rules",
  "performance/test_memory_efficient_processing.py::TestDataValidator::test_duplicate_validation",
  "performance/test_memory_efficient_processing.py::TestDataValidator::test_empty_dataset_validation",
  "performance/test_memory_efficient_processing.py::TestFileValidation::test_file_exists_validation",
  "performance/test_memory_efficient_processing.py::TestFileValidation::test_file_extension_validation",
  "performance/test_memory_efficient_processing.py::TestFileValidation::test_large_file_validation",
  "performance/test_memory_efficient_processing.py::TestLargeDatasetAnalyzer::test_dataset_analysis",
  "performance/test_memory_efficient_processing.py::TestMemoryMetrics::test_memory_metrics_collection",
  "performance/test_memory_efficient_processing.py::TestMemoryMetrics::test_memory_metrics_dict_conversion",
  "performance/test_memory_efficient_processing.py::TestMemoryOptimizedDataLoader::test_chunk_dataframe",
  "performance/test_memory_efficient_processing.py::TestMemoryOptimizedDataLoader::test_csv_loading",
  "performance/test_memory_efficient_processing.py::TestMemoryOptimizedDataLoader::test_dataset_loading",
  "performance/test_memory_efficient_processing.py::TestMemoryOptimizedDataLoader::test_datatype_optimization",
  "performance/test_memory_efficient_processing.py::TestMemoryOptimizedDataLoader::test_memory_monitoring",
  "performance/test_memory_efficient_processing.py::TestStreamingDataProcessor::test_basic_processing",
  "performance/test_memory_efficient_processing.py::TestStreamingDataProcessor::test_progress_callback",
  "performance/test_mutation_testing.py::TestMutationTestingAlgorithms::test_detection_result_processing",
  "performance/test_mutation_testing.py::TestMutationTestingAlgorithms::test_isolation_forest_parameter_validation",
  "performance/test_mutation_testing.py::TestMutationTestingBusinessLogic::test_ensemble_voting_logic",
  "performance/test_mutation_testing.py::TestMutationTestingDataValidation::test_dataset_validation_mutations",
  "performance/test_mutation_testing.py::TestMutationTestingDomain::test_anomaly_score_mutations",
  "performance/test_mutation_testing.py::TestMutationTestingDomain::test_contamination_rate_mutations",
  "performance/test_mutation_testing.py::TestOverallMutationTestQuality::test_mutation_test_coverage_analysis",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_algorithm_comparison_benchmark",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_algorithm_performance_scaling[100-IsolationForest]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_algorithm_performance_scaling[100-LocalOutlierFactor]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_algorithm_performance_scaling[1000-IsolationForest]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_algorithm_performance_scaling[1000-LocalOutlierFactor]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_algorithm_performance_scaling[500-IsolationForest]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_algorithm_performance_scaling[500-LocalOutlierFactor]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_batch_processing_performance",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_concurrent_algorithm_execution",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_data_loading_performance",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_dimensionality_performance_impact[10]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_dimensionality_performance_impact[20]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_dimensionality_performance_impact[50]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_dimensionality_performance_impact[5]",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_feature_engineering_performance",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_memory_efficiency",
  "performance/test_optimized_performance.py::TestOptimizedPerformance::test_resource_cleanup_performance",
  "performance/test_optimized_performance.py::TestPerformanceRegression::test_performance_regression_detection",
  "performance/test_performance.py::TestAPIPerformance::test_api_throughput",
  "performance/test_performance.py::TestAPIPerformance::test_health_endpoint_response_time",
  "performance/test_performance.py::TestDatabasePerformance::test_bulk_insert_performance",
  "performance/test_performance.py::TestDatabasePerformance::test_query_performance",
  "performance/test_performance.py::TestDetectionPerformance::test_concurrent_detection_performance",
  "performance/test_performance.py::TestDetectionPerformance::test_large_dataset_detection_time",
  "performance/test_performance.py::TestDetectionPerformance::test_memory_usage_large_dataset",
  "performance/test_performance.py::TestMemoryEfficiency::test_large_dataset_memory_efficiency",
  "performance/test_performance.py::TestMemoryEfficiency::test_no_memory_leaks_in_detection",
  "performance/test_performance.py::TestPerformanceBenchmarks::test_detection_algorithm_benchmarks",
  "performance/test_performance.py::TestPerformanceBenchmarks::test_scalability_analysis",
  "performance/test_performance_benchmarks.py::TestLoadTesting::test_batch_processing_optimization",
  "performance/test_performance_benchmarks.py::TestLoadTesting::test_concurrent_requests_simulation",
  "performance/test_performance_benchmarks.py::TestLoadTesting::test_memory_pressure_handling",
  "performance/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_concurrent_training_performance",
  "performance/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_memory_efficiency_benchmarks",
  "performance/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_prediction_performance_scaling",
  "performance/test_performance_benchmarks.py::TestPerformanceBenchmarks::test_training_performance_scaling",
  "performance/test_performance_benchmarks.py::TestScalabilityTesting::test_database_connection_pool_stress",
  "performance/test_performance_benchmarks.py::TestScalabilityTesting::test_horizontal_scaling_simulation",
  "performance/test_performance_benchmarks.py::TestScalabilityTesting::test_streaming_throughput_limits",
  "performance/test_performance_infrastructure.py::TestCacheManager::test_cache_factory_functions",
  "performance/test_performance_infrastructure.py::TestCacheManager::test_cache_manager_basic_operations",
  "performance/test_performance_infrastructure.py::TestCacheManager::test_cache_manager_compression",
  "performance/test_performance_infrastructure.py::TestCacheManager::test_cache_manager_fallback",
  "performance/test_performance_infrastructure.py::TestDataFrameOptimizer::test_dataframe_filtering_optimization",
  "performance/test_performance_infrastructure.py::TestDataFrameOptimizer::test_dataframe_optimizer_basic",
  "performance/test_performance_infrastructure.py::TestDataFrameOptimizer::test_dtype_optimization",
  "performance/test_performance_infrastructure.py::TestInMemoryCache::test_basic_cache_operations",
  "performance/test_performance_infrastructure.py::TestInMemoryCache::test_cache_lru_eviction",
  "performance/test_performance_infrastructure.py::TestInMemoryCache::test_cache_pattern_matching",
  "performance/test_performance_infrastructure.py::TestInMemoryCache::test_cache_statistics",
  "performance/test_performance_infrastructure.py::TestInMemoryCache::test_cache_ttl_expiration",
  "performance/test_performance_infrastructure.py::TestIntegration::test_cache_and_profiler_integration",
  "performance/test_performance_infrastructure.py::TestIntegration::test_container_integration",
  "performance/test_performance_infrastructure.py::TestIntegration::test_end_to_end_optimization_workflow",
  "performance/test_performance_infrastructure.py::TestIntegration::test_monitoring_and_profiling_integration",
  "performance/test_performance_infrastructure.py::TestPerformanceProfiler::test_basic_profiling",
  "performance/test_performance_infrastructure.py::TestPerformanceProfiler::test_metrics_collection",
  "performance/test_performance_infrastructure.py::TestPerformanceProfiler::test_performance_summary",
  "performance/test_performance_infrastructure.py::TestPerformanceProfiler::test_profiling_decorator",
  "performance/test_performance_infrastructure.py::TestPerformanceProfiler::test_results_export",
  "performance/test_performance_infrastructure.py::TestQueryOptimizer::test_optimization_decorator",
  "performance/test_performance_infrastructure.py::TestQueryOptimizer::test_query_cache_functionality",
  "performance/test_performance_infrastructure.py::TestQueryOptimizer::test_query_optimizer_basic",
  "performance/test_performance_infrastructure.py::TestQueryOptimizer::test_query_statistics",
  "performance/test_performance_infrastructure.py::TestRedisCache::test_redis_basic_operations",
  "performance/test_performance_infrastructure.py::TestRedisCache::test_redis_serialization",
  "performance/test_performance_infrastructure.py::TestSystemMonitor::test_current_metrics_collection",
  "performance/test_performance_infrastructure.py::TestSystemMonitor::test_metric_history",
  "performance/test_performance_infrastructure.py::TestSystemMonitor::test_monitoring_lifecycle",
  "performance/test_performance_infrastructure.py::TestSystemMonitor::test_monitoring_summary",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_artifact_management",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_build_pipeline_execution",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_deployment_readiness_validation",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_deployment_simulation",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_environment_variable_handling",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_integration_with_version_control",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_parallel_pipeline_execution",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_pipeline_error_handling",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_pipeline_metrics_and_monitoring",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_python_version_matrix",
  "pipeline/test_ci_cd_comprehensive.py::TestCICDPipeline::test_test_pipeline_execution",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_application_deployment",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_deployment_logging",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_deployment_monitoring_setup",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_deployment_rollback",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_deployment_status_monitoring",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_deployment_validation",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_infrastructure_provisioning",
  "pipeline/test_deployment_comprehensive.py::TestDeploymentPipeline::test_multi_environment_deployment_workflow",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_container_execution",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_container_health_checks",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_docker_compose_generation",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_docker_image_building",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_dockerfile_best_practices_validation",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_dockerfile_creation",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_image_information_retrieval",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_image_registry_operations",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_image_size_optimization",
  "pipeline/test_docker_comprehensive.py::TestDockerPipeline::test_security_scanning",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_alerting_setup_and_evaluation",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_comprehensive_monitoring_summary",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_dashboard_creation",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_health_checks_setup_and_execution",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_log_aggregation_and_analysis",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_metrics_collection_execution",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_metrics_collection_setup",
  "pipeline/test_monitoring_comprehensive.py::TestMonitoringPipeline::test_slo_monitoring_setup_and_calculation",
  "playwright/test_sequential_launches.py::test_sequential_launches",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_active_sessions_list",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_admin_endpoint_access",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_admin_endpoint_forbidden_for_user",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_change_password_mismatch",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_change_password_successful",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_change_password_weak_password",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_create_api_key",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_get_current_user",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_get_current_user_unauthorized",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_invalid_token_format",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_list_api_keys",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_login_attempt_logging",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_login_invalid_credentials",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_login_invalid_email_format",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_login_missing_fields",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_login_rate_limiting",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_login_successful",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_logout_successful",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_logout_without_token",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_malformed_jwt_token",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_mfa_setup_request",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_mfa_verify_invalid_code",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_mfa_verify_successful",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_password_reset_confirm",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_password_reset_invalid_token",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_password_reset_request",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_permission_check_invalid",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_permission_check_valid",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_refresh_token_expired",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_refresh_token_successful",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_revoke_all_sessions",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_revoke_api_key",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_revoke_session",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_security_events_log",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpoints::test_token_missing_claims",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpointsIntegration::test_end_to_end_auth_flow",
  "presentation/api/test_auth_endpoints.py::TestAuthEndpointsIntegration::test_role_based_access_control",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_auth_service_unavailable",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_change_password_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_change_password_wrong_current",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_concurrent_login_attempts",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_create_api_key_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_enable_mfa_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_forgot_password_request",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_get_current_user_invalid_token",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_get_current_user_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_get_current_user_unauthorized",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_list_active_sessions",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_list_api_keys",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_login_account_locked",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_login_empty_credentials",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_login_invalid_credentials",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_login_missing_fields",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_login_oauth2_format",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_login_rate_limiting",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_login_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_logout_all_sessions",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_logout_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_mfa_login_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_refresh_token_expired",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_refresh_token_invalid",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_refresh_token_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_register_duplicate_email",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_register_duplicate_username",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_register_invalid_email",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_register_missing_required_fields",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_register_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_register_weak_password",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_reset_password_invalid_token",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_reset_password_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_revoke_api_key",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_token_validation_error",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_update_user_profile_success",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpoints::test_verify_mfa_setup",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpointsIntegration::test_auth_endpoint_cors",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpointsIntegration::test_complete_auth_workflow",
  "presentation/api/test_auth_endpoints_comprehensive.py::TestAuthEndpointsIntegration::test_security_headers_validation",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_api_keys_delete",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_api_keys_post",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_endpoints_methods[/api/v1/auth/api-keys-POST-True]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_endpoints_methods[/api/v1/auth/login-POST-False]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_endpoints_methods[/api/v1/auth/logout-POST-True]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_endpoints_methods[/api/v1/auth/me-GET-True]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_endpoints_methods[/api/v1/auth/refresh-POST-True]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_endpoints_methods[/api/v1/auth/register-POST-False]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_login_post",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_logout_post",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_me_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_refresh_post",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestAuthEndpoints::test_auth_register_post",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_all_endpoints_have_appropriate_status_codes",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_all_endpoints_return_json",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/auth/api-keys-POST-True-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/auth/login-POST-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/auth/logout-POST-True-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/auth/me-GET-True-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/auth/refresh-POST-True-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/auth/register-POST-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/datasets/-GET-True-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/health/-GET-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/health/history-GET-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/health/live-GET-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/health/metrics-GET-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/health/ready-GET-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoint_comprehensive_validation[/api/v1/health/summary-GET-False-application/json]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoints_cors_headers",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestComprehensiveEndpointValidation::test_endpoints_security_headers",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_by_id_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_delete",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_endpoints_methods[/api/v1/datasets/-GET-True]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_endpoints_methods[/api/v1/datasets/upload-POST-True]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_quality_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_sample_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_split_post",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestDatasetEndpoints::test_datasets_upload_post",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_endpoints_allowed_methods[/api/v1/health/-GET]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_endpoints_allowed_methods[/api/v1/health/history-GET]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_endpoints_allowed_methods[/api/v1/health/live-GET]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_endpoints_allowed_methods[/api/v1/health/metrics-GET]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_endpoints_allowed_methods[/api/v1/health/ready-GET]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_endpoints_allowed_methods[/api/v1/health/summary-GET]",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_history_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_live_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_metrics_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_ready_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_root_get",
  "presentation/api/test_autogenerated_endpoints_positive.py::TestHealthEndpoints::test_health_summary_get",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_bulk_dataset_operations",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_create_dataset_empty_file",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_create_dataset_from_json",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_create_dataset_from_upload_success",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_create_dataset_invalid_file_format",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_create_dataset_large_file",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_dataset_feature_engineering",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_dataset_permission_denied",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_dataset_service_timeout",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_dataset_statistics",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_dataset_storage_full",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_delete_dataset_in_use",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_delete_dataset_not_found",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_delete_dataset_success",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_export_dataset_csv",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_export_dataset_invalid_format",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_export_dataset_json",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_get_dataset_by_id_success",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_get_dataset_data_preview",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_get_dataset_invalid_uuid",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_get_dataset_not_found",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_get_dataset_quality_report",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_list_datasets_pagination",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_list_datasets_success",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_list_datasets_unauthorized",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_list_datasets_with_filters",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_update_dataset_not_found",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_update_dataset_success",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpoints::test_update_dataset_validation_error",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpointsIntegration::test_complete_dataset_lifecycle",
  "presentation/api/test_datasets_endpoints_comprehensive.py::TestDatasetEndpointsIntegration::test_dataset_validation_workflow",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_bulk_detector_operations",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_compare_detectors",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_create_detector_duplicate_name",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_create_detector_invalid_algorithm",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_create_detector_invalid_contamination_rate",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_create_detector_invalid_hyperparameters",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_create_detector_missing_required_fields",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_create_detector_success",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_delete_detector_in_use",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_delete_detector_not_found",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_delete_detector_success",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_detector_memory_limit",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_detector_permission_denied",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_detector_service_timeout",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_export_detector_model",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_algorithm_info",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_detector_by_id_success",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_detector_hyperparameters",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_detector_invalid_uuid",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_detector_metadata",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_detector_not_found",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_detector_performance_metrics",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_get_detector_training_history",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_import_detector_model",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_list_detectors_success",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_list_detectors_unauthorized",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_list_detectors_with_algorithm_filter",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_list_detectors_with_fitted_filter",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_list_detectors_with_pagination",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_list_supported_algorithms",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_update_detector_hyperparameters_only",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_update_detector_not_found",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_update_detector_success",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_update_detector_validation_error",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_update_fitted_detector_restriction",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpoints::test_validate_algorithm_hyperparameters",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpointsIntegration::test_complete_detector_lifecycle",
  "presentation/api/test_detectors_endpoints_comprehensive.py::TestDetectorEndpointsIntegration::test_detector_algorithm_workflow",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_algorithm_comparison_api",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_api_performance_monitoring",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_batch_detection_api",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_concurrent_api_requests",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_create_detector_with_real_algorithm",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_error_handling_api",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_full_detection_workflow_api",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_full_training_workflow_api",
  "presentation/api/test_endpoints_integration.py::TestDetectorEndpointsIntegration::test_list_available_algorithms",
  "presentation/api/test_generated_health_endpoints.py::test_health_endpoint",
  "presentation/api/test_generated_health_endpoints.py::test_health_methods_not_allowed[delete]",
  "presentation/api/test_generated_health_endpoints.py::test_health_methods_not_allowed[get]",
  "presentation/api/test_generated_health_endpoints.py::test_health_methods_not_allowed[options]",
  "presentation/api/test_generated_health_endpoints.py::test_health_methods_not_allowed[post]",
  "presentation/api/test_generated_health_endpoints.py::test_health_methods_not_allowed[put]",
  "presentation/api/test_generated_health_endpoints.py::test_health_metrics_endpoint",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_admin_health_endpoint",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_basic_health_check",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_build_info_endpoint",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_cache_health_check",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_circuit_breaker_status",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_custom_health_checks",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_database_health_check",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_dependencies_health",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_detailed_health_status",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_check_logging",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_check_metrics_collection",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_check_no_auth_required",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_check_service_exception",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_response_format",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_response_headers",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_status_critical_failure",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_health_status_with_unhealthy_service",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_liveness_probe",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_load_health_status",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_metrics_endpoint",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_ml_frameworks_health",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_partial_health_check_failure",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_performance_metrics",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_readiness_probe",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_startup_probe",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_storage_health_check",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_system_metrics",
  "presentation/api/test_health_endpoints.py::TestHealthEndpoints::test_version_endpoint",
  "presentation/api/test_health_endpoints.py::TestHealthEndpointsIntegration::test_health_check_workflow",
  "presentation/api/test_health_endpoints.py::TestHealthEndpointsIntegration::test_kubernetes_probes_workflow",
  "presentation/api/test_health_endpoints.py::TestHealthEndpointsIntegration::test_monitoring_data_collection",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_empty_string_required_fields",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_file_size_boundary",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_max_string_length_description",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_max_string_length_username",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_min_password_length",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_numeric_boundary_values",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_numeric_upper_boundary",
  "presentation/api/test_validation_error_edge_cases.py::TestBoundaryValues::test_zero_values",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_concurrent_requests_with_errors",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_empty_file_upload",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_extremely_long_request_urls",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_malformed_json_with_special_characters",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_multiple_errors_in_single_request",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_sql_injection_attempts",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_unicode_in_requests",
  "presentation/api/test_validation_error_edge_cases.py::TestEdgeCaseScenarios::test_xss_attempts",
  "presentation/api/test_validation_error_edge_cases.py::TestErrorResponseStructure::test_400_error_structure",
  "presentation/api/test_validation_error_edge_cases.py::TestErrorResponseStructure::test_401_error_structure",
  "presentation/api/test_validation_error_edge_cases.py::TestErrorResponseStructure::test_404_error_structure",
  "presentation/api/test_validation_error_edge_cases.py::TestErrorResponseStructure::test_405_error_structure",
  "presentation/api/test_validation_error_edge_cases.py::TestErrorResponseStructure::test_422_error_structure",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_auth_service_exception",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_database_connection_error",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_file_processing_exception",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_memory_error_handling",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_service_layer_exception",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_timeout_error_handling",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_unexpected_exception_handling",
  "presentation/api/test_validation_error_edge_cases.py::TestInternalErrorHandling::test_validation_error_handling",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_invalid_enum_values",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_invalid_field_types_auth_register",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_invalid_json_structure_complex",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_invalid_uuid_format",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_malformed_json_auth_register",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_malformed_json_dataset_upload",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_missing_required_fields_auth_login",
  "presentation/api/test_validation_error_edge_cases.py::TestMalformedJSONValidation::test_missing_required_fields_auth_register",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_autonomous_help",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_autonomous_service_error_handling",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_autonomous_service_memory_error",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_basic",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_help",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_invalid_contamination",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_invalid_max_algorithms",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_invalid_output_directory",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_json_data",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_large_dataset_warning",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_missing_output_file",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_no_tuning",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_parquet_data",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_performance_monitoring",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_save_model",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_verbose_output",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_with_config_file",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_detect_with_custom_options",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_profile_basic",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_profile_help",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_profile_nonexistent_file",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_profile_save_report",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_profile_verbose",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_quick_detect_basic",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_quick_detect_save_results",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_quick_detect_verbose",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_quick_detect_with_contamination",
  "presentation/cli/test_autonomous_cli.py::TestAutonomousCLI::test_quick_help",
  "presentation/cli/test_cli_comprehensive.py::TestAutonomousCLI::test_autonomous_detect",
  "presentation/cli/test_cli_comprehensive.py::TestAutonomousCLI::test_autonomous_profile",
  "presentation/cli/test_cli_comprehensive.py::TestAutonomousCLI::test_autonomous_quick",
  "presentation/cli/test_cli_comprehensive.py::TestCLIErrorHandling::test_file_permission_errors",
  "presentation/cli/test_cli_comprehensive.py::TestCLIErrorHandling::test_invalid_command",
  "presentation/cli/test_cli_comprehensive.py::TestCLIErrorHandling::test_invalid_option_values",
  "presentation/cli/test_cli_comprehensive.py::TestCLIErrorHandling::test_missing_required_arguments",
  "presentation/cli/test_cli_comprehensive.py::TestCLIIntegration::test_complete_detection_workflow",
  "presentation/cli/test_cli_comprehensive.py::TestCLIIntegration::test_configuration_workflow",
  "presentation/cli/test_cli_comprehensive.py::TestCLIIntegration::test_help_system_completeness",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_delete",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_describe",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_export_csv",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_list",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_load_csv",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_load_missing_file",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_show",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_show_not_found",
  "presentation/cli/test_cli_comprehensive.py::TestDatasetsCLI::test_dataset_validate",
  "presentation/cli/test_cli_comprehensive.py::TestDetectionCLI::test_detection_batch_multiple_detectors",
  "presentation/cli/test_cli_comprehensive.py::TestDetectionCLI::test_detection_evaluate",
  "presentation/cli/test_cli_comprehensive.py::TestDetectionCLI::test_detection_results",
  "presentation/cli/test_cli_comprehensive.py::TestDetectionCLI::test_detection_run",
  "presentation/cli/test_cli_comprehensive.py::TestDetectionCLI::test_detection_run_unfitted_detector",
  "presentation/cli/test_cli_comprehensive.py::TestDetectionCLI::test_detection_train",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_algorithms_list",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_create_invalid_algorithm",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_create_success",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_delete_cancelled",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_delete_success",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_list",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_list_with_algorithm_filter",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_show",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_show_not_found",
  "presentation/cli/test_cli_comprehensive.py::TestDetectorsCLI::test_detector_tune_hyperparameters",
  "presentation/cli/test_cli_comprehensive.py::TestExportCLI::test_export_excel",
  "presentation/cli/test_cli_comprehensive.py::TestExportCLI::test_export_list_formats",
  "presentation/cli/test_cli_comprehensive.py::TestExportCLI::test_export_powerbi",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_config_set_invalid_format",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_config_set_valid_format",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_config_show",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_generate_config_autonomous",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_generate_config_experiment",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_generate_config_invalid_type",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_generate_config_test",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_generate_config_yaml_format",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_main_help",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_quickstart_accept",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_quickstart_interactive",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_quiet_mode",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_status_command",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_verbose_and_quiet_conflict",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_verbose_mode",
  "presentation/cli/test_cli_comprehensive.py::TestMainCLIApp::test_version_command",
  "presentation/cli/test_cli_comprehensive.py::TestPreprocessingCLI::test_preprocessing_clean",
  "presentation/cli/test_cli_comprehensive.py::TestPreprocessingCLI::test_preprocessing_pipeline_create",
  "presentation/cli/test_cli_comprehensive.py::TestPreprocessingCLI::test_preprocessing_transform",
  "presentation/cli/test_cli_comprehensive.py::TestServerCLI::test_server_start_help",
  "presentation/cli/test_cli_comprehensive.py::TestServerCLI::test_server_status",
  "presentation/cli/test_compat.py::TestCompatibilityScenarios::test_edge_case_with_non_standard_commands",
  "presentation/cli/test_compat.py::TestCompatibilityScenarios::test_edge_case_with_none_commands",
  "presentation/cli/test_compat.py::TestCompatibilityScenarios::test_fallback_behavior",
  "presentation/cli/test_compat.py::TestCompatibilityScenarios::test_newer_typer_version_simulation",
  "presentation/cli/test_compat.py::TestCompatibilityScenarios::test_older_typer_version_simulation",
  "presentation/cli/test_compat.py::TestCountCommands::test_count_commands_with_commands",
  "presentation/cli/test_compat.py::TestCountCommands::test_count_commands_with_empty_commands",
  "presentation/cli/test_compat.py::TestCountCommands::test_count_commands_with_no_commands",
  "presentation/cli/test_compat.py::TestCountCommands::test_count_commands_with_non_dict_commands",
  "presentation/cli/test_compat.py::TestCountCommands::test_count_commands_with_real_typer_app",
  "presentation/cli/test_compat.py::TestGetCommand::test_get_command_with_existing_command",
  "presentation/cli/test_compat.py::TestGetCommand::test_get_command_with_no_commands",
  "presentation/cli/test_compat.py::TestGetCommand::test_get_command_with_non_dict_commands",
  "presentation/cli/test_compat.py::TestGetCommand::test_get_command_with_non_existing_command",
  "presentation/cli/test_compat.py::TestGetCommand::test_get_command_with_real_typer_app",
  "presentation/cli/test_compat.py::TestGetCommandNames::test_get_command_names_with_dict_commands",
  "presentation/cli/test_compat.py::TestGetCommandNames::test_get_command_names_with_no_commands",
  "presentation/cli/test_compat.py::TestGetCommandNames::test_get_command_names_with_non_dict_commands",
  "presentation/cli/test_compat.py::TestGetCommandNames::test_get_command_names_with_real_typer_app",
  "presentation/cli/test_compat.py::TestHasCommands::test_has_commands_with_commands",
  "presentation/cli/test_compat.py::TestHasCommands::test_has_commands_with_empty_commands",
  "presentation/cli/test_compat.py::TestHasCommands::test_has_commands_with_no_commands",
  "presentation/cli/test_compat.py::TestHasCommands::test_has_commands_with_non_dict_commands",
  "presentation/cli/test_compat.py::TestHasCommands::test_has_commands_with_real_typer_app",
  "presentation/cli/test_compat.py::TestIntegrationWithRealTyper::test_integration_with_complex_typer_app",
  "presentation/cli/test_compat.py::TestIntegrationWithRealTyper::test_integration_with_nested_typer_apps",
  "presentation/cli/test_compat.py::TestListCommands::test_list_commands_with_commands_attribute",
  "presentation/cli/test_compat.py::TestListCommands::test_list_commands_with_empty_typer_app",
  "presentation/cli/test_compat.py::TestListCommands::test_list_commands_with_no_commands",
  "presentation/cli/test_compat.py::TestListCommands::test_list_commands_with_real_typer_app",
  "presentation/cli/test_compat.py::TestListCommands::test_list_commands_with_registered_commands_attribute",
  "presentation/cli/test_compat.py::TestListCommands::test_list_commands_with_registered_commands_list",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_count_commands_with_len_method",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_count_commands_with_no_len_method",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_count_commands_with_none_from_list_commands",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_get_command_names_with_keys_method",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_get_command_names_with_none_from_list_commands",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_get_command_names_with_other_object",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_get_command_with_get_method",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_get_command_with_none_from_list_commands",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_get_command_with_other_object",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_has_commands_with_empty_len",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_has_commands_with_len_method",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_has_commands_with_no_len_method",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_has_commands_with_none_from_list_commands",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_list_commands_returns_none_case",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_list_commands_with_command_with_empty_name",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_list_commands_with_command_with_none_name",
  "presentation/cli/test_compat_additional.py::TestAdditionalCoverage::test_list_commands_with_command_without_name",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_batch_export_comparison_results",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_batch_export_multiple_formats",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_complete_export_workflow",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_csv_export_basic",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_csv_export_with_options",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_database_export_postgresql",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_database_export_sqlite",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_excel_export_basic",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_excel_export_multiple_sheets",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_excel_export_with_formatting",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_excel_export_with_template",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_export_configuration_workflow",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_export_help",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_export_invalid_format",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_export_invalid_output_directory",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_export_missing_input_file",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_export_service_unavailable",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_generate_report_html",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_generate_report_pdf",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_json_export_basic",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_json_export_formatted",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_list_formats",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_list_formats_detailed",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_powerbi_export_authentication_error",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_powerbi_export_basic",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_powerbi_export_with_dataset_name",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_powerbi_export_with_refresh",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_powerbi_missing_workspace",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_tableau_export_basic",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_tableau_export_hyper_format",
  "presentation/cli/test_export_cli.py::TestExportCLI::test_tableau_server_publish",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_analyze_all",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_analyze_correlations",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_analyze_distribution",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_analyze_missing_values",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_analyze_outliers",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_all_options",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_dataset_not_found",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_duplicates_keep_first",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_duplicates_keep_last",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_duplicates_remove",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_help",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_invalid_missing_strategy",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_invalid_outlier_method",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_missing_values_drop_rows",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_missing_values_fill_mean",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_missing_values_fill_median",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_missing_values_interpolate",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_outliers_clip",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_outliers_iqr",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_outliers_remove",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_clean_outliers_zscore",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_complete_preprocessing_workflow",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_feature_engineering_create_features",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_feature_engineering_datetime_features",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_feature_engineering_text_features",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_file_preprocessing_workflow",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_pipeline_create",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_pipeline_delete",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_pipeline_list",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_pipeline_run",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_preprocessing_help",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_preprocessing_service_error",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_all_options",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_encoding_label",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_encoding_onehot",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_encoding_target",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_feature_selection",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_help",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_invalid_encoding_method",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_invalid_scaling_method",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_pca",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_scaling_minmax",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_scaling_robust",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_transform_scaling_standard",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_validate_dataset",
  "presentation/cli/test_preprocessing_cli.py::TestPreprocessingCLI::test_validate_dataset_with_errors",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_complete_server_lifecycle",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_config_show",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_config_validate",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_config_validate_invalid",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_health_check",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_health_check_failed",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_logs_filter_level",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_logs_tail",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_logs_view",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_metrics",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_metrics_watch",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_restart_server",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_restart_server_with_delay",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_server_help",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_help",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_custom_host_port",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_default",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_development_mode",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_permission_denied",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_port_in_use",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_production_mode",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_with_config_file",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_with_ssl",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_start_server_with_workers",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_status_custom_url",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_status_detailed",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_status_help",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_status_server_not_running",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_status_server_running",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_status_server_unhealthy",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_status_timeout",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_stop_server",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_stop_server_force",
  "presentation/cli/test_server_cli.py::TestServerCLI::test_stop_server_not_running",
  "presentation/test_api.py::TestDatasetEndpoints::test_dataset_quality_check",
  "presentation/test_api.py::TestDatasetEndpoints::test_get_dataset_sample",
  "presentation/test_api.py::TestDatasetEndpoints::test_upload_dataset_csv",
  "presentation/test_api.py::TestDetectionEndpoints::test_train_detector",
  "presentation/test_api.py::TestDetectorEndpoints::test_create_detector",
  "presentation/test_api.py::TestDetectorEndpoints::test_delete_detector",
  "presentation/test_api.py::TestDetectorEndpoints::test_get_detector",
  "presentation/test_api.py::TestDetectorEndpoints::test_list_detectors",
  "presentation/test_api.py::TestDetectorEndpoints::test_update_detector",
  "presentation/test_api.py::TestHealthEndpoints::test_health_check",
  "presentation/test_api.py::TestHealthEndpoints::test_readiness_check",
  "presentation/test_api_comprehensive.py::TestAPIErrorHandling::test_authentication_required",
  "presentation/test_api_comprehensive.py::TestAPIErrorHandling::test_concurrent_request_handling",
  "presentation/test_api_comprehensive.py::TestAPIErrorHandling::test_database_connection_failure_handling",
  "presentation/test_api_comprehensive.py::TestAPIErrorHandling::test_invalid_json_handling",
  "presentation/test_api_comprehensive.py::TestAPIErrorHandling::test_large_file_upload_handling",
  "presentation/test_api_comprehensive.py::TestAPIErrorHandling::test_rate_limiting",
  "presentation/test_api_comprehensive.py::TestAPIPerformance::test_memory_usage_with_large_datasets",
  "presentation/test_api_comprehensive.py::TestAPIPerformance::test_pagination_performance",
  "presentation/test_api_comprehensive.py::TestAPIPerformance::test_response_time_limits",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_create_api_key",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_get_current_user_profile",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_login_invalid_credentials",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_login_success",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_logout",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_refresh_token",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_revoke_api_key",
  "presentation/test_api_comprehensive.py::TestAuthenticationEndpoints::test_user_registration",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_dataset_delete_with_dependencies",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_dataset_export_formats",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_dataset_preprocessing_options",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_dataset_quality_analysis",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_dataset_sample_with_options",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_dataset_statistics",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_list_datasets_with_metadata",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_upload_csv_dataset",
  "presentation/test_api_comprehensive.py::TestDatasetEndpoints::test_upload_parquet_dataset",
  "presentation/test_api_comprehensive.py::TestDetectionEndpoints::test_anomaly_prediction",
  "presentation/test_api_comprehensive.py::TestDetectionEndpoints::test_batch_detection",
  "presentation/test_api_comprehensive.py::TestDetectionEndpoints::test_detection_performance_metrics",
  "presentation/test_api_comprehensive.py::TestDetectionEndpoints::test_detection_results_management",
  "presentation/test_api_comprehensive.py::TestDetectionEndpoints::test_detector_training_workflow",
  "presentation/test_api_comprehensive.py::TestDetectionEndpoints::test_ensemble_detection",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_create_detector_basic",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_create_detector_with_advanced_parameters",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_delete_detector",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_detector_clone",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_detector_export_import",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_detector_validation_endpoints",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_get_detector_details",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_list_detectors_with_filters",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_list_detectors_with_pagination",
  "presentation/test_api_comprehensive.py::TestDetectorEndpoints::test_update_detector",
  "presentation/test_api_comprehensive.py::TestExperimentEndpoints::test_create_experiment",
  "presentation/test_api_comprehensive.py::TestExperimentEndpoints::test_experiment_execution",
  "presentation/test_api_comprehensive.py::TestExperimentEndpoints::test_experiment_results_analysis",
  "presentation/test_api_comprehensive.py::TestExperimentEndpoints::test_experiment_visualization_data",
  "presentation/test_api_comprehensive.py::TestExperimentEndpoints::test_experiment_workflow_management",
  "presentation/test_api_comprehensive.py::TestHealthEndpoints::test_health_check_basic",
  "presentation/test_api_comprehensive.py::TestHealthEndpoints::test_health_check_failure_simulation",
  "presentation/test_api_comprehensive.py::TestHealthEndpoints::test_health_check_with_dependencies",
  "presentation/test_api_comprehensive.py::TestHealthEndpoints::test_liveness_check",
  "presentation/test_api_comprehensive.py::TestHealthEndpoints::test_metrics_endpoint",
  "presentation/test_api_comprehensive.py::TestHealthEndpoints::test_readiness_check",
  "presentation/test_integration_comprehensive.py::TestCLIIntegration::test_cli_api_integration",
  "presentation/test_integration_comprehensive.py::TestCLIIntegration::test_cli_direct_service_integration",
  "presentation/test_integration_comprehensive.py::TestCrossPlatformIntegration::test_api_cli_web_data_flow",
  "presentation/test_integration_comprehensive.py::TestCrossPlatformIntegration::test_concurrent_access_across_interfaces",
  "presentation/test_integration_comprehensive.py::TestCrossPlatformIntegration::test_session_consistency_across_interfaces",
  "presentation/test_integration_comprehensive.py::TestEndToEndAPIWorkflow::test_batch_operations",
  "presentation/test_integration_comprehensive.py::TestEndToEndAPIWorkflow::test_complete_detection_workflow",
  "presentation/test_integration_comprehensive.py::TestEndToEndAPIWorkflow::test_experiment_workflow",
  "presentation/test_integration_comprehensive.py::TestErrorHandlingIntegration::test_api_error_propagation_to_web",
  "presentation/test_integration_comprehensive.py::TestErrorHandlingIntegration::test_database_connection_error_handling",
  "presentation/test_integration_comprehensive.py::TestErrorHandlingIntegration::test_service_failure_handling",
  "presentation/test_integration_comprehensive.py::TestPerformanceIntegration::test_concurrent_operations_performance",
  "presentation/test_integration_comprehensive.py::TestPerformanceIntegration::test_end_to_end_performance",
  "presentation/test_integration_comprehensive.py::TestPerformanceIntegration::test_memory_usage_under_load",
  "presentation/test_integration_comprehensive.py::TestSecurityIntegration::test_authentication_consistency",
  "presentation/test_integration_comprehensive.py::TestSecurityIntegration::test_authorization_enforcement",
  "presentation/test_integration_comprehensive.py::TestSecurityIntegration::test_input_validation_consistency",
  "presentation/test_integration_comprehensive.py::TestWebUIIntegration::test_file_upload_integration",
  "presentation/test_integration_comprehensive.py::TestWebUIIntegration::test_form_submission_to_api",
  "presentation/test_integration_comprehensive.py::TestWebUIIntegration::test_real_time_updates_integration",
  "presentation/test_integration_comprehensive.py::TestWebUIIntegration::test_web_to_api_integration",
  "presentation/test_middleware_comprehensive.py::TestAuthenticationMiddleware::test_api_key_authentication",
  "presentation/test_middleware_comprehensive.py::TestAuthenticationMiddleware::test_expired_jwt_token",
  "presentation/test_middleware_comprehensive.py::TestAuthenticationMiddleware::test_invalid_api_key",
  "presentation/test_middleware_comprehensive.py::TestAuthenticationMiddleware::test_invalid_jwt_token",
  "presentation/test_middleware_comprehensive.py::TestAuthenticationMiddleware::test_jwt_token_validation",
  "presentation/test_middleware_comprehensive.py::TestAuthenticationMiddleware::test_missing_authorization_header",
  "presentation/test_middleware_comprehensive.py::TestAuthenticationMiddleware::test_role_based_access_control",
  "presentation/test_middleware_comprehensive.py::TestCompressionMiddleware::test_compression_content_types",
  "presentation/test_middleware_comprehensive.py::TestCompressionMiddleware::test_compression_threshold",
  "presentation/test_middleware_comprehensive.py::TestCompressionMiddleware::test_gzip_compression",
  "presentation/test_middleware_comprehensive.py::TestLoggingMiddleware::test_error_logging",
  "presentation/test_middleware_comprehensive.py::TestLoggingMiddleware::test_performance_logging",
  "presentation/test_middleware_comprehensive.py::TestLoggingMiddleware::test_request_logging",
  "presentation/test_middleware_comprehensive.py::TestLoggingMiddleware::test_response_logging",
  "presentation/test_middleware_comprehensive.py::TestLoggingMiddleware::test_sensitive_data_masking",
  "presentation/test_middleware_comprehensive.py::TestMiddlewareIntegration::test_concurrent_request_handling_with_middleware",
  "presentation/test_middleware_comprehensive.py::TestMiddlewareIntegration::test_error_handling_across_middleware",
  "presentation/test_middleware_comprehensive.py::TestMiddlewareIntegration::test_middleware_chain_execution_order",
  "presentation/test_middleware_comprehensive.py::TestMiddlewareIntegration::test_middleware_configuration",
  "presentation/test_middleware_comprehensive.py::TestMiddlewareIntegration::test_middleware_error_recovery",
  "presentation/test_middleware_comprehensive.py::TestMiddlewareIntegration::test_middleware_memory_usage",
  "presentation/test_middleware_comprehensive.py::TestMiddlewareIntegration::test_performance_impact_of_middleware",
  "presentation/test_middleware_comprehensive.py::TestRateLimitingMiddleware::test_rate_limiting_bypass_for_health_checks",
  "presentation/test_middleware_comprehensive.py::TestRateLimitingMiddleware::test_rate_limiting_different_endpoints",
  "presentation/test_middleware_comprehensive.py::TestRateLimitingMiddleware::test_rate_limiting_per_ip",
  "presentation/test_middleware_comprehensive.py::TestRateLimitingMiddleware::test_rate_limiting_per_user",
  "presentation/test_middleware_comprehensive.py::TestRateLimitingMiddleware::test_rate_limiting_reset",
  "presentation/test_middleware_comprehensive.py::TestRequestValidationMiddleware::test_content_type_validation",
  "presentation/test_middleware_comprehensive.py::TestRequestValidationMiddleware::test_json_validation",
  "presentation/test_middleware_comprehensive.py::TestRequestValidationMiddleware::test_malformed_request_handling",
  "presentation/test_middleware_comprehensive.py::TestRequestValidationMiddleware::test_request_size_validation",
  "presentation/test_middleware_comprehensive.py::TestRequestValidationMiddleware::test_sql_injection_prevention",
  "presentation/test_middleware_comprehensive.py::TestRequestValidationMiddleware::test_xss_prevention",
  "presentation/test_middleware_comprehensive.py::TestSecurityMiddleware::test_content_security_policy",
  "presentation/test_middleware_comprehensive.py::TestSecurityMiddleware::test_cors_headers",
  "presentation/test_middleware_comprehensive.py::TestSecurityMiddleware::test_ip_whitelisting",
  "presentation/test_middleware_comprehensive.py::TestSecurityMiddleware::test_request_id_injection",
  "presentation/test_middleware_comprehensive.py::TestSecurityMiddleware::test_request_size_limits",
  "presentation/test_middleware_comprehensive.py::TestSecurityMiddleware::test_security_headers_injection",
  "presentation/test_middleware_comprehensive.py::TestSecurityMiddleware::test_sensitive_header_removal",
  "presentation/test_web_comprehensive.py::TestHTMXEndpoints::test_dataset_upload_htmx",
  "presentation/test_web_comprehensive.py::TestHTMXEndpoints::test_detection_predict_htmx",
  "presentation/test_web_comprehensive.py::TestHTMXEndpoints::test_detection_train_htmx",
  "presentation/test_web_comprehensive.py::TestHTMXEndpoints::test_detector_create_htmx",
  "presentation/test_web_comprehensive.py::TestHTMXEndpoints::test_detector_list_htmx",
  "presentation/test_web_comprehensive.py::TestHTMXEndpoints::test_experiment_create_htmx",
  "presentation/test_web_comprehensive.py::TestHTMXEndpoints::test_live_updates_htmx",
  "presentation/test_web_comprehensive.py::TestPWAFeatures::test_cache_status",
  "presentation/test_web_comprehensive.py::TestPWAFeatures::test_installability_check",
  "presentation/test_web_comprehensive.py::TestPWAFeatures::test_manifest_json",
  "presentation/test_web_comprehensive.py::TestPWAFeatures::test_offline_page",
  "presentation/test_web_comprehensive.py::TestPWAFeatures::test_service_worker",
  "presentation/test_web_comprehensive.py::TestWebAppRoutes::test_dashboard_page",
  "presentation/test_web_comprehensive.py::TestWebAppRoutes::test_datasets_page",
  "presentation/test_web_comprehensive.py::TestWebAppRoutes::test_detection_page",
  "presentation/test_web_comprehensive.py::TestWebAppRoutes::test_detectors_page",
  "presentation/test_web_comprehensive.py::TestWebAppRoutes::test_experiments_page",
  "presentation/test_web_comprehensive.py::TestWebAppRoutes::test_home_page",
  "presentation/test_web_comprehensive.py::TestWebAppRoutes::test_static_files_serving",
  "presentation/test_web_comprehensive.py::TestWebUIAccessibility::test_alt_text_for_images",
  "presentation/test_web_comprehensive.py::TestWebUIAccessibility::test_aria_labels_and_roles",
  "presentation/test_web_comprehensive.py::TestWebUIAccessibility::test_keyboard_navigation_support",
  "presentation/test_web_comprehensive.py::TestWebUIAccessibility::test_semantic_html_structure",
  "presentation/test_web_comprehensive.py::TestWebUIAuthentication::test_login_form_submission",
  "presentation/test_web_comprehensive.py::TestWebUIAuthentication::test_login_page",
  "presentation/test_web_comprehensive.py::TestWebUIAuthentication::test_logout_functionality",
  "presentation/test_web_comprehensive.py::TestWebUIAuthentication::test_protected_route_access",
  "presentation/test_web_comprehensive.py::TestWebUIAuthentication::test_session_persistence",
  "presentation/test_web_comprehensive.py::TestWebUIComponents::test_dataset_preview_component",
  "presentation/test_web_comprehensive.py::TestWebUIComponents::test_detector_detail_modal",
  "presentation/test_web_comprehensive.py::TestWebUIComponents::test_experiment_results_component",
  "presentation/test_web_comprehensive.py::TestWebUIComponents::test_performance_dashboard_component",
  "presentation/test_web_comprehensive.py::TestWebUIComponents::test_visualization_components",
  "presentation/test_web_comprehensive.py::TestWebUIErrorHandling::test_404_error_page",
  "presentation/test_web_comprehensive.py::TestWebUIErrorHandling::test_500_error_handling",
  "presentation/test_web_comprehensive.py::TestWebUIErrorHandling::test_concurrent_request_handling",
  "presentation/test_web_comprehensive.py::TestWebUIErrorHandling::test_file_upload_error_handling",
  "presentation/test_web_comprehensive.py::TestWebUIErrorHandling::test_invalid_form_submission",
  "presentation/test_web_comprehensive.py::TestWebUIIntegration::test_cross_browser_compatibility_headers",
  "presentation/test_web_comprehensive.py::TestWebUIIntegration::test_end_to_end_detection_workflow",
  "presentation/test_web_comprehensive.py::TestWebUIIntegration::test_real_time_updates",
  "presentation/test_web_comprehensive.py::TestWebUIPerformance::test_htmx_response_times",
  "presentation/test_web_comprehensive.py::TestWebUIPerformance::test_large_dataset_list_performance",
  "presentation/test_web_comprehensive.py::TestWebUIPerformance::test_memory_usage_with_large_data",
  "presentation/test_web_comprehensive.py::TestWebUIPerformance::test_page_load_times",
  "presentation/test_web_ui_integration.py::TestAPIEndpoints::test_api_health_endpoint",
  "presentation/test_web_ui_integration.py::TestAPIEndpoints::test_api_root_endpoint_redirects_or_works",
  "presentation/test_web_ui_integration.py::TestAPIEndpoints::test_non_api_endpoints_not_found_in_api",
  "presentation/test_web_ui_integration.py::TestStaticAssets::test_app_css_accessible",
  "presentation/test_web_ui_integration.py::TestStaticAssets::test_javascript_assets_accessible",
  "presentation/test_web_ui_integration.py::TestStaticAssets::test_main_css_accessible",
  "presentation/test_web_ui_integration.py::TestStaticAssets::test_static_directory_structure",
  "presentation/test_web_ui_integration.py::TestWebUIMainPage::test_home_page_contains_pynomaly_branding",
  "presentation/test_web_ui_integration.py::TestWebUIMainPage::test_home_page_has_proper_html_structure",
  "presentation/test_web_ui_integration.py::TestWebUIMainPage::test_home_page_meta_tags",
  "presentation/test_web_ui_integration.py::TestWebUIMainPage::test_home_page_returns_200_with_title",
  "presentation/test_web_ui_integration.py::TestWebVsAPIRouting::test_api_routes_in_api_app",
  "presentation/test_web_ui_integration.py::TestWebVsAPIRouting::test_web_routes_in_web_app",
  "property/test_algorithm_properties.py::TestAlgorithmContractProperties::test_adapter_interface_contract",
  "property/test_algorithm_properties.py::TestAlgorithmContractProperties::test_fit_predict_consistency",
  "property/test_algorithm_properties.py::TestAlgorithmMathematicalProperties::test_contamination_consistency_property",
  "property/test_algorithm_properties.py::TestAlgorithmMathematicalProperties::test_deterministic_property",
  "property/test_algorithm_properties.py::TestAlgorithmMathematicalProperties::test_scale_invariance_property",
  "property/test_algorithm_properties.py::TestAlgorithmMathematicalProperties::test_score_range_property",
  "property/test_algorithm_properties.py::TestAlgorithmPerformanceProperties::test_memory_efficiency_property",
  "property/test_algorithm_properties.py::TestAlgorithmPerformanceProperties::test_scalability_property",
  "property/test_algorithm_properties.py::TestAlgorithmRobustnessProperties::test_noise_robustness_property",
  "property/test_algorithm_properties.py::TestAlgorithmRobustnessProperties::test_outlier_detection_property",
  "property/test_comprehensive_properties.py::TestAlgorithmProperties::test_algorithm_contamination_property",
  "property/test_comprehensive_properties.py::TestAlgorithmProperties::test_algorithm_determinism",
  "property/test_comprehensive_properties.py::TestAlgorithmProperties::test_algorithm_scale_invariance",
  "property/test_comprehensive_properties.py::TestAlgorithmProperties::test_algorithm_subset_consistency",
  "property/test_comprehensive_properties.py::TestDataTransformationProperties::test_dimensionality_reduction_properties",
  "property/test_comprehensive_properties.py::TestDataTransformationProperties::test_normalization_properties",
  "property/test_comprehensive_properties.py::TestDataTransformationProperties::test_outlier_removal_properties",
  "property/test_comprehensive_properties.py::TestDataTransformationProperties::test_scaling_invertibility",
  "property/test_comprehensive_properties.py::TestDomainProperties::test_anomaly_score_invariants",
  "property/test_comprehensive_properties.py::TestDomainProperties::test_confidence_interval_invariants",
  "property/test_comprehensive_properties.py::TestDomainProperties::test_contamination_rate_invariants",
  "property/test_comprehensive_properties.py::TestDomainProperties::test_dataset_invariants",
  "property/test_comprehensive_properties.py::TestDomainProperties::test_detection_result_invariants",
  "property/test_comprehensive_properties.py::TestRobustnessProperties::test_input_validation_robustness",
  "property/test_comprehensive_properties.py::TestRobustnessProperties::test_numerical_stability",
  "property/test_comprehensive_properties.py::TestRobustnessProperties::test_scalability_properties",
  "property/test_comprehensive_properties.py::TestServiceProperties::test_cross_validation_properties",
  "property/test_comprehensive_properties.py::TestServiceProperties::test_detection_service_properties",
  "property/test_comprehensive_properties.py::TestServiceProperties::test_ensemble_service_properties",
  "property/test_domain_properties.py::TestBusinessRuleProperties::test_detection_consistency",
  "property/test_domain_properties.py::TestDomainServiceProperties::test_anomaly_scorer_properties",
  "property/test_domain_properties.py::TestDomainServiceProperties::test_ensemble_aggregator_properties",
  "property/test_domain_properties.py::TestDomainServiceProperties::test_feature_validator_properties",
  "property/test_domain_properties.py::TestDomainServiceProperties::test_threshold_calculator_properties",
  "property/test_domain_properties.py::TestEntityProperties::test_anomaly_invariants",
  "property/test_domain_properties.py::TestEntityProperties::test_dataset_invariants",
  "property/test_domain_properties.py::TestEntityProperties::test_detection_result_invariants",
  "property/test_domain_properties.py::TestEntityProperties::test_detector_invariants",
  "property/test_domain_properties.py::TestValueObjectProperties::test_anomaly_score_invariants",
  "property/test_domain_properties.py::TestValueObjectProperties::test_confidence_interval_invariants",
  "property/test_domain_properties.py::TestValueObjectProperties::test_contamination_rate_invariants",
  "property/test_enhanced_algorithm_properties.py::TestDomainSpecificProperties::test_clustered_data_properties",
  "property/test_enhanced_algorithm_properties.py::TestDomainSpecificProperties::test_high_dimensional_properties",
  "property/test_enhanced_algorithm_properties.py::TestDomainSpecificProperties::test_time_series_properties",
  "property/test_enhanced_algorithm_properties.py::TestEnhancedAlgorithmProperties::test_ensemble_properties",
  "property/test_enhanced_algorithm_properties.py::TestEnhancedAlgorithmProperties::test_generalization_properties",
  "property/test_enhanced_algorithm_properties.py::TestEnhancedAlgorithmProperties::test_isolation_forest_properties",
  "property/test_enhanced_algorithm_properties.py::TestEnhancedAlgorithmProperties::test_local_outlier_factor_properties",
  "property/test_enhanced_algorithm_properties.py::TestEnhancedAlgorithmProperties::test_one_class_svm_properties",
  "property/test_enhanced_algorithm_properties.py::TestEnhancedAlgorithmProperties::test_reproducibility_properties",
  "property/test_enhanced_algorithm_properties.py::TestEnhancedAlgorithmProperties::test_robustness_properties",
  "property_based/test_algorithm_properties.py::TestAlgorithmUniversalProperties::test_algorithm_determinism",
  "property_based/test_algorithm_properties.py::TestAlgorithmUniversalProperties::test_algorithm_monotonicity_with_contamination",
  "property_based/test_algorithm_properties.py::TestAlgorithmUniversalProperties::test_algorithm_score_range",
  "property_based/test_algorithm_properties.py::TestDataQualityProperties::test_algorithm_with_constant_features",
  "property_based/test_algorithm_properties.py::TestDataQualityProperties::test_algorithm_with_correlated_features",
  "property_based/test_algorithm_properties.py::TestRobustnessProperties::test_algorithm_robustness_to_outliers",
  "property_based/test_algorithm_properties.py::TestScalingProperties::test_algorithm_scale_invariance",
  "property_based/test_domain_entities_properties.py::TestAnomalyProperties::test_anomaly_initialization",
  "property_based/test_domain_entities_properties.py::TestAnomalyScoreProperties::test_anomaly_score_above_one_raises_error",
  "property_based/test_domain_entities_properties.py::TestAnomalyScoreProperties::test_anomaly_score_confidence_interval_validation",
  "property_based/test_domain_entities_properties.py::TestAnomalyScoreProperties::test_anomaly_score_method_preserved",
  "property_based/test_domain_entities_properties.py::TestAnomalyScoreProperties::test_anomaly_score_negative_raises_error",
  "property_based/test_domain_entities_properties.py::TestAnomalyScoreProperties::test_anomaly_score_value_in_range",
  "property_based/test_domain_entities_properties.py::TestContaminationRateProperties::test_auto_contamination_rate_properties",
  "property_based/test_domain_entities_properties.py::TestContaminationRateProperties::test_contamination_rate_too_high_raises_error",
  "property_based/test_domain_entities_properties.py::TestContaminationRateProperties::test_contamination_rate_too_low_raises_error",
  "property_based/test_domain_entities_properties.py::TestContaminationRateProperties::test_contamination_rate_value_preserved",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_data_not_empty",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_feature_count_consistent",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_name_preserved",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_numeric_features_subset",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_sample_count_consistent",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_target_column_validation",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_with_empty_data_raises_error",
  "property_based/test_domain_entities_properties.py::TestDatasetProperties::test_dataset_with_invalid_target_raises_error",
  "property_based/test_domain_entities_properties.py::TestDetectionResultProperties::test_detection_result_consistency",
  "property_based/test_domain_entities_properties.py::TestDetectorProperties::test_detector_fitting_state_transition",
  "property_based/test_domain_entities_properties.py::TestDetectorProperties::test_detector_initialization_properties",
  "property_based/test_domain_entities_properties.py::TestDetectorProperties::test_detector_metadata_updates",
  "property_based/test_domain_entities_properties.py::TestDetectorProperties::test_detector_parameter_updates_preserve_existing",
  "property_based/test_domain_entities_properties.py::TestPropertyInvariants::test_dataset_operations_preserve_invariants",
  "property_based/test_domain_entities_properties.py::TestPropertyInvariants::test_detection_result_metrics_consistency",
  "property_based/test_domain_entities_properties.py::TestPropertyInvariants::test_detector_state_consistency",
  "quality_gates/test_automated_quality_gates.py::TestAutomatedQualityGates::test_comprehensive_quality_report_generation",
  "quality_gates/test_automated_quality_gates.py::TestAutomatedQualityGates::test_coverage_analysis",
  "quality_gates/test_automated_quality_gates.py::TestAutomatedQualityGates::test_execution_analysis",
  "quality_gates/test_automated_quality_gates.py::TestAutomatedQualityGates::test_quality_gate_failure_scenarios",
  "quality_gates/test_automated_quality_gates.py::TestAutomatedQualityGates::test_quality_gate_integration_with_ci_cd",
  "quality_gates/test_automated_quality_gates.py::TestAutomatedQualityGates::test_quality_gate_validation",
  "quality_gates/test_automated_quality_gates.py::TestAutomatedQualityGates::test_quality_monitoring_dashboard_data",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_automated_quality_reporting",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_comprehensive_quality_assessment",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_database_operations",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_flaky_test_detection",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_performance_monitoring",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_quality_gate_validation",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_quality_monitoring_basic_functionality",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_quality_monitoring_integration",
  "quality_gates/test_comprehensive_quality_monitoring.py::TestComprehensiveQualityMonitoring::test_quality_trend_analysis",
  "regression/test_api_regression_comprehensive.py::TestAPIDataIntegrityRegression::test_concurrent_data_operations_consistency",
  "regression/test_api_regression_comprehensive.py::TestAPIDataIntegrityRegression::test_data_round_trip_integrity",
  "regression/test_api_regression_comprehensive.py::TestAPIDataIntegrityRegression::test_special_character_handling",
  "regression/test_api_regression_comprehensive.py::TestAPIDeprecationRegression::test_api_version_header_support",
  "regression/test_api_regression_comprehensive.py::TestAPIDeprecationRegression::test_backward_compatible_response_fields",
  "regression/test_api_regression_comprehensive.py::TestAPIDeprecationRegression::test_deprecated_endpoint_warnings",
  "regression/test_api_regression_comprehensive.py::TestAPIPerformanceRegression::test_api_info_endpoint_response_time",
  "regression/test_api_regression_comprehensive.py::TestAPIPerformanceRegression::test_concurrent_request_performance",
  "regression/test_api_regression_comprehensive.py::TestAPIPerformanceRegression::test_health_endpoint_response_time",
  "regression/test_api_regression_comprehensive.py::TestAPIResponseFormatRegression::test_datetime_format_consistency",
  "regression/test_api_regression_comprehensive.py::TestAPIResponseFormatRegression::test_error_response_format_consistency",
  "regression/test_api_regression_comprehensive.py::TestAPIResponseFormatRegression::test_pagination_format_consistency",
  "regression/test_api_regression_comprehensive.py::TestAPISecurityRegression::test_cors_configuration_stability",
  "regression/test_api_regression_comprehensive.py::TestAPISecurityRegression::test_input_validation_consistency",
  "regression/test_api_regression_comprehensive.py::TestAPISecurityRegression::test_security_headers_presence",
  "regression/test_api_regression_comprehensive.py::TestAPIVersionCompatibility::test_api_health_endpoint_stability",
  "regression/test_api_regression_comprehensive.py::TestAPIVersionCompatibility::test_api_info_endpoint_stability",
  "regression/test_api_regression_comprehensive.py::TestAPIVersionCompatibility::test_dataset_crud_api_compatibility",
  "regression/test_api_regression_comprehensive.py::TestAPIVersionCompatibility::test_detector_api_compatibility",
  "regression/test_configuration_regression_comprehensive.py::TestAlgorithmConfigurationRegression::test_algorithm_parameter_compatibility",
  "regression/test_configuration_regression_comprehensive.py::TestAlgorithmConfigurationRegression::test_isolation_forest_configuration_options",
  "regression/test_configuration_regression_comprehensive.py::TestAlgorithmConfigurationRegression::test_local_outlier_factor_configuration_options",
  "regression/test_configuration_regression_comprehensive.py::TestAlgorithmConfigurationRegression::test_one_class_svm_configuration_options",
  "regression/test_configuration_regression_comprehensive.py::TestConfigurationBackwardCompatibilityRegression::test_configuration_version_detection",
  "regression/test_configuration_regression_comprehensive.py::TestConfigurationBackwardCompatibilityRegression::test_default_configuration_stability",
  "regression/test_configuration_regression_comprehensive.py::TestConfigurationBackwardCompatibilityRegression::test_legacy_parameter_format_support",
  "regression/test_configuration_regression_comprehensive.py::TestConfigurationFileHandlingRegression::test_configuration_validation_regression",
  "regression/test_configuration_regression_comprehensive.py::TestConfigurationFileHandlingRegression::test_environment_variable_configuration",
  "regression/test_configuration_regression_comprehensive.py::TestConfigurationFileHandlingRegression::test_json_configuration_handling",
  "regression/test_configuration_regression_comprehensive.py::TestConfigurationFileHandlingRegression::test_yaml_configuration_handling",
  "regression/test_configuration_regression_comprehensive.py::TestParameterValidationRegression::test_contamination_parameter_validation",
  "regression/test_configuration_regression_comprehensive.py::TestParameterValidationRegression::test_n_estimators_parameter_validation",
  "regression/test_configuration_regression_comprehensive.py::TestParameterValidationRegression::test_random_state_parameter_validation",
  "regression/test_data_integrity_regression_comprehensive.py::TestConcurrentDataIntegrityRegression::test_concurrent_model_operations_integrity",
  "regression/test_data_integrity_regression_comprehensive.py::TestConcurrentDataIntegrityRegression::test_concurrent_read_integrity",
  "regression/test_data_integrity_regression_comprehensive.py::TestDataConsistencyRegression::test_data_preservation_through_operations",
  "regression/test_data_integrity_regression_comprehensive.py::TestDataConsistencyRegression::test_data_type_preservation",
  "regression/test_data_integrity_regression_comprehensive.py::TestDataConsistencyRegression::test_extreme_value_handling_consistency",
  "regression/test_data_integrity_regression_comprehensive.py::TestDataConsistencyRegression::test_missing_value_handling_consistency",
  "regression/test_data_integrity_regression_comprehensive.py::TestEdgeCaseDataIntegrityRegression::test_empty_dataset_handling",
  "regression/test_data_integrity_regression_comprehensive.py::TestEdgeCaseDataIntegrityRegression::test_identical_samples_integrity",
  "regression/test_data_integrity_regression_comprehensive.py::TestEdgeCaseDataIntegrityRegression::test_single_sample_dataset_integrity",
  "regression/test_data_integrity_regression_comprehensive.py::TestEdgeCaseDataIntegrityRegression::test_unicode_data_integrity",
  "regression/test_data_integrity_regression_comprehensive.py::TestSerializationIntegrityRegression::test_csv_data_integrity",
  "regression/test_data_integrity_regression_comprehensive.py::TestSerializationIntegrityRegression::test_json_serialization_integrity",
  "regression/test_data_integrity_regression_comprehensive.py::TestSerializationIntegrityRegression::test_pickle_serialization_integrity",
  "regression/test_model_regression_comprehensive.py::TestModelCompatibilityRegression::test_memory_efficiency_regression",
  "regression/test_model_regression_comprehensive.py::TestModelCompatibilityRegression::test_numpy_version_compatibility",
  "regression/test_model_regression_comprehensive.py::TestModelCompatibilityRegression::test_pandas_version_compatibility",
  "regression/test_model_regression_comprehensive.py::TestModelOutputConsistency::test_isolation_forest_output_consistency",
  "regression/test_model_regression_comprehensive.py::TestModelOutputConsistency::test_model_performance_consistency",
  "regression/test_model_regression_comprehensive.py::TestModelOutputConsistency::test_model_serialization_consistency",
  "regression/test_model_regression_comprehensive.py::TestModelOutputStability::test_cross_platform_consistency",
  "regression/test_model_regression_comprehensive.py::TestModelOutputStability::test_deterministic_behavior",
  "regression/test_model_regression_comprehensive.py::TestModelOutputStability::test_numerical_stability",
  "regression/test_model_regression_comprehensive.py::TestModelParameterRobustness::test_contamination_parameter_robustness",
  "regression/test_model_regression_comprehensive.py::TestModelParameterRobustness::test_n_estimators_scaling",
  "regression/test_model_regression_comprehensive.py::TestModelParameterRobustness::test_random_state_consistency",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_all_exports_are_available",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_cli_extras_include_explainability_deps",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_explainable_ai_service_works_without_optional_deps",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_lime_import_graceful_fallback",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_shap_import_graceful_fallback",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_sklearn_adapter_default_behavior",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_sklearn_adapter_invalid_algorithm",
  "regression/test_optional_dependencies.py::TestOptionalDependencies::test_use_case_aliases_exist",
  "regression/test_performance_regression_comprehensive.py::TestC003PerformanceRegression::test_model_selection_performance_regression",
  "regression/test_performance_regression_comprehensive.py::TestConcurrencyPerformanceRegression::test_multiprocessing_performance",
  "regression/test_performance_regression_comprehensive.py::TestConcurrencyPerformanceRegression::test_thread_safety_performance",
  "regression/test_performance_regression_comprehensive.py::TestIOPerformanceRegression::test_data_loading_performance",
  "regression/test_performance_regression_comprehensive.py::TestIOPerformanceRegression::test_model_serialization_performance",
  "regression/test_performance_regression_comprehensive.py::TestInferencePerformanceRegression::test_batch_inference_performance",
  "regression/test_performance_regression_comprehensive.py::TestInferencePerformanceRegression::test_inference_scalability_regression",
  "regression/test_performance_regression_comprehensive.py::TestInferencePerformanceRegression::test_single_sample_inference_performance",
  "regression/test_performance_regression_comprehensive.py::TestMemoryPerformanceRegression::test_concurrent_memory_usage",
  "regression/test_performance_regression_comprehensive.py::TestMemoryPerformanceRegression::test_training_memory_usage",
  "regression/test_performance_regression_comprehensive.py::TestTrainingPerformanceRegression::test_isolation_forest_training_performance",
  "regression/test_performance_regression_comprehensive.py::TestTrainingPerformanceRegression::test_local_outlier_factor_training_performance",
  "regression/test_performance_regression_comprehensive.py::TestTrainingPerformanceRegression::test_training_scalability_regression",
  "regression/test_routing_core_regression.py::TestCoreRoutingRegression::test_app_instantiation",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_api_endpoints",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_basic_endpoints",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_cors_functionality",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_import_successful",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_instantiation_with_mocks",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_middleware_configuration",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_openapi_schema",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_route_structure",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_routing_regression_protection",
  "regression/test_routing_real_app.py::TestRealAppRoutingRegression::test_real_app_state_initialization",
  "regression/test_routing_standalone.py::test_app_state_and_metadata",
  "regression/test_routing_standalone.py::test_cors_configuration",
  "regression/test_routing_standalone.py::test_critical_routes_regression",
  "regression/test_routing_standalone.py::test_middleware_configuration",
  "regression/test_routing_standalone.py::test_openapi_schema_generation",
  "regression/test_routing_standalone.py::test_route_security_headers",
  "regression/test_routing_standalone.py::test_routing_pattern_consistency",
  "regression/test_routing_standalone.py::test_simple_fastapi_routing",
  "scripts/test_assert_no_duplicate_configs.py::TestAssertNoDuplicateConfigs::test_basic_functionality",
  "scripts/test_assert_no_duplicate_configs.py::TestAssertNoDuplicateConfigs::test_no_duplicates",
  "scripts/test_assert_no_duplicate_configs.py::TestAssertNoDuplicateConfigs::test_no_duplicates_simple",
  "scripts/test_assert_no_duplicate_configs.py::TestAssertNoDuplicateConfigs::test_script_exists",
  "scripts/test_assert_no_duplicate_configs.py::TestAssertNoDuplicateConfigs::test_with_duplicates",
  "sdk/test_sdk_advanced_features_comprehensive.py::TestSDKEnsembleMethods::test_ensemble_aggregation_methods",
  "sdk/test_sdk_advanced_features_comprehensive.py::TestSDKEnsembleMethods::test_ensemble_creation_and_training",
  "sdk/test_sdk_advanced_features_comprehensive.py::TestSDKModelPersistence::test_model_config_export",
  "sdk/test_sdk_advanced_features_comprehensive.py::TestSDKModelPersistence::test_model_save_and_load",
  "sdk/test_sdk_advanced_features_comprehensive.py::TestSDKPerformanceOptimization::test_batch_prediction_performance",
  "sdk/test_sdk_advanced_features_comprehensive.py::TestSDKPerformanceOptimization::test_model_training_profiling",
  "sdk/test_sdk_advanced_features_comprehensive.py::TestSDKPerformanceOptimization::test_prediction_profiling",
  "sdk/test_sdk_configuration_comprehensive.py::TestSDKConfigurationManagement::test_configuration_creation_and_management",
  "sdk/test_sdk_configuration_comprehensive.py::TestSDKConfigurationManagement::test_configuration_deletion_and_management",
  "sdk/test_sdk_configuration_comprehensive.py::TestSDKConfigurationManagement::test_configuration_file_operations",
  "sdk/test_sdk_configuration_comprehensive.py::TestSDKConfigurationManagement::test_configuration_updates_and_history",
  "sdk/test_sdk_configuration_comprehensive.py::TestSDKConfigurationManagement::test_configuration_validation",
  "sdk/test_sdk_configuration_comprehensive.py::TestSDKConfigurationManagement::test_configuration_value_access",
  "sdk/test_sdk_configuration_comprehensive.py::TestSDKConfigurationManagement::test_environment_variable_overrides",
  "sdk/test_sdk_core_comprehensive.py::TestSDKCoreInterface::test_sdk_concurrent_operations",
  "sdk/test_sdk_core_comprehensive.py::TestSDKCoreInterface::test_sdk_dataset_loading_from_dataframe",
  "sdk/test_sdk_core_comprehensive.py::TestSDKCoreInterface::test_sdk_dataset_loading_from_file",
  "sdk/test_sdk_core_comprehensive.py::TestSDKCoreInterface::test_sdk_dataset_loading_from_numpy",
  "sdk/test_sdk_core_comprehensive.py::TestSDKCoreInterface::test_sdk_end_to_end_workflow",
  "sdk/test_sdk_core_comprehensive.py::TestSDKCoreInterface::test_sdk_error_handling",
  "sdk/test_sdk_core_comprehensive.py::TestSDKCoreInterface::test_sdk_model_creation_and_management",
  "sdk/test_sdk_error_handling_comprehensive.py::TestSDKErrorHandling::test_circuit_breaker_pattern",
  "sdk/test_sdk_error_handling_comprehensive.py::TestSDKErrorHandling::test_concurrent_error_handling",
  "sdk/test_sdk_error_handling_comprehensive.py::TestSDKErrorHandling::test_error_logging_and_monitoring",
  "sdk/test_sdk_error_handling_comprehensive.py::TestSDKErrorHandling::test_graceful_degradation",
  "sdk/test_sdk_error_handling_comprehensive.py::TestSDKErrorHandling::test_invalid_data_handling_and_cleaning",
  "sdk/test_sdk_error_handling_comprehensive.py::TestSDKErrorHandling::test_model_creation_with_fallback",
  "sdk/test_sdk_error_handling_comprehensive.py::TestSDKErrorHandling::test_training_with_retry_mechanism",
  "sdk/test_sdk_streaming_comprehensive.py::TestSDKStreamingDetection::test_adaptive_threshold_adjustment",
  "sdk/test_sdk_streaming_comprehensive.py::TestSDKStreamingDetection::test_batch_streaming_detection",
  "sdk/test_sdk_streaming_comprehensive.py::TestSDKStreamingDetection::test_incremental_model_updates",
  "sdk/test_sdk_streaming_comprehensive.py::TestSDKStreamingDetection::test_single_sample_streaming_detection",
  "sdk/test_sdk_streaming_comprehensive.py::TestSDKStreamingDetection::test_streaming_detector_creation_and_training",
  "sdk/test_sdk_streaming_comprehensive.py::TestSDKStreamingDetection::test_streaming_performance_monitoring",
  "sdk/test_sdk_streaming_comprehensive.py::TestSDKStreamingDetection::test_streaming_pipeline_management",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_api_key_entropy_and_format",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_api_key_revocation_security",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_api_key_secure_storage",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_authentication_rate_limiting",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_brute_force_protection_simulation",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_constant_time_operations",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_encryption_key_derivation",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_jwt_algorithm_confusion_prevention",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_jwt_header_security",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_jwt_key_confusion_prevention",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_jwt_payload_sanitization",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_jwt_timing_attack_resistance",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_jwt_token_entropy_analysis",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_ldap_injection_prevention",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_password_hashing_security_parameters",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_password_strength_requirements",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_password_verification_timing_safety",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_permission_boundary_enforcement",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_refresh_token_security",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_role_escalation_prevention",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_secure_random_generation",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_session_token_invalidation",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_sql_injection_prevention_in_auth",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_superuser_bypass_validation",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_token_replay_protection",
  "security/test_comprehensive_security.py::TestJWTAuthServiceSecurity::test_xss_prevention_in_user_data",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_api_key_extraction_security",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_auth_context_creation_security",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_bearer_token_extraction_security",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_concurrent_session_security",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_permission_checker_authorization_bypass",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_permission_checker_privilege_escalation_prevention",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_rate_limiter_hash_collision_resistance",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_rate_limiter_ip_spoofing_protection",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_rate_limiter_security",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_request_metrics_privacy",
  "security/test_comprehensive_security.py::TestMiddlewareSecurity::test_session_fixation_prevention",
  "security/test_comprehensive_security.py::TestSecurityIntegration::test_complete_secure_authentication_flow",
  "security/test_comprehensive_security.py::TestSecurityIntegration::test_security_edge_cases",
  "security/test_comprehensive_security.py::TestSecurityIntegration::test_security_under_load",
  "security/test_middleware_security.py::TestAuthContextSecurity::test_context_data_sanitization",
  "security/test_middleware_security.py::TestAuthContextSecurity::test_context_information_disclosure_prevention",
  "security/test_middleware_security.py::TestAuthContextSecurity::test_context_role_permission_consistency",
  "security/test_middleware_security.py::TestAuthContextSecurity::test_context_superuser_flag_security",
  "security/test_middleware_security.py::TestAuthenticationMiddlewareSecurity::test_api_key_security_validation",
  "security/test_middleware_security.py::TestAuthenticationMiddlewareSecurity::test_authentication_bypass_attempts",
  "security/test_middleware_security.py::TestAuthenticationMiddlewareSecurity::test_bearer_token_security_validation",
  "security/test_middleware_security.py::TestAuthenticationMiddlewareSecurity::test_token_injection_prevention",
  "security/test_middleware_security.py::TestPermissionMiddlewareSecurity::test_permission_caching_security",
  "security/test_middleware_security.py::TestPermissionMiddlewareSecurity::test_permission_injection_prevention",
  "security/test_middleware_security.py::TestPermissionMiddlewareSecurity::test_privilege_escalation_prevention",
  "security/test_middleware_security.py::TestPermissionMiddlewareSecurity::test_role_hierarchy_enforcement",
  "security/test_middleware_security.py::TestPermissionMiddlewareSecurity::test_superuser_bypass_security",
  "security/test_middleware_security.py::TestRateLimiterSecurity::test_rate_limiter_cache_poisoning_protection",
  "security/test_middleware_security.py::TestRateLimiterSecurity::test_rate_limiter_concurrent_requests",
  "security/test_middleware_security.py::TestRateLimiterSecurity::test_rate_limiter_distributed_dos_protection",
  "security/test_middleware_security.py::TestRateLimiterSecurity::test_rate_limiter_dos_protection",
  "security/test_middleware_security.py::TestRateLimiterSecurity::test_rate_limiter_proxy_header_security",
  "security/test_middleware_security.py::TestRateLimiterSecurity::test_rate_limiter_time_window_security",
  "security/test_middleware_security.py::TestRequestMetricsSecurityAndPrivacy::test_error_information_leakage_prevention",
  "security/test_middleware_security.py::TestRequestMetricsSecurityAndPrivacy::test_pii_protection_in_metrics",
  "security/test_middleware_security.py::TestRequestMetricsSecurityAndPrivacy::test_request_timing_information_security",
  "security/test_middleware_security.py::TestRequestMetricsSecurityAndPrivacy::test_sensitive_data_exclusion",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_audit_event_creation",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_audit_event_search",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_audit_logging_disabled",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_authentication_request_rate_limiting",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_authorization_failure",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_compliance_report_generation",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_data_sanitization_disabled",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_data_sanitization_edge_cases",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_encryption_service_operations",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_failed_login_tracking",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_jwt_token_operations",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_password_strength_validation",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_rate_limiting_edge_cases",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_rbac_disabled",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_role_assignment_and_permission_check",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_security_summary_generation",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_security_violation_handling",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_string_masking_edge_cases",
  "security/test_security_service_branch_coverage.py::TestSecurityServiceBranchCoverage::test_successful_authentication_flow",
  "test_anomaly_classification_service.py::TestAnomalyClassificationService::test_classify_anomaly",
  "test_anomaly_classification_service.py::TestAnomalyClassificationService::test_clear_cache",
  "test_anomaly_classification_service.py::TestAnomalyClassificationService::test_dependency_injection",
  "test_anomaly_classification_service.py::TestAnomalyClassificationService::test_severity_classification_levels",
  "test_anomaly_classification_service.py::TestAnomalyClassificationService::test_type_classification_heuristics",
  "test_anomaly_classification_service.py::TestAnomalyClassificationService::test_use_batch_processing_classifiers",
  "test_anomaly_classification_service.py::TestAnomalyClassificationService::test_use_dashboard_classifiers",
  "test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_preprocess_for_autonomous_detection",
  "test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_preprocessing_error_handling",
  "test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_preprocessing_time_limit",
  "test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_should_preprocess_clean_data",
  "test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_should_preprocess_problematic_data",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_analyze_clean_data",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_analyze_problematic_data",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_constant_features_detection",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_duplicates_detection",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_infinite_values_detection",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_missing_values_detection",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_outlier_detection",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_pipeline_recommendation_generation",
  "test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_scaling_issues_detection",
  "test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_assess_and_preprocess_data_disabled",
  "test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_assess_and_preprocess_data_enabled",
  "test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_autonomous_config_preprocessing_options",
  "test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_data_profile_preprocessing_fields",
  "test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_profile_data_with_preprocessing_info",
  "test_autonomous_preprocessing.py::TestIntegrationWorkflows::test_cli_integration_options",
  "test_autonomous_preprocessing.py::TestIntegrationWorkflows::test_end_to_end_preprocessing_workflow",
  "test_autonomous_preprocessing.py::TestIntegrationWorkflows::test_preprocessing_strategy_selection",
  "test_basic_functionality.py::test_demo_functions",
  "test_basic_functionality.py::test_numpy_integration",
  "test_basic_functionality.py::test_pandas_integration",
  "test_buck2_integration.py::TestBuck2Integration::test_buck2_availability",
  "test_buck2_integration.py::TestBuck2Integration::test_buck2_build_dry_run",
  "test_buck2_integration.py::TestBuck2Integration::test_buck2_config_validation",
  "test_buck2_integration.py::TestBuck2Integration::test_buck_file_syntax",
  "test_buck2_integration.py::TestBuck2Integration::test_python_targets_exist",
  "test_buck2_integration.py::TestHatchIntegration::test_hatch_availability",
  "test_buck2_integration.py::TestHatchIntegration::test_hatch_build_hook_plugin",
  "test_buck2_integration.py::TestHatchIntegration::test_hatch_environments",
  "test_buck2_integration.py::TestHatchIntegration::test_pyproject_toml_configuration",
  "test_buck2_integration.py::TestIntegratedWorkflow::test_build_system_environment_detection",
  "test_buck2_integration.py::TestIntegratedWorkflow::test_configuration_consistency",
  "test_buck2_integration.py::TestIntegratedWorkflow::test_dependency_installation_workflow",
  "test_buck2_integration.py::TestIntegratedWorkflow::test_make_help",
  "test_buck2_integration.py::TestIntegratedWorkflow::test_makefile_targets",
  "test_buck2_integration.py::TestNpmIntegration::test_npm_availability",
  "test_buck2_integration.py::TestNpmIntegration::test_package_json_exists",
  "test_buck2_integration.py::TestNpmIntegration::test_web_asset_directories",
  "test_buck2_integration.py::TestPerformanceOptimizations::test_buck2_cache_configuration",
  "test_buck2_integration.py::TestPerformanceOptimizations::test_parallel_build_configuration",
  "test_buck2_integration.py::TestPerformanceOptimizations::test_web_asset_optimization",
  "test_cli_windows.py::test_autonomous_detection",
  "test_cli_windows.py::test_autonomous_detection_help",
  "test_cli_windows.py::test_cli_detect_help",
  "test_cli_windows.py::test_cli_help",
  "test_conftest_validation.py::TestFixtureIsolation::test_isolation_1",
  "test_conftest_validation.py::TestFixtureIsolation::test_isolation_2",
  "test_conftest_validation.py::test_app_fixture",
  "test_conftest_validation.py::test_async_fixture_pattern",
  "test_conftest_validation.py::test_asyncio_support",
  "test_conftest_validation.py::test_auth_fixtures",
  "test_conftest_validation.py::test_benchmark_config_fixture",
  "test_conftest_validation.py::test_client_fixture",
  "test_conftest_validation.py::test_container_fixture",
  "test_conftest_validation.py::test_isolated_test_environment_fixture",
  "test_conftest_validation.py::test_malicious_inputs_fixture",
  "test_conftest_validation.py::test_mock_fixtures",
  "test_conftest_validation.py::test_performance_data_fixture",
  "test_conftest_validation.py::test_reset_global_state_fixture",
  "test_conftest_validation.py::test_sample_data_fixture",
  "test_conftest_validation.py::test_sample_dataset_fixture",
  "test_conftest_validation.py::test_temp_dir_fixture",
  "test_conftest_validation.py::test_test_settings_fixture",
  "test_core_functionality.py::test_application_imports",
  "test_core_functionality.py::test_basic_functionality",
  "test_core_functionality.py::test_container_import",
  "test_core_functionality.py::test_domain_imports",
  "test_core_functionality.py::test_infrastructure_imports",
  "test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_dataset_repository_basic_operations",
  "test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_detector_repository_basic_operations",
  "test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_repository_wrappers_are_properly_configured",
  "test_database_integration_simple.py::TestDatabaseIntegrationSimple::test_async_result_repository_basic_operations",
  "test_demo.py::test_basic_import",
  "test_demo.py::test_coverage_demo",
  "test_demo.py::test_data_pipeline",
  "test_demo.py::test_integration_slow",
  "test_demo.py::test_numpy_pandas",
  "test_demo.py::test_performance_simulation",
  "test_demo_functions.py::test_add_numbers",
  "test_demo_functions.py::test_calculate_distance",
  "test_demo_functions.py::test_clean_data",
  "test_demo_functions.py::test_detect_anomaly_simple",
  "test_demo_functions.py::test_multiply_positive",
  "test_demo_functions.py::test_normalize_array",
  "test_demo_functions.py::test_score_prediction",
  "test_dependency_system.py::TestCommonServiceWrappers::test_auth_service_wrapper",
  "test_dependency_system.py::TestCommonServiceWrappers::test_detection_service_wrapper",
  "test_dependency_system.py::TestCommonServiceWrappers::test_model_service_wrapper",
  "test_dependency_system.py::TestDependencyContext::test_dependency_context_isolation",
  "test_dependency_system.py::TestDependencyRegistry::test_clear_dependencies",
  "test_dependency_system.py::TestDependencyRegistry::test_dependency_availability_check",
  "test_dependency_system.py::TestDependencyRegistry::test_register_and_get_dependency",
  "test_dependency_system.py::TestDependencyRegistry::test_register_provider_function",
  "test_dependency_system.py::TestDependencyValidation::test_validate_standard_dependencies",
  "test_dependency_system.py::TestDependencyWrapper::test_dependency_wrapper_call_returns_depends",
  "test_dependency_system.py::TestDependencyWrapper::test_dependency_wrapper_creation",
  "test_dependency_system.py::TestDependencyWrapper::test_optional_dependency_wrapper",
  "test_dependency_system.py::TestEdgeCases::test_get_nonexistent_dependency",
  "test_dependency_system.py::TestEdgeCases::test_optional_dependency_missing",
  "test_dependency_system.py::TestEdgeCases::test_provider_function_error",
  "test_dependency_system.py::TestMockDependencies::test_create_mock_dependencies",
  "test_dependency_system.py::TestMockDependencies::test_setup_test_dependencies",
  "test_dependency_system.py::test_dependency_context",
  "test_dependency_system.py::test_end_to_end_dependency_usage",
  "test_deployment_infrastructure.py::TestDeploymentCLI::test_cli_import",
  "test_deployment_infrastructure.py::TestDeploymentCLI::test_deployment_service_creation",
  "test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_creation",
  "test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_lifecycle",
  "test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_strategy_configurations",
  "test_deployment_infrastructure.py::TestDeploymentEntities::test_deployment_validation",
  "test_deployment_infrastructure.py::TestDeploymentEntities::test_health_metrics",
  "test_deployment_infrastructure.py::TestDeploymentEntities::test_rollback_criteria",
  "test_deployment_infrastructure.py::TestDeploymentIntegration::test_end_to_end_deployment_workflow",
  "test_deployment_infrastructure.py::TestDeploymentIntegration::test_persistence_and_recovery",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_deploy_model_success",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_deploy_model_with_existing_deployment",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_deployment_not_found_error",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_get_environment_status",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_health_metrics_update",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_list_deployments_with_filters",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_promote_to_production",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_rollback_deployment",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_rollback_without_previous_version",
  "test_deployment_infrastructure.py::TestDeploymentOrchestrationService::test_service_initialization",
  "test_deployment_infrastructure.py::TestModelServer::test_memory_usage_calculation",
  "test_deployment_infrastructure.py::TestModelServer::test_model_eviction_lru",
  "test_deployment_infrastructure.py::TestModelServer::test_model_loading_and_caching",
  "test_deployment_infrastructure.py::TestModelServer::test_model_server_initialization",
  "test_deployment_infrastructure.py::TestModelServer::test_prediction_functionality",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_checksum_verification_success",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_compare_versions",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_create_model_archive",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_delete_deployed_version_without_force_fails",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_delete_model_version",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_deserialize_model",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_deserialize_with_compression",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_export_model_bundle",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_get_latest_version",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_get_model_version",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_list_model_versions",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_list_model_versions_with_filter",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_model_joblib_format",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_model_pickle_format",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_unfitted_detector_raises_error",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_with_compression",
  "test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_unsupported_format_raises_error",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_comparison_operators",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_from_string_invalid_raises_error",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_from_string_valid",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_from_string_with_v_prefix",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_increment_major",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_increment_minor",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_increment_patch",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_is_compatible_with",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_is_newer_than",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_is_prerelease",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_is_stable",
  "test_enhanced_model_persistence.py::TestSemanticVersion::test_version_string_property",
  "test_final_validation.py::test_container_integration",
  "test_final_validation.py::test_enhanced_settings_core",
  "test_final_validation.py::test_environment_files",
  "test_imports.py::test_imports",
  "test_infrastructure_example.py::TestAsyncRoutes::test_async_database_operations",
  "test_infrastructure_example.py::TestAsyncRoutes::test_async_endpoint_example",
  "test_infrastructure_example.py::TestAuthenticationWorkflow::test_invalid_token",
  "test_infrastructure_example.py::TestAuthenticationWorkflow::test_login_workflow",
  "test_infrastructure_example.py::TestAuthenticationWorkflow::test_unauthorized_access",
  "test_infrastructure_example.py::TestDatabaseIsolation::test_async_database_isolation",
  "test_infrastructure_example.py::TestDatabaseIsolation::test_database_isolation_1",
  "test_infrastructure_example.py::TestDatabaseIsolation::test_database_isolation_2",
  "test_infrastructure_example.py::TestGlobalStateReset::test_global_state_reset_1",
  "test_infrastructure_example.py::TestGlobalStateReset::test_global_state_reset_2",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_admin_token_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_api_key_header_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_app_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_async_db_session_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_auth_header_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_auth_service_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_client_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_container_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_db_session_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_isolated_environment_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_sample_data_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_sample_dataset_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_temp_dir_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_user_auth_header_fixture",
  "test_infrastructure_example.py::TestInfrastructureFixtures::test_user_token_fixture",
  "test_issue_33_conftest_bug.py::test_conftest_can_be_imported",
  "test_issue_33_conftest_bug.py::test_conftest_import_syntax_fixed",
  "test_issue_33_conftest_bug.py::test_pytest_can_load_conftest",
  "test_issue_33_final.py::TestIssue33FinalVerification::test_conftest_future_imports_at_beginning",
  "test_issue_33_final.py::TestIssue33FinalVerification::test_conftest_has_correct_syntax",
  "test_issue_33_final.py::TestIssue33FinalVerification::test_critical_bug_fixed",
  "test_issue_33_final.py::TestIssue33FinalVerification::test_domain_abstractions_exist",
  "test_issue_33_final.py::TestIssue33FinalVerification::test_settings_can_be_imported",
  "test_issue_33_focused.py::TestIssue33CriticalBugFix::test_conftest_compiles_without_errors",
  "test_issue_33_focused.py::TestIssue33CriticalBugFix::test_conftest_file_structure",
  "test_issue_33_focused.py::TestIssue33CriticalBugFix::test_conftest_syntax_validation",
  "test_issue_33_focused.py::TestIssue33CriticalBugFix::test_future_imports_placement",
  "test_issue_33_focused.py::TestIssue33CriticalBugFix::test_pytest_can_load_conftest_basic",
  "test_issue_33_integration.py::test_conftest_fixtures_work",
  "test_issue_33_integration.py::test_conftest_mock_fixtures_work",
  "test_issue_33_integration.py::test_conftest_temp_dir_fixture_works",
  "test_issue_33_integration.py::test_pytest_collect_works",
  "test_mocking_infrastructure.py::test_file_io_mocks",
  "test_mocking_infrastructure.py::test_mock_data_registry",
  "test_mocking_infrastructure.py::test_mock_detector_registry",
  "test_mocking_infrastructure.py::test_network_mocks",
  "test_mocking_infrastructure.py::test_sklearn_mocks",
  "test_preprocessing_cli.py::TestCommandValidation::test_invalid_action_pipeline",
  "test_preprocessing_cli.py::TestCommandValidation::test_missing_required_arguments",
  "test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_comprehensive",
  "test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_duplicates",
  "test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_invalid_strategy",
  "test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_missing_values_dry_run",
  "test_preprocessing_cli.py::TestDataCleaningCLI::test_clean_outliers",
  "test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_comprehensive",
  "test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_encoding",
  "test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_feature_selection",
  "test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_polynomial_features",
  "test_preprocessing_cli.py::TestDataTransformationCLI::test_transform_scaling",
  "test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_create_from_config",
  "test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_create_interactive",
  "test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_list_empty",
  "test_preprocessing_cli.py::TestPipelineManagementCLI::test_pipeline_save",
  "test_preprocessing_cli.py::TestPreprocessingIntegration::test_dataset_not_found",
  "test_preprocessing_cli.py::TestPreprocessingIntegration::test_save_as_new_dataset",
  "test_preprocessing_cli.py::TestPreprocessingWorkflow::test_complete_preprocessing_workflow",
  "test_rfc7807_error_handling.py::test_correlation_id_middleware",
  "test_rfc7807_error_handling.py::test_create_problem_details_response",
  "test_rfc7807_error_handling.py::test_dto_extra_forbid",
  "test_rfc7807_error_handling.py::test_general_exception_handling",
  "test_rfc7807_error_handling.py::test_http_exception_handling",
  "test_rfc7807_error_handling.py::test_problem_details_response_structure",
  "test_rfc7807_error_handling.py::test_strict_validation_forbids_extra_fields",
  "test_rfc7807_error_handling.py::test_validation_error_handling",
  "test_security_integration_simple.py::TestSecurityIntegrationSimple::test_auth_system_can_be_configured",
  "test_security_integration_simple.py::TestSecurityIntegrationSimple::test_encryption_services_available",
  "test_security_integration_simple.py::TestSecurityIntegrationSimple::test_health_endpoint_works_without_auth",
  "test_security_integration_simple.py::TestSecurityIntegrationSimple::test_input_sanitization_available",
  "test_security_integration_simple.py::TestSecurityIntegrationSimple::test_security_exceptions_are_importable",
  "test_security_integration_simple.py::TestSecurityIntegrationSimple::test_security_headers_configuration",
  "test_setup.py::test_setup",
  "test_streaming_components.py::TestMetricsPublisher::test_kafka_publish",
  "test_streaming_components.py::TestMetricsPublisher::test_kafka_publisher_init",
  "test_streaming_components.py::TestMetricsPublisher::test_redis_publish",
  "test_streaming_components.py::TestMetricsPublisher::test_redis_publisher_init",
  "test_streaming_components.py::TestMetricsPublisher::test_unsupported_queue_type",
  "test_streaming_components.py::TestWebSocketGateway::test_back_pressure_handling",
  "test_streaming_components.py::TestWebSocketGateway::test_connect_dashboard",
  "test_streaming_components.py::TestWebSocketGateway::test_connection_limits",
  "test_streaming_components.py::TestWebSocketGateway::test_gateway_init",
  "test_streaming_components.py::TestWebSocketGateway::test_gateway_start_stop",
  "test_streaming_components.py::TestWebSocketGateway::test_gateway_stats",
  "test_streaming_components.py::TestWebSocketGateway::test_heartbeat_functionality",
  "test_streaming_components.py::TestWebSocketGateway::test_update_dashboard_metrics",
  "test_streaming_components.py::test_metrics_publisher_integration",
  "test_streaming_components.py::test_websocket_gateway_integration",
  "test_streaming_standalone.py::test_backpressure_simulation",
  "test_streaming_standalone.py::test_integration",
  "test_streaming_standalone.py::test_metrics_publisher",
  "test_streaming_standalone.py::test_websocket_gateway",
  "test_workflow_container_integration.py::test_container_phase2_services",
  "test_workflow_container_integration.py::test_workflow_simplification_service_availability",
  "ui/test_accessibility.py::TestAccessibility::test_aria_attributes",
  "ui/test_accessibility.py::TestAccessibility::test_color_contrast",
  "ui/test_accessibility.py::TestAccessibility::test_error_message_accessibility",
  "ui/test_accessibility.py::TestAccessibility::test_focus_indicators",
  "ui/test_accessibility.py::TestAccessibility::test_form_accessibility",
  "ui/test_accessibility.py::TestAccessibility::test_keyboard_navigation",
  "ui/test_accessibility.py::TestAccessibility::test_language_attributes",
  "ui/test_accessibility.py::TestAccessibility::test_page_title_accessibility",
  "ui/test_accessibility.py::TestAccessibility::test_screen_reader_content",
  "ui/test_accessibility.py::TestAccessibility::test_semantic_html_structure",
  "ui/test_accessibility.py::TestAccessibility::test_table_accessibility",
  "ui/test_layout_validation.py::TestLayoutValidation::test_button_states",
  "ui/test_layout_validation.py::TestLayoutValidation::test_color_contrast_elements",
  "ui/test_layout_validation.py::TestLayoutValidation::test_dashboard_layout_elements",
  "ui/test_layout_validation.py::TestLayoutValidation::test_error_message_display",
  "ui/test_layout_validation.py::TestLayoutValidation::test_form_elements_validation",
  "ui/test_layout_validation.py::TestLayoutValidation::test_icon_consistency",
  "ui/test_layout_validation.py::TestLayoutValidation::test_layout_consistency_viewport_sizes",
  "ui/test_layout_validation.py::TestLayoutValidation::test_loading_states",
  "ui/test_layout_validation.py::TestLayoutValidation::test_navigation_consistency",
  "ui/test_layout_validation.py::TestLayoutValidation::test_responsive_navigation",
  "ui/test_layout_validation.py::TestLayoutValidation::test_table_structure",
  "ui/test_performance_monitoring.py::TestPerformanceMonitoring::test_chart_rendering_performance",
  "ui/test_performance_monitoring.py::TestPerformanceMonitoring::test_core_web_vitals",
  "ui/test_performance_monitoring.py::TestPerformanceMonitoring::test_htmx_performance",
  "ui/test_performance_monitoring.py::TestPerformanceMonitoring::test_interactive_performance",
  "ui/test_performance_monitoring.py::TestPerformanceMonitoring::test_memory_usage",
  "ui/test_performance_monitoring.py::TestPerformanceMonitoring::test_page_load_performance",
  "ui/test_performance_monitoring.py::TestPerformanceMonitoring::test_resource_loading_efficiency",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_dashboard_loads",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_datasets_page",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_detection_page",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_detectors_page",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_exports_page",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_health_endpoint",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_mobile_responsiveness",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_navigation_menu",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_page_elements",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_performance_basic",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_responsive_design_comprehensive",
  "ui/test_ui_standalone.py::TestPynomalaUIStandalone::test_visualizations_page",
  "ui/test_ux_flows.py::TestUXFlows::test_accessibility_navigation_flow",
  "ui/test_ux_flows.py::TestUXFlows::test_complete_detector_creation_flow",
  "ui/test_ux_flows.py::TestUXFlows::test_data_visualization_interaction_flow",
  "ui/test_ux_flows.py::TestUXFlows::test_error_recovery_flow",
  "ui/test_ux_flows.py::TestUXFlows::test_form_validation_flow",
  "ui/test_ux_flows.py::TestUXFlows::test_htmx_interaction_flow",
  "ui/test_ux_flows.py::TestUXFlows::test_navigation_flow_between_pages",
  "ui/test_ux_flows.py::TestUXFlows::test_performance_during_user_flow",
  "ui/test_ux_flows.py::TestUXFlows::test_responsive_menu_interaction",
  "ui/test_ux_flows.py::TestUXFlows::test_user_feedback_flow",
  "ui/test_web_app_automation.py::TestResponsiveDesign::test_mobile_layout",
  "ui/test_web_app_automation.py::TestResponsiveDesign::test_tablet_layout",
  "ui/test_web_app_automation.py::TestSmokeTests::test_app_loads",
  "ui/test_web_app_automation.py::TestSmokeTests::test_navigation_works",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_accessibility_basics",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_dashboard_loads",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_datasets_page_functionality",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_detection_workflow",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_detectors_page_functionality",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_error_handling",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_form_interactions",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_javascript_console_errors",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_navigation_menu",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_performance_metrics",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_progressive_web_app_features",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_responsive_design",
  "ui/test_web_app_automation.py::TestWebAppAutomation::test_visualizations_page",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_calculate_additional_metrics",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_calculate_bayesian_interval",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_calculate_bootstrap_interval",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_calculate_confidence_intervals_bootstrap",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_calculate_confidence_intervals_normal",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_calculate_ensemble_disagreement",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_calculate_prediction_interval",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_execute_empty_detection_results",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_execute_ensemble_uncertainty",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_execute_ensemble_uncertainty_empty_results",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_execute_uncertainty_request_bayesian",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_execute_uncertainty_request_bootstrap",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_execute_uncertainty_request_normal",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_uncertainty_response_get_summary",
  "unit/application/use_cases/test_quantify_uncertainty.py::TestQuantifyUncertaintyUseCase::test_uncertainty_response_to_dict",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultBasicValidation::test_invalid_mismatched_anomalies_labels",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultBasicValidation::test_invalid_mismatched_confidence_intervals",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultBasicValidation::test_invalid_mismatched_scores_labels",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultBasicValidation::test_invalid_non_binary_labels",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultBasicValidation::test_valid_detection_result_creation",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultIntegration::test_realistic_detection_scenario",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultMethods::test_add_metadata",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultMethods::test_filter_by_confidence",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultMethods::test_filter_by_score",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultMethods::test_get_scores_dataframe",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultMethods::test_get_scores_dataframe_with_confidence_intervals",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultMethods::test_get_top_anomalies",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultMethods::test_summary",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultProperties::test_anomaly_indices",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultProperties::test_basic_properties",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultProperties::test_confidence_interval_properties",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultProperties::test_score_statistics",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultStringRepresentation::test_repr",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultValidation::test_empty_result",
  "unit/domain/entities/test_detection_result_enhanced.py::TestDetectionResultValidation::test_labels_array_conversion",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_binary_classification_validation",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_confidence_rating_validation",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_create_binary_feedback",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_create_explanation_feedback",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_create_score_correction",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_explanation_validation",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_feature_importance_validation",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_feedback_consistency",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_feedback_validation_empty_fields",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_get_corrected_score",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_get_feedback_weight",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_is_correction_binary",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_is_correction_score",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_score_correction_validation",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_string_representation",
  "unit/domain/entities/test_human_feedback.py::TestHumanFeedback::test_to_dict",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_create_valid_baseline",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_get_baseline_value",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_get_confidence_interval",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_get_duration",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_invalid_baseline_times",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_invalid_sample_count",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_invalidate",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_is_recent",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_is_within_confidence_interval",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_missing_baseline_times",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceBaseline::test_missing_detector_id",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceDegradationEvent::test_add_action",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceDegradationEvent::test_create_valid_event",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceDegradationEvent::test_get_duration",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceDegradationEvent::test_is_resolved",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceDegradationEvent::test_missing_detector_id",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceDegradationEvent::test_missing_threshold",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceDegradationEvent::test_missing_trigger_metric",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_create_valid_metric",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_get_confusion_matrix_metrics",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_get_confusion_matrix_metrics_incomplete",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_invalid_accuracy_range",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_invalid_metric_value_type",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_is_recent",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_missing_detector_id",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMetric::test_missing_metric_type",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_add_remove_threshold",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_create_valid_configuration",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_get_thresholds_by_severity",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_invalid_confidence_level",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_invalid_min_samples",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_invalid_monitoring_interval",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_missing_detector_id",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceMonitoringConfiguration::test_should_trigger_retraining",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceThreshold::test_create_valid_threshold",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceThreshold::test_evaluate_equals",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceThreshold::test_evaluate_greater_than_equal",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceThreshold::test_evaluate_less_than",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceThreshold::test_invalid_comparison_operator",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceThreshold::test_invalid_range_for_percentage_metric",
  "unit/domain/entities/test_performance_degradation.py::TestPerformanceThreshold::test_invalid_threshold_value_type",
  "unit/domain/security/test_permission_matrix.py::TestPermissionMatrix::test_can_role_grant_permission_data_scientist",
  "unit/domain/security/test_permission_matrix.py::TestPermissionMatrix::test_can_role_grant_permission_super_admin",
  "unit/domain/security/test_permission_matrix.py::TestPermissionMatrix::test_get_role_permissions_non_empty",
  "unit/domain/services/test_model_selector.py::TestModelCandidate::test_model_candidate_creation",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_compare_models_returns_fixed_result",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_init_custom_parameters",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_init_default_parameters",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_rank_models_returns_as_is",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_empty_candidates",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_identical_scores",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_none_candidates",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_single_candidate",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_with_custom_secondary_metrics",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_with_missing_primary_metric",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_with_model_candidates",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_with_performance_metrics_no_attributes",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_with_performance_metrics_no_model_id",
  "unit/domain/services/test_model_selector.py::TestModelSelector::test_select_best_model_with_performance_metrics_objects",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_analyze_performance_trend",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_analyze_performance_trend_insufficient_data",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_calculate_baseline_statistics",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_calculate_baseline_statistics_insufficient_samples",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_calculate_confidence_interval",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_calculate_confidence_interval_single_value",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_create_monitoring_configuration",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_determine_degradation_severity",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_evaluate_performance_degradation_no_violations",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_evaluate_performance_degradation_validation_errors",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_evaluate_performance_degradation_with_violations",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_group_metrics_by_type",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_is_statistically_significant",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_is_threshold_violated",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_linear_regression",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_linear_regression_insufficient_data",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_linear_regression_no_relationship",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_percentile",
  "unit/domain/services/test_performance_degradation_service.py::TestPerformanceDegradationService::test_percentile_empty_list",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_bayesian_confidence_interval",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_bayesian_with_continuous_scores",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_bootstrap_confidence_interval_mean",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_bootstrap_confidence_interval_median",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_bootstrap_confidence_interval_std",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_bootstrap_empty_scores",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_bootstrap_invalid_statistic",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_credible_interval",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_ensemble_uncertainty",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_ensemble_uncertainty_empty_scores",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_entropy_calculation",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_highest_density_interval",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_list_input_conversion",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_normal_confidence_interval",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_normal_confidence_interval_empty_scores",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_prediction_interval_calculation",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_prediction_uncertainty_bayesian",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_prediction_uncertainty_bootstrap",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_prediction_uncertainty_empty_results",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_prediction_uncertainty_invalid_method",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_prediction_uncertainty_normal",
  "unit/domain/services/test_uncertainty_service.py::TestUncertaintyQuantificationService::test_random_seed_reproducibility",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_confidence_interval_calculations",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_confidence_interval_validation",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_confidence_levels_boundary",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_contains_method",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_create_valid_confidence_interval",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_default_values",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_edge_cases",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_equality_and_hashing",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_from_bounds_classmethod",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_from_center_and_margin_classmethod",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_from_samples_classmethod",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_from_samples_empty_error",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_intersection_method",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_numeric_precision",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_overlaps_method",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_string_representation",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_to_dict_method",
  "unit/domain/test_confidence_interval.py::TestConfidenceInterval::test_to_tuple_method",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_confidence_interval_calculations",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_confidence_interval_validation",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_contains_method",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_create_valid_confidence_interval",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_from_bounds_classmethod",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_from_center_and_margin_classmethod",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_from_samples_classmethod",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_from_samples_empty_error",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_intersection_method",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_overlaps_method",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_string_representation",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_to_dict_method",
  "unit/domain/test_confidence_interval_fixed.py::TestConfidenceInterval::test_to_tuple_method",
  "unit/domain/test_confidence_interval_fixed.py::test_confidence_interval_random",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_boundary_values",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_invalid_infinite_value",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_invalid_nan_value",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_invalid_negative_value",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_invalid_non_numeric_value",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_invalid_value_greater_than_one",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_valid_score_creation",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_valid_score_with_confidence_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBasicValidation::test_valid_score_with_method",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBusinessRules::test_high_precision_documentation_rule",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBusinessRules::test_high_precision_with_method",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBusinessRules::test_noise_threshold_rule",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBusinessRules::test_perfect_score_validation_rule",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreBusinessRules::test_perfect_score_with_confidence_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreComparison::test_comparison_with_anomaly_score",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreComparison::test_comparison_with_invalid_type",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreComparison::test_comparison_with_numeric",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreConfidenceIntervalValidation::test_confidence_interval_too_wide",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreConfidenceIntervalValidation::test_extreme_score_narrow_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreConfidenceIntervalValidation::test_reasonable_confidence_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreConfidenceIntervalValidation::test_score_outside_confidence_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_adjusted_score_custom_weight",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_adjusted_score_with_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_adjusted_score_without_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_confidence_score_with_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_confidence_score_without_interval",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_exceeds_threshold_with_validation",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_is_anomaly",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_is_high_confidence",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreEnhancedMethods::test_severity_level",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreIntegration::test_borderline_case_scenario",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreIntegration::test_low_confidence_anomaly_scenario",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreIntegration::test_realistic_anomaly_detection_scenario",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreMethodValidation::test_case_insensitive_methods",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreMethodValidation::test_custom_method_valid_format",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreMethodValidation::test_invalid_method_format",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreMethodValidation::test_known_methods",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreProperties::test_confidence_bounds_properties",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreProperties::test_confidence_width_property",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreProperties::test_is_confident_property",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreStringRepresentation::test_string_representation",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreStringRepresentation::test_string_representation_with_confidence",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreValidationMethods::test_is_valid_false_cases",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreValidationMethods::test_is_valid_true_cases",
  "unit/domain/value_objects/test_anomaly_score_enhanced.py::TestAnomalyScoreValidationMethods::test_is_valid_with_exception_handling",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBasicValidation::test_boundary_values",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBasicValidation::test_invalid_infinite_value",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBasicValidation::test_invalid_nan_value",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBasicValidation::test_invalid_negative_value",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBasicValidation::test_invalid_non_numeric_value",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBasicValidation::test_invalid_value_greater_than_half",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBasicValidation::test_valid_contamination_rate_creation",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBusinessRules::test_high_contamination_warning_rule",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateBusinessRules::test_low_contamination_warning_rule",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateMethods::test_as_percentage",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateMethods::test_as_ratio",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateMethods::test_confidence_interval",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateMethods::test_expected_anomalies",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateMethods::test_precision_constraint",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateMethods::test_severity_level",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::TestContaminationRateStandardization::test_is_standard",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::test_contamination_rate_is_valid_false_cases",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::test_contamination_rate_is_valid_true_cases[0.0-True]",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::test_contamination_rate_is_valid_true_cases[0.1-True]",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::test_contamination_rate_is_valid_true_cases[0.2-True]",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::test_contamination_rate_is_valid_true_cases[0.25-True]",
  "unit/domain/value_objects/test_contamination_rate_enhanced.py::test_realistic_scenario",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_calculate_pipeline_metrics",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_cancel_pipeline",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_create_pipeline_from_nonexistent_template",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_create_pipeline_from_template",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_default_templates_created",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_execute_pipeline_failure",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_execute_pipeline_success",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_execute_stage_failure",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_execute_stage_success",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_get_logs_nonexistent_pipeline",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_get_logs_nonexistent_stage",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_get_next_pipeline_priority",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_get_nonexistent_pipeline_status",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_get_pipeline_logs",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_get_pipeline_status",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_get_queue_position",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_initialization",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_list_pipelines",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_list_pipelines_with_filter",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_start_stop_executor",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_substitute_env_vars",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_trigger_already_running_pipeline",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_trigger_nonexistent_pipeline",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineService::test_trigger_pipeline",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineServiceIntegration::test_environment_variable_handling",
  "unit/infrastructure/cicd/test_pipeline_service.py::TestPipelineServiceIntegration::test_full_pipeline_workflow",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_add_test_error",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_check_python_dependencies_missing",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_check_python_dependencies_pyproject",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_check_python_dependencies_requirements",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_cleanup_integration_environment",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_discover_tests_custom_patterns",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_discover_tests_integration",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_discover_tests_unit",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_execute_already_running_test_suite",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_execute_integration_tests",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_execute_performance_tests",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_execute_security_tests",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_execute_test_suite_failure",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_execute_test_suite_success",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_execute_unit_tests",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_initialization",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_parse_benchmark_results",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_parse_coverage_results",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_parse_pytest_output_no_specific_results",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_parse_pytest_output_success",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_parse_pytest_output_with_failures",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_setup_integration_environment",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_test_configurations",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_e2e_test_environment",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_integration_test_environment",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_performance_test_environment",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_security_test_environment",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_test_environment_missing_dependencies",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_test_environment_missing_directory",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_test_environment_nonexistent_workspace",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_test_environment_valid",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunner::test_validate_unit_test_environment",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunnerIntegration::test_error_handling_workflow",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunnerIntegration::test_full_test_execution_workflow",
  "unit/infrastructure/cicd/test_test_runner.py::TestTestRunnerIntegration::test_multiple_test_types_workflow",
  "unit/shared/test_exceptions.py::TestAPIErrors::test_api_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestAPIErrors::test_invalid_request_error",
  "unit/shared/test_exceptions.py::TestAPIErrors::test_rate_limit_exceeded_error",
  "unit/shared/test_exceptions.py::TestAPIErrors::test_service_unavailable_error",
  "unit/shared/test_exceptions.py::TestDataErrors::test_data_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestDataErrors::test_data_format_error",
  "unit/shared/test_exceptions.py::TestDataErrors::test_data_validation_error",
  "unit/shared/test_exceptions.py::TestDataErrors::test_dataset_not_found_error",
  "unit/shared/test_exceptions.py::TestDataErrors::test_dataset_validation_error",
  "unit/shared/test_exceptions.py::TestDetectionErrors::test_detection_configuration_error",
  "unit/shared/test_exceptions.py::TestDetectionErrors::test_detection_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestDetectionErrors::test_detector_not_found_error",
  "unit/shared/test_exceptions.py::TestDomainErrors::test_business_rule_violation_error",
  "unit/shared/test_exceptions.py::TestDomainErrors::test_domain_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestDomainErrors::test_validation_error",
  "unit/shared/test_exceptions.py::TestErrorDetailsHandling::test_error_details_modification",
  "unit/shared/test_exceptions.py::TestErrorDetailsHandling::test_error_with_complex_details",
  "unit/shared/test_exceptions.py::TestErrorDetailsHandling::test_error_with_nested_exceptions",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_cache_error",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_cloud_storage_error",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_configuration_error",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_database_error",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_external_service_error",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_infrastructure_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_repository_error",
  "unit/shared/test_exceptions.py::TestInfrastructureErrors::test_storage_error",
  "unit/shared/test_exceptions.py::TestIntegrationErrors::test_export_error",
  "unit/shared/test_exceptions.py::TestIntegrationErrors::test_import_error",
  "unit/shared/test_exceptions.py::TestIntegrationErrors::test_integration_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestIntegrationErrors::test_notification_error",
  "unit/shared/test_exceptions.py::TestIntegrationErrors::test_webhook_error",
  "unit/shared/test_exceptions.py::TestModelErrors::test_model_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestModelErrors::test_model_not_found_error",
  "unit/shared/test_exceptions.py::TestModelErrors::test_model_prediction_error",
  "unit/shared/test_exceptions.py::TestModelErrors::test_model_training_error",
  "unit/shared/test_exceptions.py::TestModelErrors::test_model_validation_error",
  "unit/shared/test_exceptions.py::TestModelErrors::test_training_error",
  "unit/shared/test_exceptions.py::TestModelErrors::test_unsupported_algorithm_error",
  "unit/shared/test_exceptions.py::TestPerformanceErrors::test_memory_error",
  "unit/shared/test_exceptions.py::TestPerformanceErrors::test_performance_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestPerformanceErrors::test_resource_exhaustion_error",
  "unit/shared/test_exceptions.py::TestPerformanceErrors::test_timeout_error",
  "unit/shared/test_exceptions.py::TestPynomaryError::test_inherits_from_exception",
  "unit/shared/test_exceptions.py::TestPynomaryError::test_init_with_message_and_details",
  "unit/shared/test_exceptions.py::TestPynomaryError::test_init_with_message_and_none_details",
  "unit/shared/test_exceptions.py::TestPynomaryError::test_init_with_message_only",
  "unit/shared/test_exceptions.py::TestReportingErrors::test_dashboard_not_found_error",
  "unit/shared/test_exceptions.py::TestReportingErrors::test_metric_not_found_error",
  "unit/shared/test_exceptions.py::TestReportingErrors::test_report_generation_error",
  "unit/shared/test_exceptions.py::TestReportingErrors::test_report_not_found_error",
  "unit/shared/test_exceptions.py::TestReportingErrors::test_reporting_error_inherits_from_pynomary_error",
  "unit/shared/test_exceptions.py::TestTenantErrors::test_resource_limit_error",
  "unit/shared/test_exceptions.py::TestTenantErrors::test_tenant_already_exists_error",
  "unit/shared/test_exceptions.py::TestTenantErrors::test_tenant_error_inherits_from_domain_error",
  "unit/shared/test_exceptions.py::TestTenantErrors::test_tenant_not_found_error",
  "unit/shared/test_exceptions.py::TestUserErrors::test_authentication_error",
  "unit/shared/test_exceptions.py::TestUserErrors::test_authorization_error",
  "unit/shared/test_exceptions.py::TestUserErrors::test_user_already_exists_error",
  "unit/shared/test_exceptions.py::TestUserErrors::test_user_error_inherits_from_domain_error",
  "unit/shared/test_exceptions.py::TestUserErrors::test_user_not_found_error",
  "unit/shared/test_types.py::TestEdgeCases::test_extreme_numeric_values",
  "unit/shared/test_types.py::TestEdgeCases::test_type_hint_compatibility",
  "unit/shared/test_types.py::TestEdgeCases::test_unicode_strings",
  "unit/shared/test_types.py::TestEdgeCases::test_uuid_generation_error_handling",
  "unit/shared/test_types.py::TestEdgeCases::test_very_long_strings",
  "unit/shared/test_types.py::TestGenerateId::test_generate_id_format",
  "unit/shared/test_types.py::TestGenerateId::test_generate_id_returns_string",
  "unit/shared/test_types.py::TestGenerateId::test_generate_id_returns_unique_values",
  "unit/shared/test_types.py::TestGenerateId::test_generate_id_returns_valid_uuid",
  "unit/shared/test_types.py::TestGenerateId::test_generate_id_uses_uuid4",
  "unit/shared/test_types.py::TestNewTypes::test_data_types",
  "unit/shared/test_types.py::TestNewTypes::test_domain_identifier_types",
  "unit/shared/test_types.py::TestNewTypes::test_infrastructure_types",
  "unit/shared/test_types.py::TestNewTypes::test_numeric_types",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_all_generators_return_unique_values",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generate_dataset_id",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generate_detector_id",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generate_model_id",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generate_role_id",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generate_session_id",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generate_tenant_id",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generate_user_id",
  "unit/shared/test_types.py::TestSpecificIdGenerators::test_generators_use_generate_id",
  "unit/shared/test_types.py::TestTypeSafety::test_config_key_with_dots",
  "unit/shared/test_types.py::TestTypeSafety::test_feature_value_type_preservation",
  "unit/shared/test_types.py::TestTypeSafety::test_newtype_equality",
  "unit/shared/test_types.py::TestTypeSafety::test_newtype_with_empty_string",
  "unit/shared/test_types.py::TestTypeSafety::test_numeric_types_with_negative_values",
  "unit/shared/test_types.py::TestTypeSafety::test_numeric_types_with_zero",
  "unit/shared/test_types.py::TestTypeSafety::test_storage_path_with_special_characters",
  "unit/shared/test_utils.py::test_utils_module_docstring",
  "unit/shared/test_utils.py::test_utils_module_has_all_attribute",
  "unit/test_auth_simple.py::test_api_key_generation",
  "unit/test_auth_simple.py::test_auth_jwt_service",
  "unit/test_auth_simple.py::test_create_require_role_dependency",
  "unit/test_auth_simple.py::test_default_roles_and_permissions",
  "unit/test_auth_simple.py::test_require_role_function",
  "unit/test_auth_simple.py::test_user_models_import",
  "unit/test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_preprocess_for_autonomous_detection",
  "unit/test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_preprocessing_error_handling",
  "unit/test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_preprocessing_time_limit",
  "unit/test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_should_preprocess_clean_data",
  "unit/test_autonomous_preprocessing.py::TestAutonomousPreprocessingOrchestrator::test_should_preprocess_problematic_data",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_analyze_clean_data",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_analyze_problematic_data",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_constant_features_detection",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_duplicates_detection",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_infinite_values_detection",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_missing_values_detection",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_outlier_detection",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_pipeline_recommendation_generation",
  "unit/test_autonomous_preprocessing.py::TestAutonomousQualityAnalyzer::test_scaling_issues_detection",
  "unit/test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_assess_and_preprocess_data_disabled",
  "unit/test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_assess_and_preprocess_data_enabled",
  "unit/test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_autonomous_config_preprocessing_options",
  "unit/test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_data_profile_preprocessing_fields",
  "unit/test_autonomous_preprocessing.py::TestAutonomousServiceIntegration::test_profile_data_with_preprocessing_info",
  "unit/test_autonomous_preprocessing.py::TestIntegrationWorkflows::test_cli_integration_options",
  "unit/test_autonomous_preprocessing.py::TestIntegrationWorkflows::test_end_to_end_preprocessing_workflow",
  "unit/test_autonomous_preprocessing.py::TestIntegrationWorkflows::test_preprocessing_strategy_selection",
  "unit/test_comprehensive.py::TestEdgeCases::test_boundary_values",
  "unit/test_comprehensive.py::TestEdgeCases::test_edge_case_type_classification",
  "unit/test_comprehensive.py::TestEdgeCases::test_extreme_scores",
  "unit/test_comprehensive.py::TestEdgeCases::test_extreme_scores_validation",
  "unit/test_comprehensive.py::TestEdgeCases::test_missing_metadata",
  "unit/test_comprehensive.py::TestEdgeCases::test_missing_metadata_defaults",
  "unit/test_comprehensive.py::TestEdgeCases::test_nan_score",
  "unit/test_comprehensive.py::TestEdgeCases::test_nan_score_validation",
  "unit/test_comprehensive.py::TestEnumBackwardCompatibility::test_severity_levels_compatibility",
  "unit/test_comprehensive.py::TestServiceIntegrationFlow::test_batch_processing_integration",
  "unit/test_comprehensive.py::TestServiceIntegrationFlow::test_classification_service_integration",
  "unit/test_comprehensive.py::TestServiceIntegrationFlow::test_create_integration",
  "unit/test_comprehensive.py::test_property_based_classification",
  "unit/test_core_functionality.py::test_application_imports",
  "unit/test_core_functionality.py::test_basic_functionality",
  "unit/test_core_functionality.py::test_container_import",
  "unit/test_core_functionality.py::test_domain_imports",
  "unit/test_core_functionality.py::test_infrastructure_imports",
  "unit/test_demo_functions.py::test_add_numbers",
  "unit/test_demo_functions.py::test_calculate_distance",
  "unit/test_demo_functions.py::test_clean_data",
  "unit/test_demo_functions.py::test_detect_anomaly_simple",
  "unit/test_demo_functions.py::test_multiply_positive",
  "unit/test_demo_functions.py::test_normalize_array",
  "unit/test_demo_functions.py::test_score_prediction",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_checksum_verification_success",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_compare_versions",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_create_model_archive",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_delete_deployed_version_without_force_fails",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_delete_model_version",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_deserialize_model",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_deserialize_with_compression",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_export_model_bundle",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_get_latest_version",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_get_model_version",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_list_model_versions",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_list_model_versions_with_filter",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_model_joblib_format",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_model_pickle_format",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_unfitted_detector_raises_error",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_serialize_with_compression",
  "unit/test_enhanced_model_persistence.py::TestEnhancedModelPersistenceService::test_unsupported_format_raises_error",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_comparison_operators",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_from_string_invalid_raises_error",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_from_string_valid",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_from_string_with_v_prefix",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_increment_major",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_increment_minor",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_increment_patch",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_is_compatible_with",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_is_newer_than",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_is_prerelease",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_is_stable",
  "unit/test_enhanced_model_persistence.py::TestSemanticVersion::test_version_string_property",
  "unit/test_exceptions.py::test_inheritance",
  "unit/test_exceptions.py::test_instantiation",
  "unit/test_exceptions.py::test_pynomary_error",
  "unit/test_features.py::test_algorithm_support",
  "unit/test_features.py::test_architecture_layers",
  "unit/test_features.py::test_basic_imports",
  "unit/test_features.py::test_data_formats",
  "unit/test_features.py::test_monitoring_features",
  "unit/test_jwt_auth_simple.py::test_account_lockout",
  "unit/test_jwt_auth_simple.py::test_api_key_management",
  "unit/test_jwt_auth_simple.py::test_jwt_token_creation_and_validation",
  "unit/test_jwt_auth_simple.py::test_password_hashing",
  "unit/test_jwt_auth_simple.py::test_password_rotation",
  "unit/test_jwt_auth_simple.py::test_password_rotation_strategy",
  "unit/test_jwt_auth_simple.py::test_token_blacklisting",
  "unit/test_jwt_auth_simple.py::test_user_authentication",
  "unit/test_jwt_auth_simple.py::test_user_creation",
  "unit/test_logging_infrastructure.py::TestIntegration::test_container_integration",
  "unit/test_logging_infrastructure.py::TestIntegration::test_end_to_end_workflow",
  "unit/test_logging_infrastructure.py::TestLogAggregator::test_log_filtering",
  "unit/test_logging_infrastructure.py::TestLogAggregator::test_log_stream_creation",
  "unit/test_logging_infrastructure.py::TestLogAggregator::test_log_stream_subscription",
  "unit/test_logging_infrastructure.py::TestLogAnalyzer::test_custom_pattern_rules",
  "unit/test_logging_infrastructure.py::TestLogAnalyzer::test_pattern_detection",
  "unit/test_logging_infrastructure.py::TestLogAnalyzer::test_statistical_anomaly_detection",
  "unit/test_logging_infrastructure.py::TestMetricsCollector::test_basic_metrics",
  "unit/test_logging_infrastructure.py::TestMetricsCollector::test_metrics_persistence",
  "unit/test_logging_infrastructure.py::TestMetricsCollector::test_metrics_with_labels",
  "unit/test_logging_infrastructure.py::TestMetricsCollector::test_timer_context",
  "unit/test_logging_infrastructure.py::TestObservabilityService::test_health_monitoring",
  "unit/test_logging_infrastructure.py::TestObservabilityService::test_service_initialization",
  "unit/test_logging_infrastructure.py::TestObservabilityService::test_service_shutdown",
  "unit/test_logging_infrastructure.py::TestObservabilityService::test_unified_logging",
  "unit/test_logging_infrastructure.py::TestObservabilityService::test_unified_metrics",
  "unit/test_logging_infrastructure.py::TestStructuredLogger::test_basic_logging",
  "unit/test_logging_infrastructure.py::TestStructuredLogger::test_context_management",
  "unit/test_logging_infrastructure.py::TestStructuredLogger::test_global_logger_registry",
  "unit/test_logging_infrastructure.py::TestStructuredLogger::test_performance_logging",
  "unit/test_logging_infrastructure.py::TestTracingManager::test_basic_tracing",
  "unit/test_logging_infrastructure.py::TestTracingManager::test_span_context_manager",
  "unit/test_logging_infrastructure.py::TestTracingManager::test_trace_context_injection",
  "unit/test_module_services.py::TestModelSelector::test_rank_models",
  "unit/test_module_services.py::TestModelSelector::test_select_best_model",
  "unit/test_module_services.py::TestStatisticalTester::test_comprehensive_comparison",
  "unit/test_module_services.py::TestStatisticalTester::test_significance_ttest",
  "unit/test_new_entities.py::test_new_entities",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_apply_custom_openapi_to_app",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_clear_openapi_cache",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_create_operation_objects",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_custom_openapi_generator",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_custom_openapi_generator_caching",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_generate_model_schemas",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_generate_model_schemas_with_error",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_get_all_pydantic_models",
  "unit/test_openapi_utils.py::TestOpenAPIUtils::test_rebuild_model_references",
  "unit/test_openapi_utils.py::test_standalone_schema_generation",
  "unit/test_routes_simple.py::test_app_router_prefix",
  "unit/test_routes_simple.py::test_redirect_urls",
  "unit/test_security.py::TestAPISecurityHeaders::test_cors_configuration",
  "unit/test_security.py::TestAPISecurityHeaders::test_security_headers_present",
  "unit/test_security.py::TestAuditLogging::test_audit_context_manager",
  "unit/test_security.py::TestAuditLogging::test_audit_event_creation",
  "unit/test_security.py::TestAuditLogging::test_audit_logger_authentication_events",
  "unit/test_security.py::TestAuditLogging::test_audit_logger_risk_scoring",
  "unit/test_security.py::TestAuditLogging::test_audit_logger_security_alerts",
  "unit/test_security.py::TestInputValidation::test_email_validation",
  "unit/test_security.py::TestInputValidation::test_filename_sanitization",
  "unit/test_security.py::TestInputValidation::test_input_sanitization",
  "unit/test_security.py::TestInputValidation::test_input_validator_strict_mode",
  "unit/test_security.py::TestInputValidation::test_malicious_input_rejection",
  "unit/test_security.py::TestInputValidation::test_threat_detection_path_traversal",
  "unit/test_security.py::TestInputValidation::test_threat_detection_sql_injection",
  "unit/test_security.py::TestInputValidation::test_threat_detection_xss",
  "unit/test_security.py::TestInputValidation::test_username_validation",
  "unit/test_security.py::TestJWTAuthentication::test_account_lockout_on_failed_attempts",
  "unit/test_security.py::TestJWTAuthentication::test_invalid_token_rejection",
  "unit/test_security.py::TestJWTAuthentication::test_password_hashing_security",
  "unit/test_security.py::TestJWTAuthentication::test_password_history_prevention",
  "unit/test_security.py::TestJWTAuthentication::test_token_blacklisting",
  "unit/test_security.py::TestJWTAuthentication::test_token_expiration",
  "unit/test_security.py::TestRateLimiting::test_rate_limiter_allows_within_limits",
  "unit/test_security.py::TestRateLimiting::test_rate_limiter_blocks_over_limits",
  "unit/test_security.py::TestRateLimiting::test_rate_limiter_refills_tokens",
  "unit/test_security.py::TestSecurityIntegration::test_audit_logging_integration",
  "unit/test_security.py::TestSecurityIntegration::test_authentication_flow_security",
  "unit/test_security.py::TestSecurityIntegration::test_input_validation_integration",
  "unit/test_security.py::TestSecurityIntegration::test_rate_limiting_integration",
  "unit/test_training_workflow.py::test_complete_workflow",
  "unit/test_url_changes.py::test_app_imports",
  "unit/test_url_changes.py::test_js_updates",
  "unit/test_url_changes.py::test_router_prefix",
  "unit/test_url_changes.py::test_template_updates",
  "unit/test_url_refactoring_complete.py::test_app_routing_structure",
  "unit/test_url_refactoring_complete.py::test_configuration_files",
  "unit/test_url_refactoring_complete.py::test_critical_files",
  "unit/test_url_refactoring_complete.py::test_javascript_directory",
  "unit/test_url_refactoring_complete.py::test_template_directory",
  "unit/test_url_routing_simple.py::test_url_routing",
  "unit/test_version.py::test_all_exports",
  "unit/test_version.py::test_type_checking_constant",
  "unit/test_version.py::test_version_attributes",
  "unit/test_version.py::test_version_format",
  "unit/test_version.py::test_version_tuple_class",
  "unit/test_version.py::test_version_tuple_format",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_100_percent_validation_target",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_comprehensive_validation_workflow",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_detailed_report_generation",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_failure_analysis_and_recommendations",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_individual_test_validation",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_performance_analysis",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_test_discovery_functionality",
  "validation/test_100_percent_validation.py::Test100PercentValidation::test_validation_monitoring_dashboard_data"
]