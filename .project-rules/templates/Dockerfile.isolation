# Isolation Dockerfile Template for Development
# This creates a clean, isolated environment for development work

ARG PYTHON_VERSION=3.11
FROM python:${PYTHON_VERSION}-slim as base

# Set environment variables for isolation
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    ISOLATION_MODE=true \
    PYNOMALY_ENV=isolated

# Create isolation user (non-root for security)
RUN groupadd --gid 1000 monorepo && \
    useradd --uid 1000 --gid 1000 --shell /bin/bash --create-home monorepo

# Install system dependencies for development
RUN apt-get update && apt-get install -y \
    git \
    build-essential \
    curl \
    wget \
    vim \
    nano \
    htop \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Create isolated workspace
WORKDIR /workspace
RUN chown monorepo:monorepo /workspace

# Switch to isolation user
USER monorepo

# Create Python virtual environment in isolation
RUN python -m venv /home/monorepo/.venv
ENV PATH="/home/monorepo/.venv/bin:$PATH"

# Copy requirements (if they exist)
COPY --chown=monorepo:monorepo requirements*.txt pyproject.toml* ./

# Install Python dependencies in isolation
RUN if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi && \
    if [ -f "requirements-dev.txt" ]; then pip install -r requirements-dev.txt; fi && \
    if [ -f "pyproject.toml" ]; then pip install -e .; fi

# Install additional development tools
RUN pip install \
    pytest \
    pytest-cov \
    black \
    flake8 \
    mypy \
    pre-commit \
    ipython \
    jupyter

# Create directories for isolated work
RUN mkdir -p /workspace/src \
             /workspace/tests \
             /workspace/docs \
             /workspace/scripts \
             /workspace/.isolation

# Copy isolation helper scripts
COPY --chown=monorepo:monorepo .project-rules/scripts/ /workspace/.isolation/scripts/
RUN chmod +x /workspace/.isolation/scripts/*.sh

# Set up Git configuration for isolation
RUN git config --global user.name "Isolation Environment" && \
    git config --global user.email "isolation@monorepo.local" && \
    git config --global init.defaultBranch main

# Create isolation startup script
RUN echo '#!/bin/bash\n\
echo "🔒 Monorepo Isolation Environment Activated"\n\
echo "📁 Workspace: $(pwd)"\n\
echo "🐍 Python: $(python --version)"\n\
echo "📦 Pip packages: $(pip list | wc -l) installed"\n\
echo "🌿 Git branch: $(git branch --show-current 2>/dev/null || echo \"No Git repository\")" \n\
echo "---"\n\
echo "💡 Use ./isolation/scripts/help.sh for available commands"\n\
echo "🔧 Use ./isolation/scripts/test.sh to run tests"\n\
echo "🚀 Use ./isolation/scripts/start-dev.sh to start development server"\n\
echo "---"\n\
if [ "$1" != "" ]; then\n\
  exec "$@"\n\
else\n\
  exec /bin/bash\n\
fi\n' > /workspace/.isolation/startup.sh && \
    chmod +x /workspace/.isolation/startup.sh

# Set working directory and default command
WORKDIR /workspace
ENTRYPOINT ["/workspace/.isolation/startup.sh"]
CMD ["/bin/bash"]

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.exit(0)" || exit 1

# Labels for isolation tracking
LABEL isolation.project="monorepo" \
      isolation.version="1.0" \
      isolation.type="development" \
      isolation.created="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
