{
  "openapi": "3.0.3",
  "info": {
    "title": "Pynomaly API",
    "description": "Comprehensive anomaly detection API with authentication, MFA, and admin capabilities",
    "version": "1.0.0",
    "contact": {
      "name": "Pynomaly Team",
      "url": "https://github.com/pynomaly/pynomaly",
      "email": "support@pynomaly.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://api.pynomaly.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "TOTPSetupResponse": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "qr_code_url": {
            "type": "string"
          },
          "manual_entry_key": {
            "type": "string"
          },
          "backup_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DetectionRequest": {
        "type": "object",
        "required": [
          "data",
          "algorithm"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "algorithm": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          }
        }
      },
      "DetectionResponse": {
        "type": "object",
        "properties": {
          "anomalies": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "threshold": {
            "type": "number"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "instance": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "summary": "Authenticate user and get JWT token",
        "description": "Authenticate user and get JWT token",
        "tags": [
          "authentication"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "access_token": "string",
                  "refresh_token": "string",
                  "token_type": "string",
                  "expires_in": "integer"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": "string",
                  "password": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "summary": "Logout user and invalidate token",
        "description": "Logout user and invalidate token",
        "tags": [
          "authentication"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "summary": "Refresh JWT token",
        "description": "Refresh JWT token",
        "tags": [
          "authentication"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "access_token": "string",
                  "expires_in": "integer"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/password-reset": {
      "post": {
        "summary": "Request password reset",
        "description": "Request password reset",
        "tags": [
          "authentication"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/password-reset/confirm": {
      "post": {
        "summary": "Confirm password reset",
        "description": "Confirm password reset",
        "tags": [
          "authentication"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": "string",
                  "new_password": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/totp/setup": {
      "post": {
        "summary": "Setup TOTP authentication",
        "description": "Setup TOTP authentication",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "TOTP setup successful",
            "content": {
              "application/json": {
                "schema": {
                  "secret": "string",
                  "qr_code_url": "string",
                  "manual_entry_key": "string",
                  "backup_codes": [
                    "string"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_name": "string",
                  "issuer": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/totp/verify": {
      "post": {
        "summary": "Verify TOTP code",
        "description": "Verify TOTP code",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "TOTP verification successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "totp_code": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/sms/setup": {
      "post": {
        "summary": "Setup SMS authentication",
        "description": "Setup SMS authentication",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "SMS code sent",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_number": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/sms/verify": {
      "post": {
        "summary": "Verify SMS code",
        "description": "Verify SMS code",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "SMS verification successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sms_code": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/email/setup": {
      "post": {
        "summary": "Setup email authentication",
        "description": "Setup email authentication",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Email code sent",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/email/verify": {
      "post": {
        "summary": "Verify email code",
        "description": "Verify email code",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Email verification successful",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email_code": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/status": {
      "get": {
        "summary": "Get MFA status",
        "description": "Get MFA status",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "MFA status retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "mfa_enabled": "boolean",
                  "active_methods": [
                    "object"
                  ],
                  "backup_codes_available": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/backup-codes": {
      "get": {
        "summary": "Get backup codes count",
        "description": "Get backup codes count",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Backup codes info",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/mfa/backup-codes/regenerate": {
      "post": {
        "summary": "Regenerate backup codes",
        "description": "Regenerate backup codes",
        "tags": [
          "mfa"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Backup codes regenerated",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "summary": "List all users",
        "description": "List all users",
        "tags": [
          "admin"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Users list retrieved",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}": {
      "get": {
        "summary": "Get user details",
        "description": "Get user details",
        "tags": [
          "admin"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "User details retrieved",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}/roles": {
      "put": {
        "summary": "Update user roles",
        "description": "Update user roles",
        "tags": [
          "admin"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "User roles updated",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roles": [
                    "string"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}/disable": {
      "post": {
        "summary": "Disable user account",
        "description": "Disable user account",
        "tags": [
          "admin"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "User account disabled",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/admin/users/{user_id}/enable": {
      "post": {
        "summary": "Enable user account",
        "description": "Enable user account",
        "tags": [
          "admin"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "User account enabled",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys/": {
      "get": {
        "summary": "List API keys",
        "description": "List API keys",
        "tags": [
          "api_keys"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "API keys list retrieved",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new API key",
        "description": "Create new API key",
        "tags": [
          "api_keys"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "201": {
            "description": "API key created",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": "string",
                  "scopes": [
                    "string"
                  ],
                  "expires_at": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys/{key_id}": {
      "delete": {
        "summary": "Delete API key",
        "description": "Delete API key",
        "tags": [
          "api_keys"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "204": {
            "description": "API key deleted",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/api-keys/{key_id}/regenerate": {
      "post": {
        "summary": "Regenerate API key",
        "description": "Regenerate API key",
        "tags": [
          "api_keys"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "API key regenerated",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/detection/detect": {
      "post": {
        "summary": "Perform anomaly detection",
        "description": "Perform anomaly detection",
        "tags": [
          "detection"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Detection completed",
            "content": {
              "application/json": {
                "schema": {
                  "anomalies": [
                    "object"
                  ],
                  "scores": [
                    "number"
                  ],
                  "threshold": "number"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": "array",
                  "algorithm": "string",
                  "parameters": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/detection/algorithms": {
      "get": {
        "summary": "List available algorithms",
        "description": "List available algorithms",
        "tags": [
          "detection"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Algorithms list retrieved",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/detection/batch": {
      "post": {
        "summary": "Batch anomaly detection",
        "description": "Batch anomaly detection",
        "tags": [
          "detection"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Batch detection completed",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "datasets": [
                    "object"
                  ],
                  "algorithm": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/": {
      "get": {
        "summary": "Health check",
        "description": "Health check",
        "tags": [
          "health"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Service healthy",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/health/detailed": {
      "get": {
        "summary": "Detailed health check",
        "description": "Detailed health check",
        "tags": [
          "health"
        ],
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "200": {
            "description": "Detailed health status",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  }
}