{
  "openapi": "3.0.3",
  "info": {
    "title": "Pynomaly API",
    "description": "State-of-the-art anomaly detection API with comprehensive machine learning capabilities",
    "version": "1.0.0",
    "contact": {
      "name": "Pynomaly Support",
      "email": "support@pynomaly.com",
      "url": "https://docs.pynomaly.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.pynomaly.com",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.pynomaly.com",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Basic health check to verify API availability",
        "operationId": "healthCheck",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health/detailed": {
      "get": {
        "summary": "Detailed health check",
        "description": "Comprehensive health check with system metrics",
        "operationId": "detailedHealthCheck",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "Detailed health information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/detectors": {
      "get": {
        "summary": "List detectors",
        "description": "Retrieve a list of all available anomaly detectors",
        "operationId": "listDetectors",
        "tags": [
          "Detectors"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Results offset",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "algorithm",
            "in": "query",
            "description": "Filter by algorithm type",
            "schema": {
              "type": "string",
              "enum": [
                "IsolationForest",
                "LocalOutlierFactor",
                "OneClassSVM",
                "EllipticEnvelope",
                "DBSCAN"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of detectors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetectorListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create detector",
        "description": "Create a new anomaly detector",
        "operationId": "createDetector",
        "tags": [
          "Detectors"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDetectorRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Detector created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetectorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/detectors/{detector_id}": {
      "get": {
        "summary": "Get detector details",
        "description": "Retrieve detailed information about a specific detector",
        "operationId": "getDetector",
        "tags": [
          "Detectors"
        ],
        "parameters": [
          {
            "name": "detector_id",
            "in": "path",
            "required": true,
            "description": "Detector ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detector details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetectorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Detector not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update detector",
        "description": "Update detector configuration",
        "operationId": "updateDetector",
        "tags": [
          "Detectors"
        ],
        "parameters": [
          {
            "name": "detector_id",
            "in": "path",
            "required": true,
            "description": "Detector ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDetectorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detector updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetectorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete detector",
        "description": "Delete a detector",
        "operationId": "deleteDetector",
        "tags": [
          "Detectors"
        ],
        "parameters": [
          {
            "name": "detector_id",
            "in": "path",
            "required": true,
            "description": "Detector ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detector deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/detectors/{detector_id}/detect": {
      "post": {
        "summary": "Run anomaly detection",
        "description": "Perform anomaly detection on new data",
        "operationId": "detectAnomalies",
        "tags": [
          "Detection"
        ],
        "parameters": [
          {
            "name": "detector_id",
            "in": "path",
            "required": true,
            "description": "Detector ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetectionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detection results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetectionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/automl/optimize": {
      "post": {
        "summary": "Start AutoML optimization",
        "description": "Begin automated machine learning optimization process",
        "operationId": "startAutoMLOptimization",
        "tags": [
          "AutoML"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMLRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AutoML optimization started",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMLResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for authentication"
      }
    },
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "healthy"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "DetailedHealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              },
              "components": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string"
                  },
                  "redis": {
                    "type": "string"
                  },
                  "workers": {
                    "type": "string"
                  }
                }
              },
              "metrics": {
                "type": "object",
                "properties": {
                  "cpu_usage": {
                    "type": "number"
                  },
                  "memory_usage": {
                    "type": "number"
                  },
                  "disk_usage": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "DetectorListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "detectors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Detector"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "Detector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "detector_abc123"
          },
          "name": {
            "type": "string",
            "example": "Production Detector"
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "IsolationForest",
              "LocalOutlierFactor",
              "OneClassSVM",
              "EllipticEnvelope",
              "DBSCAN"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "training",
              "inactive",
              "error"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "performance": {
            "type": "object",
            "properties": {
              "accuracy": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "precision": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "recall": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "f1_score": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              }
            }
          }
        }
      },
      "CreateDetectorRequest": {
        "type": "object",
        "required": [
          "name",
          "algorithm"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "My Detector"
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "IsolationForest",
              "LocalOutlierFactor",
              "OneClassSVM",
              "EllipticEnvelope",
              "DBSCAN"
            ]
          },
          "parameters": {
            "type": "object",
            "description": "Algorithm-specific parameters"
          },
          "description": {
            "type": "string",
            "example": "Production anomaly detector"
          }
        }
      },
      "UpdateDetectorRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "DetectorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/Detector"
          }
        }
      },
      "DetectionRequest": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "example": [
              [
                1.2,
                3.4,
                5.6
              ],
              [
                2.3,
                4.5,
                6.7
              ]
            ]
          },
          "feature_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "feature1",
              "feature2",
              "feature3"
            ]
          },
          "return_explanations": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "DetectionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "predictions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Prediction"
                }
              },
              "summary": {
                "$ref": "#/components/schemas/DetectionSummary"
              }
            }
          }
        }
      },
      "Prediction": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer"
          },
          "is_anomaly": {
            "type": "boolean"
          },
          "anomaly_score": {
            "type": "number"
          },
          "confidence": {
            "type": "number"
          }
        }
      },
      "DetectionSummary": {
        "type": "object",
        "properties": {
          "total_samples": {
            "type": "integer"
          },
          "anomalies_detected": {
            "type": "integer"
          },
          "anomaly_rate": {
            "type": "number"
          },
          "average_confidence": {
            "type": "number"
          }
        }
      },
      "AutoMLRequest": {
        "type": "object",
        "required": [
          "dataset_id"
        ],
        "properties": {
          "dataset_id": {
            "type": "string"
          },
          "algorithms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "objectives": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "constraints": {
            "type": "object",
            "properties": {
              "max_time": {
                "type": "integer"
              },
              "max_trials": {
                "type": "integer"
              },
              "max_memory": {
                "type": "integer"
              }
            }
          }
        }
      },
      "AutoMLResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "optimization_id": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "estimated_time": {
                "type": "integer"
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "has_next": {
            "type": "boolean"
          },
          "has_prev": {
            "type": "boolean"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check and system status endpoints"
    },
    {
      "name": "Detectors",
      "description": "Anomaly detector management"
    },
    {
      "name": "Detection",
      "description": "Anomaly detection operations"
    },
    {
      "name": "AutoML",
      "description": "Automated machine learning optimization"
    }
  ]
}