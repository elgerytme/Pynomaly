# Grafana datasource configuration for Pynomaly
apiVersion: 1

datasources:
  # Prometheus datasource
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    basicAuth: false
    withCredentials: false
    jsonData:
      timeInterval: '15s'
      queryTimeout: '60s'
      httpMethod: 'GET'
      manageAlerts: true
      alertmanagerUid: 'alertmanager'
      prometheusType: 'Prometheus'
      prometheusVersion: '2.40.0'
      cacheLevel: 'High'
      disableMetricsLookup: false
      customQueryParameters: ''
      exemplarTraceIdDestinations:
        - name: 'Jaeger'
          datasourceUid: 'jaeger'
          urlDisplayLabel: 'View Trace'
    secureJsonData: {}
    version: 1

  # Elasticsearch datasource for logs
  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    database: 'pynomaly-logs-*'
    basicAuth: false
    withCredentials: false
    isDefault: false
    jsonData:
      index: 'pynomaly-logs-*'
      timeField: 'timestamp'
      esVersion: '8.11.0'
      includeFrozen: false
      logMessageField: 'message'
      logLevelField: 'level'
      maxConcurrentShardRequests: 5
      pipelineAggregations:
        - text: 'Average'
          value: 'avg'
        - text: 'Max'
          value: 'max'
        - text: 'Min'
          value: 'min'
        - text: 'Sum'
          value: 'sum'
        - text: 'Count'
          value: 'count'
        - text: 'Extended Stats'
          value: 'extended_stats'
        - text: 'Percentiles'
          value: 'percentiles'
        - text: 'Unique Count'
          value: 'cardinality'
    secureJsonData: {}
    version: 1

  # Jaeger datasource for tracing
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    isDefault: false
    basicAuth: false
    withCredentials: false
    jsonData:
      nodeGraph:
        enabled: true
      tracesToLogsV2:
        datasourceUid: 'elasticsearch'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        tags:
          - key: 'service.name'
            value: 'service'
          - key: 'service.instance.id'
            value: 'instance'
        filterByTraceID: true
        filterBySpanID: true
        customQuery: true
        query: 'correlation_id:${__trace.traceId}'
      tracesToMetrics:
        datasourceUid: 'prometheus'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        tags:
          - key: 'service.name'
            value: 'service'
          - key: 'operation'
            value: 'operation'
        queries:
          - name: 'Request Rate'
            query: 'rate(pynomaly_http_requests_total{service="$service"}[5m])'
          - name: 'Error Rate'
            query: 'rate(pynomaly_http_requests_total{service="$service",status=~"5.."}[5m])'
          - name: 'Duration'
            query: 'histogram_quantile(0.95, rate(pynomaly_http_request_duration_seconds_bucket{service="$service"}[5m]))'
    secureJsonData: {}
    uid: 'jaeger'
    version: 1

  # AlertManager datasource
  - name: AlertManager
    type: alertmanager
    access: proxy
    url: http://alertmanager:9093
    isDefault: false
    basicAuth: false
    withCredentials: false
    jsonData:
      implementation: 'prometheus'
      handleGrafanaManagedAlerts: true
    secureJsonData: {}
    uid: 'alertmanager'
    version: 1