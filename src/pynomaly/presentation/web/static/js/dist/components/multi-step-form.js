(()=>{var l=class{constructor(e,t={}){this.container=typeof e=="string"?document.querySelector(e):e,this.options={showProgress:!0,showStepNumbers:!0,allowStepNavigation:!0,validateOnStepChange:!0,saveProgress:!0,progressKey:"multi-step-form-progress",submitUrl:null,submitMethod:"POST",fileUploadUrl:"/api/upload",maxFileSize:10*1024*1024,allowedFileTypes:[".csv",".json",".xlsx",".parquet"],...t},this.steps=[],this.currentStep=0,this.formData={},this.validationErrors={},this.uploadedFiles=new Map,this.isSubmitting=!1,this.validators=new Map,this.fieldComponents=new Map,this.conditionalFields=new Map,this.init()}init(){this.setupContainer(),this.registerDefaultValidators(),this.registerDefaultFieldTypes(),this.loadSavedProgress(),this.bindEvents()}setupContainer(){this.container.classList.add("multi-step-form"),this.container.innerHTML="",this.form=document.createElement("form"),this.form.className="form-container",this.form.setAttribute("novalidate",""),this.options.showProgress&&(this.progressContainer=document.createElement("div"),this.progressContainer.className="form-progress",this.container.appendChild(this.progressContainer)),this.stepsContainer=document.createElement("div"),this.stepsContainer.className="form-steps",this.form.appendChild(this.stepsContainer),this.navigationContainer=document.createElement("div"),this.navigationContainer.className="form-navigation",this.form.appendChild(this.navigationContainer),this.container.appendChild(this.form)}addStep(e){let t={id:e.id||`step_${this.steps.length}`,title:e.title||`Step ${this.steps.length+1}`,description:e.description||"",fields:e.fields||[],validation:e.validation||null,onEnter:e.onEnter||null,onExit:e.onExit||null,conditional:e.conditional||null,...e};return this.steps.push(t),this.renderProgress(),t}renderProgress(){if(!this.options.showProgress||!this.progressContainer)return;this.progressContainer.innerHTML="";let e=document.createElement("div");e.className="progress-bar";let t=document.createElement("div");if(t.className="progress-fill",t.style.width=`${(this.currentStep+1)/this.steps.length*100}%`,e.appendChild(t),this.progressContainer.appendChild(e),this.options.showStepNumbers){let s=document.createElement("div");s.className="steps-indicator",this.steps.forEach((n,a)=>{let r=document.createElement("div");r.className="step-indicator",r.setAttribute("data-step",a),a<this.currentStep?r.classList.add("completed"):a===this.currentStep&&r.classList.add("active"),this.options.allowStepNavigation&&a<=this.currentStep&&(r.classList.add("clickable"),r.addEventListener("click",()=>this.goToStep(a)));let i=document.createElement("span");i.className="step-number",i.textContent=a+1;let o=document.createElement("span");o.className="step-title",o.textContent=n.title,r.appendChild(i),r.appendChild(o),s.appendChild(r)}),this.progressContainer.appendChild(s)}}renderCurrentStep(){let e=this.steps[this.currentStep];if(!e)return;if(e.conditional&&!this.evaluateCondition(e.conditional)){this.nextStep();return}this.stepsContainer.innerHTML="";let t=document.createElement("div");t.className="form-step active",t.setAttribute("data-step-id",e.id);let s=document.createElement("div");s.className="step-header";let n=document.createElement("h2");if(n.className="step-title",n.textContent=e.title,s.appendChild(n),e.description){let r=document.createElement("p");r.className="step-description",r.textContent=e.description,s.appendChild(r)}t.appendChild(s);let a=document.createElement("div");a.className="step-content",e.fields.forEach(r=>{let i=this.renderField(r);a.appendChild(i)}),t.appendChild(a),this.stepsContainer.appendChild(t),this.renderNavigation(),e.onEnter&&e.onEnter(this.formData,this),this.renderProgress()}renderField(e){let t={type:"text",name:e.name||"",label:e.label||"",placeholder:e.placeholder||"",required:e.required||!1,validation:e.validation||[],options:e.options||[],defaultValue:e.defaultValue,conditional:e.conditional||null,...e};if(t.conditional&&!this.evaluateCondition(t.conditional)){let n=document.createElement("div");return n.style.display="none",n.setAttribute("data-field-name",t.name),n}return(this.fieldComponents.get(t.type)||this.fieldComponents.get("text"))(t,this)}renderNavigation(){this.navigationContainer.innerHTML="";let e=document.createElement("div");if(e.className="nav-buttons",this.currentStep>0){let n=document.createElement("button");n.type="button",n.className="btn btn-secondary prev-btn",n.textContent="Previous",n.addEventListener("click",()=>this.previousStep()),e.appendChild(n)}let t=document.createElement("button");t.type="button",t.className="btn btn-primary next-btn",this.currentStep===this.steps.length-1?(t.textContent=this.isSubmitting?"Submitting...":"Submit",t.disabled=this.isSubmitting,t.addEventListener("click",()=>this.submitForm())):(t.textContent="Next",t.addEventListener("click",()=>this.nextStep())),e.appendChild(t);let s=document.createElement("button");s.type="button",s.className="btn btn-ghost cancel-btn",s.textContent="Cancel",s.addEventListener("click",()=>this.cancel()),e.appendChild(s),this.navigationContainer.appendChild(e)}registerDefaultFieldTypes(){this.fieldComponents.set("text",(e,t)=>{let s=document.createElement("div");s.className="field-group",s.setAttribute("data-field-name",e.name);let n=document.createElement("label");n.className="field-label",n.textContent=e.label,e.required&&(n.innerHTML+=' <span class="required">*</span>');let a=document.createElement("input");if(a.type=e.subtype||"text",a.name=e.name,a.className="field-input",a.placeholder=e.placeholder,a.required=e.required,a.value=t.formData[e.name]||e.defaultValue||"",e.pattern&&(a.pattern=e.pattern),a.addEventListener("input",r=>{t.updateFieldValue(e.name,r.target.value)}),a.addEventListener("blur",()=>{t.validateField(e.name)}),s.appendChild(n),s.appendChild(a),e.help){let r=document.createElement("div");r.className="field-help",r.textContent=e.help,s.appendChild(r)}return s}),this.fieldComponents.set("select",(e,t)=>{let s=document.createElement("div");s.className="field-group",s.setAttribute("data-field-name",e.name);let n=document.createElement("label");n.className="field-label",n.textContent=e.label,e.required&&(n.innerHTML+=' <span class="required">*</span>');let a=document.createElement("select");if(a.name=e.name,a.className="field-select",a.required=e.required,e.placeholder){let r=document.createElement("option");r.value="",r.textContent=e.placeholder,r.disabled=!0,r.selected=!t.formData[e.name],a.appendChild(r)}return e.options.forEach(r=>{let i=document.createElement("option");typeof r=="string"?(i.value=r,i.textContent=r):(i.value=r.value,i.textContent=r.label),t.formData[e.name]===i.value&&(i.selected=!0),a.appendChild(i)}),a.addEventListener("change",r=>{t.updateFieldValue(e.name,r.target.value)}),s.appendChild(n),s.appendChild(a),s}),this.fieldComponents.set("textarea",(e,t)=>{let s=document.createElement("div");s.className="field-group",s.setAttribute("data-field-name",e.name);let n=document.createElement("label");n.className="field-label",n.textContent=e.label,e.required&&(n.innerHTML+=' <span class="required">*</span>');let a=document.createElement("textarea");return a.name=e.name,a.className="field-textarea",a.placeholder=e.placeholder,a.required=e.required,a.rows=e.rows||4,a.value=t.formData[e.name]||e.defaultValue||"",a.addEventListener("input",r=>{t.updateFieldValue(e.name,r.target.value)}),s.appendChild(n),s.appendChild(a),s}),this.fieldComponents.set("checkbox",(e,t)=>{let s=document.createElement("div");s.className="field-group field-checkbox",s.setAttribute("data-field-name",e.name);let n=document.createElement("input");n.type="checkbox",n.name=e.name,n.className="field-input-checkbox",n.required=e.required,n.checked=t.formData[e.name]||e.defaultValue||!1;let a=document.createElement("label");a.className="field-label-checkbox",a.appendChild(n);let r=document.createElement("span");return r.textContent=e.label,e.required&&(r.innerHTML+=' <span class="required">*</span>'),a.appendChild(r),n.addEventListener("change",i=>{t.updateFieldValue(e.name,i.target.checked)}),s.appendChild(a),s}),this.fieldComponents.set("file",(e,t)=>{let s=document.createElement("div");s.className="field-group field-file",s.setAttribute("data-field-name",e.name);let n=document.createElement("label");n.className="field-label",n.textContent=e.label,e.required&&(n.innerHTML+=' <span class="required">*</span>');let a=document.createElement("input");a.type="file",a.name=e.name,a.className="field-file-input",a.required=e.required,a.style.display="none",e.multiple&&(a.multiple=!0),e.accept?a.accept=e.accept:a.accept=t.options.allowedFileTypes.join(",");let r=document.createElement("button");r.type="button",r.className="btn btn-outline file-upload-btn",r.innerHTML=`
                <svg class="upload-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                    <polyline points="7,10 12,15 17,10"></polyline>
                    <line x1="12" y1="15" x2="12" y2="3"></line>
                </svg>
                Choose File${e.multiple?"s":""}
            `,r.addEventListener("click",()=>a.click());let i=document.createElement("div");if(i.className="file-preview-area",a.addEventListener("change",o=>{t.handleFileUpload(e.name,o.target.files)}),s.appendChild(n),s.appendChild(a),s.appendChild(r),s.appendChild(i),e.help){let o=document.createElement("div");o.className="field-help",o.textContent=e.help,s.appendChild(o)}return s}),this.fieldComponents.set("range",(e,t)=>{let s=document.createElement("div");s.className="field-group field-range",s.setAttribute("data-field-name",e.name);let n=document.createElement("label");n.className="field-label",n.textContent=e.label,e.required&&(n.innerHTML+=' <span class="required">*</span>');let a=document.createElement("div");a.className="range-container";let r=document.createElement("input");r.type="range",r.name=e.name,r.className="field-range-input",r.min=e.min||0,r.max=e.max||100,r.step=e.step||1,r.value=t.formData[e.name]||e.defaultValue||e.min||0;let i=document.createElement("span");return i.className="range-value",i.textContent=r.value,r.addEventListener("input",o=>{i.textContent=o.target.value,t.updateFieldValue(e.name,parseFloat(o.target.value))}),a.appendChild(r),a.appendChild(i),s.appendChild(n),s.appendChild(a),s})}registerDefaultValidators(){this.validators.set("required",(e,t)=>t.required&&(e==null||e==="")?`${t.label} is required`:null),this.validators.set("email",(e,t)=>e&&t.type==="email"&&!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)?"Please enter a valid email address":null),this.validators.set("minLength",(e,t)=>e&&t.minLength&&e.length<t.minLength?`${t.label} must be at least ${t.minLength} characters`:null),this.validators.set("maxLength",(e,t)=>e&&t.maxLength&&e.length>t.maxLength?`${t.label} must be no more than ${t.maxLength} characters`:null),this.validators.set("pattern",(e,t)=>e&&t.pattern&&!new RegExp(t.pattern).test(e)?t.patternMessage||`${t.label} format is invalid`:null),this.validators.set("fileSize",(e,t)=>{if(t.type==="file"&&e){let s=Array.isArray(e)?e:[e];for(let n of s)if(n.size>this.options.maxFileSize)return`File size must be less than ${this.formatFileSize(this.options.maxFileSize)}`}return null})}updateFieldValue(e,t){this.formData[e]=t,this.clearFieldError(e),this.saveProgress(),this.updateConditionalFields()}validateField(e){let s=this.steps[this.currentStep].fields.find(r=>r.name===e);if(!s)return!0;let n=this.formData[e],a=[];for(let[r,i]of this.validators){let o=i(n,s);o&&a.push(o)}if(s.validation)if(typeof s.validation=="function"){let r=s.validation(n,this.formData);r&&typeof r=="string"&&a.push(r)}else Array.isArray(s.validation)&&s.validation.forEach(r=>{if(typeof r=="function"){let i=r(n,this.formData);i&&typeof i=="string"&&a.push(i)}});return a.length>0?(this.setFieldError(e,a[0]),!1):(this.clearFieldError(e),!0)}validateStep(e=this.currentStep){let t=this.steps[e];if(!t)return!0;let s=!0;if(t.fields.forEach(n=>{this.validateField(n.name)||(s=!1)}),t.validation&&typeof t.validation=="function"){let n=t.validation(this.formData);n!==!0&&(s=!1,typeof n=="string"&&this.showStepError(n))}return s}setFieldError(e,t){this.validationErrors[e]=t;let s=this.container.querySelector(`[data-field-name="${e}"]`);if(s){s.classList.add("field-error");let n=s.querySelector(".field-error-message");n&&n.remove();let a=document.createElement("div");a.className="field-error-message",a.textContent=t,s.appendChild(a)}}clearFieldError(e){delete this.validationErrors[e];let t=this.container.querySelector(`[data-field-name="${e}"]`);if(t){t.classList.remove("field-error");let s=t.querySelector(".field-error-message");s&&s.remove()}}showStepError(e){let t=this.stepsContainer.querySelector(".step-error");t&&t.remove();let s=document.createElement("div");s.className="step-error alert alert-danger",s.textContent=e,this.stepsContainer.insertBefore(s,this.stepsContainer.firstChild)}updateConditionalFields(){this.renderCurrentStep()}evaluateCondition(e){if(typeof e=="function")return e(this.formData);if(typeof e=="object"){let{field:t,operator:s,value:n}=e,a=this.formData[t];switch(s){case"equals":return a===n;case"not_equals":return a!==n;case"greater_than":return a>n;case"less_than":return a<n;case"contains":return a&&a.includes(n);case"in":return Array.isArray(n)&&n.includes(a);default:return!0}}return!0}async handleFileUpload(e,t){let s=Array.from(t),n=[];for(let a of s){if(a.size>this.options.maxFileSize){this.setFieldError(e,`File "${a.name}" is too large. Maximum size is ${this.formatFileSize(this.options.maxFileSize)}`);continue}let r="."+a.name.split(".").pop().toLowerCase();if(!this.options.allowedFileTypes.includes(r)){this.setFieldError(e,`File type "${r}" is not allowed`);continue}try{let i=await this.uploadFile(a);n.push(i),this.showFilePreview(e,i)}catch(i){this.setFieldError(e,`Failed to upload "${a.name}": ${i.message}`)}}n.length>0&&this.updateFieldValue(e,n)}async uploadFile(e){let t=new FormData;t.append("file",e);let s=await fetch(this.options.fileUploadUrl,{method:"POST",body:t});if(!s.ok)throw new Error(`Upload failed: ${s.statusText}`);let n=await s.json();return{id:n.id||Date.now(),name:e.name,size:e.size,type:e.type,url:n.url,uploadedAt:new Date().toISOString()}}showFilePreview(e,t){let n=this.container.querySelector(`[data-field-name="${e}"]`).querySelector(".file-preview-area");if(!n)return;let a=document.createElement("div");a.className="file-preview",a.innerHTML=`
            <div class="file-info">
                <span class="file-name">${t.name}</span>
                <span class="file-size">${this.formatFileSize(t.size)}</span>
            </div>
            <button type="button" class="btn btn-ghost btn-sm remove-file" data-file-id="${t.id}">
                Remove
            </button>
        `,a.querySelector(".remove-file").addEventListener("click",()=>{this.removeFile(e,t.id),a.remove()}),n.appendChild(a)}removeFile(e,t){let n=(this.formData[e]||[]).filter(a=>a.id!==t);this.updateFieldValue(e,n)}formatFileSize(e){if(e===0)return"0 Bytes";let t=1024,s=["Bytes","KB","MB","GB"],n=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,n)).toFixed(2))+" "+s[n]}nextStep(){if(this.options.validateOnStepChange&&!this.validateStep())return!1;let e=this.steps[this.currentStep];return e&&e.onExit&&e.onExit(this.formData,this)===!1?!1:this.currentStep<this.steps.length-1?(this.currentStep++,this.renderCurrentStep(),this.saveProgress(),this.emitEvent("stepChanged",{currentStep:this.currentStep,totalSteps:this.steps.length,formData:this.formData}),!0):!1}previousStep(){return this.currentStep>0?(this.currentStep--,this.renderCurrentStep(),this.saveProgress(),this.emitEvent("stepChanged",{currentStep:this.currentStep,totalSteps:this.steps.length,formData:this.formData}),!0):!1}goToStep(e){return e>=0&&e<this.steps.length&&e<=this.currentStep?(this.currentStep=e,this.renderCurrentStep(),this.saveProgress(),this.emitEvent("stepChanged",{currentStep:this.currentStep,totalSteps:this.steps.length,formData:this.formData}),!0):!1}async submitForm(){for(let e=0;e<this.steps.length;e++)if(!this.validateStep(e))return this.goToStep(e),!1;this.isSubmitting=!0,this.renderNavigation();try{this.emitEvent("submitStart",{formData:this.formData});let e;if(this.options.submitUrl){let t=await fetch(this.options.submitUrl,{method:this.options.submitMethod,headers:{"Content-Type":"application/json"},body:JSON.stringify(this.formData)});if(!t.ok)throw new Error(`Submit failed: ${t.statusText}`);e=await t.json()}else e={success:!0,data:this.formData};return this.emitEvent("submitSuccess",{result:e,formData:this.formData}),this.clearSavedProgress(),e}catch(e){throw this.emitEvent("submitError",{error:e,formData:this.formData}),e}finally{this.isSubmitting=!1,this.renderNavigation()}}cancel(){this.emitEvent("cancel",{formData:this.formData}),this.clearSavedProgress()}reset(){this.currentStep=0,this.formData={},this.validationErrors={},this.uploadedFiles.clear(),this.clearSavedProgress(),this.renderCurrentStep(),this.emitEvent("reset",{})}saveProgress(){if(this.options.saveProgress)try{let e={currentStep:this.currentStep,formData:this.formData,timestamp:Date.now()};localStorage.setItem(this.options.progressKey,JSON.stringify(e))}catch(e){console.warn("Failed to save form progress:",e)}}loadSavedProgress(){if(this.options.saveProgress)try{let e=localStorage.getItem(this.options.progressKey);if(e){let t=JSON.parse(e);this.currentStep=t.currentStep||0,this.formData=t.formData||{}}}catch(e){console.warn("Failed to load saved progress:",e)}}clearSavedProgress(){if(this.options.saveProgress)try{localStorage.removeItem(this.options.progressKey)}catch(e){console.warn("Failed to clear saved progress:",e)}}bindEvents(){this.form.addEventListener("submit",e=>{e.preventDefault(),this.submitForm()}),this.container.addEventListener("keydown",e=>{e.key==="Enter"&&e.ctrlKey&&(e.preventDefault(),this.currentStep===this.steps.length-1?this.submitForm():this.nextStep())})}emitEvent(e,t){let s=new CustomEvent(`multiStepForm:${e}`,{detail:t,bubbles:!0,cancelable:!0});this.container.dispatchEvent(s)}getData(){return{...this.formData}}setData(e){this.formData={...this.formData,...e},this.renderCurrentStep()}getCurrentStep(){return this.currentStep}getTotalSteps(){return this.steps.length}isLastStep(){return this.currentStep===this.steps.length-1}isFirstStep(){return this.currentStep===0}getProgress(){return{current:this.currentStep+1,total:this.steps.length,percentage:(this.currentStep+1)/this.steps.length*100}}addCustomValidator(e,t){this.validators.set(e,t)}addCustomFieldType(e,t){this.fieldComponents.set(e,t)}start(){if(this.steps.length===0)throw new Error("No steps defined. Add steps before starting the form.");this.renderCurrentStep(),this.emitEvent("started",{totalSteps:this.steps.length})}destroy(){this.clearSavedProgress(),this.container.innerHTML="",this.steps=[],this.formData={},this.validationErrors={},this.uploadedFiles.clear()}},d=[{id:"dataset",title:"Dataset Configuration",description:"Upload and configure your dataset for anomaly detection",fields:[{type:"text",name:"dataset_name",label:"Dataset Name",placeholder:"Enter a name for your dataset",required:!0,help:"Choose a descriptive name that will help you identify this dataset later"},{type:"file",name:"dataset_file",label:"Dataset File",required:!0,accept:".csv,.json,.xlsx,.parquet",help:"Upload your dataset in CSV, JSON, Excel, or Parquet format"},{type:"checkbox",name:"has_header",label:"Dataset has header row",defaultValue:!0}]},{id:"algorithm",title:"Algorithm Selection",description:"Choose the anomaly detection algorithm and configure parameters",fields:[{type:"select",name:"algorithm",label:"Detection Algorithm",required:!0,options:[{value:"isolation_forest",label:"Isolation Forest"},{value:"one_class_svm",label:"One-Class SVM"},{value:"local_outlier_factor",label:"Local Outlier Factor"},{value:"elliptic_envelope",label:"Elliptic Envelope"}]},{type:"range",name:"contamination",label:"Contamination Rate",min:.01,max:.5,step:.01,defaultValue:.1,help:"Expected proportion of outliers in the dataset"},{type:"select",name:"features",label:"Feature Selection",options:[{value:"all",label:"Use all features"},{value:"select",label:"Select specific features"},{value:"auto",label:"Auto-select features"}],defaultValue:"all"}]},{id:"execution",title:"Execution Settings",description:"Configure how the anomaly detection will be executed",fields:[{type:"select",name:"execution_mode",label:"Execution Mode",required:!0,options:[{value:"immediate",label:"Run immediately"},{value:"scheduled",label:"Schedule for later"},{value:"batch",label:"Batch processing"}]},{type:"checkbox",name:"save_model",label:"Save trained model",defaultValue:!0,help:"Save the model for future use and comparison"},{type:"checkbox",name:"generate_report",label:"Generate detailed report",defaultValue:!0}]}],p=l;})();
