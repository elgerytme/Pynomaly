(()=>{var M=(c,e)=>()=>(e||c((e={exports:{}}).exports,e),e.exports);var y=M((I,_)=>{var d={GRID_SEARCH:"grid_search",RANDOM_SEARCH:"random_search",BAYESIAN:"bayesian",EVOLUTIONARY:"evolutionary",OPTUNA:"optuna",HYPEROPT:"hyperopt"},u={BEST_SINGLE:"best_single",ENSEMBLE:"ensemble",STACKING:"stacking",VOTING:"voting",WEIGHTED_AVERAGE:"weighted_average"},n={INITIALIZING:"initializing",DATA_PREPROCESSING:"data_preprocessing",FEATURE_ENGINEERING:"feature_engineering",MODEL_SEARCH:"model_search",HYPERPARAMETER_OPTIMIZATION:"hyperparameter_optimization",MODEL_VALIDATION:"model_validation",ENSEMBLE_CREATION:"ensemble_creation",FINAL_TRAINING:"final_training",COMPLETED:"completed",FAILED:"failed",CANCELLED:"cancelled"},p=class{constructor(){this.defaultConfig={preprocessing:{handle_missing:"auto",scaling:"auto",feature_selection:!0,max_features:1e3,categorical_encoding:"auto"},feature_engineering:{polynomial_features:!1,interaction_features:!0,statistical_features:!0,time_features:!0,max_polynomial_degree:2},model_search:{algorithms:["isolation_forest","local_outlier_factor","one_class_svm","elliptic_envelope","autoencoder","deep_svdd","copod","ecod","feature_bagging","histogram_based"],max_trials:50,early_stopping:!0,early_stopping_patience:10},hyperparameter_optimization:{algorithm:d.BAYESIAN,max_evaluations:100,timeout_minutes:60,n_jobs:-1,cv_folds:5,scoring_metric:"roc_auc",optimization_direction:"maximize"},validation:{test_size:.2,validation_size:.1,cross_validation:!0,cv_folds:5,stratify:!1,shuffle:!0,random_state:42},ensemble:{enable:!0,strategy:u.ENSEMBLE,max_models:5,ensemble_method:"voting",meta_learner:"logistic_regression"},performance:{max_training_time_minutes:120,memory_limit_gb:8,gpu_enabled:!1,distributed:!1,n_jobs:-1},monitoring:{log_level:"INFO",save_intermediate_results:!0,progress_reporting_interval:30,checkpoint_frequency:10}}}createConfig(e={}){return this.deepMerge(this.defaultConfig,e)}validateConfig(e){let t=[];e.model_search?.algorithms?.length||t.push("At least one algorithm must be specified"),e.hyperparameter_optimization?.max_evaluations<=0&&t.push("max_evaluations must be positive"),(e.validation?.test_size<=0||e.validation?.test_size>=1)&&t.push("test_size must be between 0 and 1");let i=["isolation_forest","local_outlier_factor","one_class_svm","elliptic_envelope","autoencoder","deep_svdd","copod","ecod","feature_bagging","histogram_based"],s=e.model_search.algorithms.filter(r=>!i.includes(r));return s.length>0&&t.push(`Invalid algorithms: ${s.join(", ")}`),{isValid:t.length===0,errors:t}}deepMerge(e,t){let i={...e};for(let s in t)t[s]&&typeof t[s]=="object"&&!Array.isArray(t[s])?i[s]=this.deepMerge(e[s]||{},t[s]):i[s]=t[s];return i}},m=class{constructor(e={}){this.configManager=new p,this.config=this.configManager.createConfig(e),this.pipelineId=this.generatePipelineId(),this.status=n.INITIALIZING,this.currentStep=0,this.totalSteps=7,this.startTime=null,this.endTime=null,this.results={preprocessing:null,feature_engineering:null,model_trials:[],best_models:[],ensemble_model:null,final_model:null,evaluation_metrics:null,training_history:[]},this.progress={overall:0,step_progress:0,current_trial:0,total_trials:0,estimated_time_remaining:null},this.eventListeners=new Map,this.isCancelled=!1,this.cancelToken=null}async run(e,t=null){try{this.startTime=Date.now(),this.status=n.INITIALIZING,this.emit("pipeline_started",{pipelineId:this.pipelineId,config:this.config});let i=this.configManager.validateConfig(this.config);if(!i.isValid)throw new Error(`Configuration validation failed: ${i.errors.join(", ")}`);await this.executeStep(n.DATA_PREPROCESSING,async()=>{this.results.preprocessing=await this.preprocessData(e,t)}),await this.executeStep(n.FEATURE_ENGINEERING,async()=>{this.results.feature_engineering=await this.engineerFeatures(this.results.preprocessing.processed_data)}),await this.executeStep(n.MODEL_SEARCH,async()=>{this.results.model_trials=await this.searchModels(this.results.feature_engineering.features,this.results.preprocessing.target)}),await this.executeStep(n.MODEL_VALIDATION,async()=>{this.results.best_models=await this.validateModels(this.results.model_trials)}),this.config.ensemble.enable&&await this.executeStep(n.ENSEMBLE_CREATION,async()=>{this.results.ensemble_model=await this.createEnsemble(this.results.best_models)}),await this.executeStep(n.FINAL_TRAINING,async()=>{this.results.final_model=await this.finalTraining()}),this.status=n.COMPLETED,this.endTime=Date.now(),this.progress.overall=100;let s=this.compileFinalResults();return this.emit("pipeline_completed",s),s}catch(i){throw this.status=n.FAILED,this.endTime=Date.now(),this.emit("pipeline_failed",{error:i.message,pipelineId:this.pipelineId}),i}}async executeStep(e,t){if(this.isCancelled)throw new Error("Pipeline was cancelled");this.status=e,this.currentStep++,this.progress.overall=Math.round(this.currentStep/this.totalSteps*100),this.emit("step_started",{step:e,progress:this.progress.overall,step_number:this.currentStep,total_steps:this.totalSteps});let i=Date.now();try{await t();let s=Date.now()-i;this.emit("step_completed",{step:e,duration:s,progress:this.progress.overall})}catch(s){throw this.emit("step_failed",{step:e,error:s.message}),s}}async preprocessData(e,t){this.emit("preprocessing_started",{dataset_shape:this.getDatasetShape(e)});let i={original_shape:this.getDatasetShape(e),processed_data:null,target:null,preprocessing_steps:[],feature_names:[],statistics:{}},s=["Analyzing data structure","Handling missing values","Feature scaling","Outlier detection","Feature selection"];for(let r=0;r<s.length;r++){if(this.isCancelled)return;this.progress.step_progress=Math.round((r+1)/s.length*100),this.emit("preprocessing_progress",{step:s[r],progress:this.progress.step_progress}),await this.sleep(1e3),i.preprocessing_steps.push({step:s[r],completed:!0,timestamp:Date.now()})}return i.processed_data=this.generateMockProcessedData(e),i.feature_names=this.generateFeatureNames(i.processed_data),i.statistics=this.calculateDataStatistics(i.processed_data),this.emit("preprocessing_completed",i),i}async engineerFeatures(e){this.emit("feature_engineering_started");let t={original_features:e.length,engineered_features:null,feature_importance:{},feature_transformations:[],new_feature_count:0},i=["Statistical feature generation","Polynomial features","Interaction features","Time-based features","Feature selection"];for(let s=0;s<i.length;s++){if(this.isCancelled)return;this.progress.step_progress=Math.round((s+1)/i.length*100),this.emit("feature_engineering_progress",{step:i[s],progress:this.progress.step_progress}),await this.sleep(800),t.feature_transformations.push({transformation:i[s],features_added:Math.floor(Math.random()*10)+1,timestamp:Date.now()})}return t.engineered_features=this.generateMockEngineeredFeatures(e),t.new_feature_count=t.engineered_features.length-t.original_features,t.feature_importance=this.generateMockFeatureImportance(t.engineered_features),this.emit("feature_engineering_completed",t),t}async searchModels(e,t){this.emit("model_search_started",{algorithms:this.config.model_search.algorithms,max_trials:this.config.hyperparameter_optimization.max_evaluations});let i=[],s=this.config.model_search.algorithms,r=Math.floor(this.config.hyperparameter_optimization.max_evaluations/s.length);this.progress.total_trials=s.length*r,this.progress.current_trial=0;for(let a of s){if(this.isCancelled)return i;this.emit("algorithm_started",{algorithm:a});let o=await this.optimizeHyperparameters(a,e,t,r);i.push(...o),this.emit("algorithm_completed",{algorithm:a,trials:o.length,best_score:Math.max(...o.map(l=>l.score))})}return i.sort((a,o)=>o.score-a.score),this.emit("model_search_completed",{total_trials:i.length,best_score:i[0]?.score,best_algorithm:i[0]?.algorithm}),i}async optimizeHyperparameters(e,t,i,s){let r=[],a=this.getHyperparameterSpace(e);for(let o=0;o<s;o++){if(this.isCancelled)return r;this.progress.current_trial++,this.progress.step_progress=Math.round(this.progress.current_trial/this.progress.total_trials*100);let l=this.sampleHyperparameters(a,this.config.hyperparameter_optimization.algorithm),h=await this.evaluateModel(e,l,t,i);r.push(h),this.emit("trial_completed",{trial_number:this.progress.current_trial,algorithm:e,score:h.score,hyperparameters:h.hyperparameters,progress:this.progress.step_progress}),await this.sleep(500)}return r}async evaluateModel(e,t,i,s){let r=[];for(let l=0;l<this.config.validation.cv_folds;l++){let h=this.getBaseScoreForAlgorithm(e),f=(Math.random()-.5)*.1;r.push(Math.max(0,Math.min(1,h+f)))}let a=r.reduce((l,h)=>l+h,0)/r.length,o=Math.sqrt(r.reduce((l,h)=>l+Math.pow(h-a,2),0)/r.length);return{trial_id:this.generateTrialId(),algorithm:e,hyperparameters:t,score:a,cv_scores:r,cv_std:o,training_time:Math.random()*60+10,evaluation_metrics:this.generateMockEvaluationMetrics(a),timestamp:Date.now()}}async validateModels(e){this.emit("model_validation_started",{total_models:e.length});let t=e.slice(0,Math.min(10,e.length)),i=[];for(let s=0;s<t.length;s++){if(this.isCancelled)return i;let r=t[s];this.progress.step_progress=Math.round((s+1)/t.length*100),this.emit("model_validation_progress",{model_index:s+1,total_models:t.length,algorithm:r.algorithm,progress:this.progress.step_progress});let a=await this.performDetailedValidation(r);i.push({...r,validation:a}),await this.sleep(600)}return i.sort((s,r)=>r.validation.score-s.validation.score),this.emit("model_validation_completed",{validated_models:i.length,best_validation_score:i[0]?.validation.score}),i}async performDetailedValidation(e){let t=e.score,i=(Math.random()-.5)*.05;return{score:Math.max(0,Math.min(1,t+i)),precision:Math.max(0,Math.min(1,t+(Math.random()-.5)*.1)),recall:Math.max(0,Math.min(1,t+(Math.random()-.5)*.1)),f1_score:Math.max(0,Math.min(1,t+(Math.random()-.5)*.08)),roc_auc:Math.max(0,Math.min(1,t+(Math.random()-.5)*.06)),confusion_matrix:this.generateMockConfusionMatrix(),feature_importance:this.generateMockFeatureImportance(),validation_time:Math.random()*30+5}}async createEnsemble(e){if(!this.config.ensemble.enable||e.length<2)return null;this.emit("ensemble_creation_started",{strategy:this.config.ensemble.strategy,num_models:Math.min(this.config.ensemble.max_models,e.length)});let t=e.slice(0,this.config.ensemble.max_models),i=["Model selection for ensemble","Weight optimization","Ensemble training","Ensemble validation"];for(let a=0;a<i.length;a++){if(this.isCancelled)return null;this.progress.step_progress=Math.round((a+1)/i.length*100),this.emit("ensemble_progress",{step:i[a],progress:this.progress.step_progress}),await this.sleep(800)}let s={ensemble_id:this.generateEnsembleId(),strategy:this.config.ensemble.strategy,models:t.map(a=>({algorithm:a.algorithm,weight:Math.random(),model_id:a.trial_id})),ensemble_score:Math.max(...t.map(a=>a.validation.score))+.02,creation_time:Date.now()},r=s.models.reduce((a,o)=>a+o.weight,0);return s.models.forEach(a=>{a.weight=a.weight/r}),this.emit("ensemble_creation_completed",s),s}async finalTraining(){this.emit("final_training_started");let e=this.results.ensemble_model||this.results.best_models[0],t=["Preparing full dataset","Training final model","Model serialization","Performance validation"];for(let s=0;s<t.length;s++){if(this.isCancelled)return null;this.progress.step_progress=Math.round((s+1)/t.length*100),this.emit("final_training_progress",{step:t[s],progress:this.progress.step_progress}),await this.sleep(1e3)}let i={model_id:this.generateModelId(),model_type:e.ensemble_id?"ensemble":"single",algorithm:e.algorithm||"ensemble",final_score:e.ensemble_score||e.validation.score,training_time:Date.now()-this.startTime,model_size_mb:Math.random()*50+10,deployment_ready:!0,timestamp:Date.now()};return this.emit("final_training_completed",i),i}compileFinalResults(){let e=this.endTime-this.startTime;return{pipeline_id:this.pipelineId,status:this.status,duration_ms:e,duration_human:this.formatDuration(e),data_insights:{original_features:this.results.preprocessing?.original_shape?.features||0,engineered_features:this.results.feature_engineering?.new_feature_count||0,preprocessing_steps:this.results.preprocessing?.preprocessing_steps?.length||0},model_performance:{total_trials:this.results.model_trials?.length||0,best_single_model_score:this.results.best_models?.[0]?.validation?.score||0,ensemble_score:this.results.ensemble_model?.ensemble_score||null,final_model_score:this.results.final_model?.final_score||0,algorithms_tested:[...new Set(this.results.model_trials?.map(t=>t.algorithm)||[])]},resource_utilization:{total_training_time:e,memory_usage_peak:Math.random()*4+2,cpu_utilization_avg:Math.random()*80+20,gpu_utilization:this.config.performance.gpu_enabled?Math.random()*90+10:0},final_model:this.results.final_model,recommendations:this.generateRecommendations(),detailed_results:this.results,configuration:this.config,timestamp:Date.now()}}generateRecommendations(){let e=[];return this.results.model_trials?.length>0&&(Math.max(...this.results.model_trials.map(i=>i.score))<.7&&e.push({type:"data_quality",message:"Consider improving data quality or collecting more diverse samples",priority:"high"}),this.results.feature_engineering?.new_feature_count<5&&e.push({type:"feature_engineering",message:"Additional feature engineering may improve model performance",priority:"medium"}),this.config.hyperparameter_optimization.max_evaluations<50&&e.push({type:"hyperparameter_tuning",message:"Increase hyperparameter optimization budget for better results",priority:"low"})),e}getHyperparameterSpace(e){return{isolation_forest:{n_estimators:[50,100,200,300],contamination:[.05,.1,.15,.2],max_features:[.5,.75,1]},local_outlier_factor:{n_neighbors:[5,10,20,35,50],contamination:[.05,.1,.15,.2],algorithm:["auto","ball_tree","kd_tree"]},one_class_svm:{kernel:["rbf","linear","poly"],gamma:["scale","auto",.001,.01,.1],nu:[.05,.1,.15,.2]}}[e]||{}}sampleHyperparameters(e,t){let i={};for(let[s,r]of Object.entries(e))Array.isArray(r)?i[s]=r[Math.floor(Math.random()*r.length)]:i[s]=r;return i}getBaseScoreForAlgorithm(e){return{isolation_forest:.75,local_outlier_factor:.72,one_class_svm:.7,elliptic_envelope:.68,autoencoder:.78,deep_svdd:.76,copod:.74,ecod:.73}[e]||.7}generateMockProcessedData(e){return Array.from({length:1e3},(t,i)=>({id:i,features:Array.from({length:10},()=>Math.random()),label:Math.random()>.9?1:0}))}generateFeatureNames(e){let t=["feature","sensor","metric","signal","value"];return Array.from({length:10},(i,s)=>`${t[s%t.length]}_${s+1}`)}calculateDataStatistics(e){return{total_samples:e.length,anomaly_rate:e.filter(t=>t.label===1).length/e.length,feature_count:10,missing_values:Math.floor(Math.random()*100),data_quality_score:Math.random()*.3+.7}}generateMockEngineeredFeatures(e){return Array.from({length:15},(t,i)=>`engineered_feature_${i+1}`)}generateMockFeatureImportance(e=[]){let t={};return e.forEach((i,s)=>{t[i]=Math.random()*(1-s*.05)}),t}generateMockEvaluationMetrics(e){return{accuracy:e,precision:Math.max(0,Math.min(1,e+(Math.random()-.5)*.1)),recall:Math.max(0,Math.min(1,e+(Math.random()-.5)*.1)),f1_score:Math.max(0,Math.min(1,e+(Math.random()-.5)*.08))}}generateMockConfusionMatrix(){let e=Math.floor(Math.random()*50)+10,t=Math.floor(Math.random()*20)+5,i=Math.floor(Math.random()*200)+100,s=Math.floor(Math.random()*15)+3;return{tp:e,fp:t,tn:i,fn:s}}getDatasetShape(e){return{samples:Array.isArray(e)?e.length:1e3,features:10}}generatePipelineId(){return`pipeline_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}generateTrialId(){return`trial_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}generateEnsembleId(){return`ensemble_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}generateModelId(){return`model_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}formatDuration(e){let t=Math.floor(e/1e3),i=Math.floor(t/60),s=Math.floor(i/60);return s>0?`${s}h ${i%60}m ${t%60}s`:i>0?`${i}m ${t%60}s`:`${t}s`}sleep(e){return new Promise(t=>setTimeout(t,e))}cancel(){this.isCancelled=!0,this.status=n.CANCELLED,this.endTime=Date.now(),this.emit("pipeline_cancelled",{pipelineId:this.pipelineId})}pause(){this.emit("pipeline_paused",{pipelineId:this.pipelineId})}resume(){this.emit("pipeline_resumed",{pipelineId:this.pipelineId})}on(e,t){return this.eventListeners.has(e)||this.eventListeners.set(e,new Set),this.eventListeners.get(e).add(t),()=>this.off(e,t)}off(e,t){this.eventListeners.has(e)&&this.eventListeners.get(e).delete(t)}emit(e,t){this.eventListeners.has(e)&&this.eventListeners.get(e).forEach(i=>{try{i({type:e,data:t,timestamp:Date.now()})}catch(s){console.error("AutoML event listener error:",s)}})}},g=class{constructor(){this.activePipelines=new Map,this.pipelineHistory=[],this.defaultConfig=new p().defaultConfig}async startPipeline(e,t={},i=null){let s=new m(t);this.activePipelines.set(s.pipelineId,s),s.on("pipeline_completed",r=>{this.pipelineHistory.push(r.data),this.activePipelines.delete(s.pipelineId)}),s.on("pipeline_failed",r=>{this.pipelineHistory.push(r.data),this.activePipelines.delete(s.pipelineId)}),s.on("pipeline_cancelled",r=>{this.activePipelines.delete(s.pipelineId)});try{let r=await s.run(e,i);return{pipelineId:s.pipelineId,results:r}}catch(r){throw this.activePipelines.delete(s.pipelineId),r}}cancelPipeline(e){let t=this.activePipelines.get(e);return t?(t.cancel(),!0):!1}getPipelineStatus(e){let t=this.activePipelines.get(e);return t?{pipelineId:e,status:t.status,progress:t.progress,startTime:t.startTime,currentStep:t.currentStep,totalSteps:t.totalSteps}:null}getActivePipelines(){return Array.from(this.activePipelines.keys()).map(e=>this.getPipelineStatus(e))}getPipelineHistory(e=10){return this.pipelineHistory.slice(-e)}getDefaultConfig(){return{...this.defaultConfig}}validateConfig(e){return new p().validateConfig(e)}};typeof _<"u"&&_.exports?_.exports={AutoMLService:g,AutoMLPipeline:m,AutoMLConfig:p,OPTIMIZATION_ALGORITHMS:d,MODEL_SELECTION_STRATEGIES:u,PIPELINE_STATUS:n}:(window.AutoMLService=g,window.AutoMLPipeline=m,window.AutoMLConfig=p,window.OPTIMIZATION_ALGORITHMS=d,window.MODEL_SELECTION_STRATEGIES=u,window.PIPELINE_STATUS=n)});y();})();
