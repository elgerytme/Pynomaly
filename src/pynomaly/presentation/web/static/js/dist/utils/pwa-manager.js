(()=>{var s=class{constructor(){this.deferredPrompt=null,this.isInstalled=!1,this.isOnline=navigator.onLine,this.syncQueue=[],this.offlineData={datasets:[],results:[],preferences:{}},this.init()}async init(){await this.setupServiceWorker(),this.setupInstallPrompt(),this.setupUpdateHandling(),this.setupOfflineHandling(),this.checkInstallStatus(),this.setupConnectionMonitoring(),await this.loadOfflineData()}async setupServiceWorker(){if("serviceWorker"in navigator)try{let t=await navigator.serviceWorker.register("/static/sw.js");console.log("[PWA] Service Worker registered:",t.scope),navigator.serviceWorker.addEventListener("message",e=>{this.handleServiceWorkerMessage(e.data)}),t.addEventListener("updatefound",()=>{this.handleServiceWorkerUpdate(t.installing)}),this.registration=t}catch(t){console.error("[PWA] Service Worker registration failed:",t)}}handleServiceWorkerMessage(t){let{type:e,payload:n}=t;switch(e){case"DETECTION_COMPLETE":this.onDetectionComplete(n);break;case"SYNC_QUEUE_STATUS":this.updateSyncStatus(n);break;case"CACHE_STATUS":this.updateCacheStatus(n);break;case"OFFLINE_DATA_UPDATED":this.loadOfflineData();break}}handleServiceWorkerUpdate(t){t.addEventListener("statechange",()=>{t.state==="installed"&&this.showUpdateNotification()})}setupInstallPrompt(){window.addEventListener("beforeinstallprompt",t=>{t.preventDefault(),this.deferredPrompt=t,this.showInstallButton()}),window.addEventListener("appinstalled",()=>{this.isInstalled=!0,this.hideInstallButton(),this.showInstallSuccessMessage(),this.deferredPrompt=null})}showInstallButton(){if(!document.querySelector(".pwa-install-button")){let t=this.createInstallButton();this.addInstallButtonToPage(t)}}createInstallButton(){let t=document.createElement("button");return t.className="pwa-install-button fixed bottom-4 right-4 bg-primary text-white px-4 py-2 rounded-lg shadow-lg hover:bg-blue-700 transition-colors z-50 flex items-center gap-2",t.innerHTML=`
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"></path>
      </svg>
      Install App
    `,t.addEventListener("click",()=>this.installPWA()),t}addInstallButtonToPage(t){document.body.appendChild(t),setTimeout(()=>{t.style.transform="translateY(0)",t.style.opacity="1"},100)}hideInstallButton(){let t=document.querySelector(".pwa-install-button");t&&(t.style.transform="translateY(100px)",t.style.opacity="0",setTimeout(()=>t.remove(),300))}async installPWA(){this.deferredPrompt&&(this.deferredPrompt.prompt(),(await this.deferredPrompt.userChoice).outcome==="accepted"?(console.log("[PWA] User accepted the install prompt"),this.trackEvent("pwa_install_accepted")):(console.log("[PWA] User dismissed the install prompt"),this.trackEvent("pwa_install_dismissed")),this.deferredPrompt=null)}showInstallSuccessMessage(){this.showNotification("\u{1F4F1} App installed successfully! You can now use Pynomaly offline.","success")}setupUpdateHandling(){"serviceWorker"in navigator&&navigator.serviceWorker.addEventListener("controllerchange",()=>{this.refreshing||(this.refreshing=!0,window.location.reload())})}showUpdateNotification(){let t=this.createNotification("\u{1F504} New version available! Click to update.","info",[{text:"Update Now",action:()=>this.updateApp()},{text:"Later",action:()=>this.dismissUpdate()}]);document.body.appendChild(t)}async updateApp(){this.registration&&this.registration.waiting&&this.registration.waiting.postMessage({type:"SKIP_WAITING"})}dismissUpdate(){let t=document.querySelector(".pwa-update-notification");t&&t.remove()}setupOfflineHandling(){window.addEventListener("online",()=>{this.isOnline=!0,this.onConnectionRestore()}),window.addEventListener("offline",()=>{this.isOnline=!1,this.onConnectionLost()})}async loadOfflineData(){try{this.registration&&this.registration.active&&this.registration.active.postMessage({type:"GET_OFFLINE_DATA"})}catch(t){console.error("[PWA] Failed to load offline data:",t)}}async saveDataOffline(t,e){try{this.registration&&this.registration.active&&this.registration.active.postMessage({type:"SAVE_OFFLINE_DATA",payload:{type:t,data:e}})}catch(n){console.error("[PWA] Failed to save offline data:",n)}}setupConnectionMonitoring(){this.updateConnectionUI(),setInterval(()=>{this.checkConnectivity()},3e4)}updateConnectionUI(){document.querySelectorAll(".connection-indicator").forEach(n=>{n.className=`connection-indicator ${this.isOnline?"online":"offline"}`}),document.querySelectorAll(".connection-status").forEach(n=>{n.textContent=this.isOnline?"Online":"Offline",n.className=`connection-status ${this.isOnline?"text-green-600":"text-orange-600"}`})}async checkConnectivity(){try{let t=await fetch("/api/health/ping",{method:"HEAD",mode:"no-cors",cache:"no-cache"});!this.isOnline&&navigator.onLine&&(this.isOnline=!0,this.onConnectionRestore())}catch{this.isOnline&&!navigator.onLine&&(this.isOnline=!1,this.onConnectionLost())}}onConnectionRestore(){console.log("[PWA] Connection restored"),this.updateConnectionUI(),this.syncPendingData(),this.showNotification("\u{1F310} Connection restored! Syncing data...","success")}onConnectionLost(){console.log("[PWA] Connection lost"),this.updateConnectionUI(),this.showNotification("\u{1F4E1} You're now offline. Changes will sync when connection returns.","warning")}async syncPendingData(){this.registration&&this.registration.active&&(this.registration.active.postMessage({type:"SYNC_ALL_QUEUES"}),setTimeout(()=>{this.registration.active.postMessage({type:"GET_SYNC_STATUS"})},1e3))}updateSyncStatus(t){let e=t.pending||0;document.querySelectorAll(".sync-indicator").forEach(i=>{i.textContent=e>0?`${e} pending`:"Up to date",i.className=`sync-indicator ${e>0?"text-orange-600":"text-green-600"}`})}async getCacheInfo(){return this.registration&&this.registration.active?new Promise(t=>{let e=new MessageChannel;e.port1.onmessage=n=>t(n.data),this.registration.active.postMessage({type:"GET_CACHE_STATUS"},[e.port2])}):null}async clearCache(t=null){this.registration&&this.registration.active&&this.registration.active.postMessage({type:"CLEAR_CACHE",payload:{cacheName:t}})}checkInstallStatus(){window.matchMedia("(display-mode: standalone)").matches&&(this.isInstalled=!0),window.navigator.standalone===!0&&(this.isInstalled=!0),document.referrer.includes("android-app://")&&(this.isInstalled=!0),this.isInstalled&&this.onInstallDetected()}onInstallDetected(){document.body.classList.add("pwa-installed"),this.trackEvent("pwa_running_installed")}onDetectionComplete(t){this.showNotification(`\u2705 Detection completed: ${t.result.n_anomalies} anomalies found`,"success")}showNotification(t,e="info",n=[]){let i=this.createNotification(t,e,n);document.body.appendChild(i),n.length===0&&setTimeout(()=>{i.parentNode&&i.remove()},5e3)}createNotification(t,e,n=[]){let i=document.createElement("div");i.className="pwa-notification fixed top-4 right-4 max-w-sm bg-white border rounded-lg shadow-lg z-50 transform transition-all duration-300";let a={success:"border-green-200 bg-green-50",warning:"border-orange-200 bg-orange-50",error:"border-red-200 bg-red-50",info:"border-blue-200 bg-blue-50"};i.className+=` ${a[e]||a.info}`;let l=n.length>0?`
      <div class="mt-3 flex gap-2">
        ${n.map(r=>`
          <button class="px-3 py-1 text-sm bg-white border rounded hover:bg-gray-50 transition-colors"
                  onclick="this.closest('.pwa-notification').remove(); (${r.action.toString()})()">
            ${r.text}
          </button>
        `).join("")}
      </div>
    `:"";return i.innerHTML=`
      <div class="p-4">
        <div class="flex justify-between items-start">
          <div class="flex-1">
            <p class="text-sm font-medium text-gray-900">${t}</p>
            ${l}
          </div>
          <button onclick="this.closest('.pwa-notification').remove()" 
                  class="ml-3 text-gray-400 hover:text-gray-600">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      </div>
    `,setTimeout(()=>{i.style.transform="translateX(0)"},100),i}trackEvent(t,e={}){typeof gtag<"u"&&gtag("event",t,e),console.log(`[PWA] Event: ${t}`,e)}isAppInstalled(){return this.isInstalled}isAppOnline(){return this.isOnline}async getAppStatus(){let t=await this.getCacheInfo();return{installed:this.isInstalled,online:this.isOnline,serviceWorkerActive:!!this.registration?.active,cacheInfo:t}}};typeof window<"u"&&(window.PWAManager=new s,window.PWA={install:()=>window.PWAManager.installPWA(),getStatus:()=>window.PWAManager.getAppStatus(),clearCache:o=>window.PWAManager.clearCache(o),sync:()=>window.PWAManager.syncPendingData()});})();
