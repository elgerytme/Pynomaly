[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pynomaly-domain-library"
dynamic = ["version"]
description = "Domain catalog and logic management system for Pynomaly ecosystem"
authors = [{name = "Pynomaly Team", email = "team@pynomaly.io"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = [
    "domain-catalog",
    "business-logic",
    "domain-driven-design",
    "entity-management",
    "knowledge-management"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent", 
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",
    "Framework :: FastAPI",
    "Typing :: Typed"
]

dependencies = [
    "pydantic>=2.9.0",
    "structlog>=24.4.0",
    "pyyaml>=6.0",
    "networkx>=3.0",
    "dependency-injector>=4.42.0"
]

[project.urls]
Homepage = "https://github.com/elgerytme/Pynomaly"
Repository = "https://github.com/elgerytme/Pynomaly"
Documentation = "https://github.com/elgerytme/Pynomaly/blob/main/src/packages/domain_library/docs/"
Issues = "https://github.com/elgerytme/Pynomaly/issues"

[project.optional-dependencies]
api = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.34.0", 
    "httpx>=0.28.1"
]
cli = [
    "typer>=0.15.1",
    "rich>=13.9.4"
]
web = [
    "jinja2>=3.1.5",
    "aiofiles>=24.1.0"
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.28.1",
    "pytest-mock>=3.12.0"
]
all = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.34.0",
    "httpx>=0.28.1",
    "typer>=0.15.1", 
    "rich>=13.9.4",
    "jinja2>=3.1.5",
    "aiofiles>=24.1.0"
]

[project.scripts]
domain-library = "domain_library.presentation.cli.app:app"

[tool.hatch.version]
source = "vcs"
root = "../../../.."

[tool.hatch.build.targets.wheel]
packages = ["src/packages/domain_library"]

[tool.ruff]
target-version = "py311"
line-length = 88
extend-exclude = [
    "tests"
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--disable-warnings",
    "--color=yes"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "contract: Contract tests",
    "e2e: End-to-end tests"
]