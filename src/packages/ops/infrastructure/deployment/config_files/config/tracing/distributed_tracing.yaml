# Distributed Tracing Configuration for Pynomaly
# OpenTelemetry-based distributed tracing setup for microservices observability

# Service identification
service:
  name: "pynomaly"
  version: "1.0.0"
  namespace: "production"
  environment: "production"
  instance_id: "${INSTANCE_ID:auto}"  # Auto-generated if not provided

# Tracing configuration
tracing:
  enabled: true
  
  # Sampling configuration
  sampling:
    # Sampling rate (0.0 to 1.0)
    rate: 1.0  # 100% for development, reduce for production
    
    # Sampling rules
    rules:
      # High-priority operations (always trace)
      - span_name_pattern: ".*auth.*"
        sampling_rate: 1.0
      - span_name_pattern: ".*payment.*"
        sampling_rate: 1.0
      - span_name_pattern: ".*ml.inference.*"
        sampling_rate: 1.0
      
      # Lower priority operations
      - span_name_pattern: ".*health.*"
        sampling_rate: 0.01  # 1% sampling for health checks
      - span_name_pattern: ".*metrics.*"
        sampling_rate: 0.1   # 10% sampling for metrics
      
      # Default sampling
      - span_name_pattern: ".*"
        sampling_rate: 0.1   # 10% default sampling

# Trace exporters/backends
exporters:
  # Jaeger configuration
  jaeger:
    enabled: true
    
    # Agent configuration (UDP)
    agent:
      host: "jaeger-agent"
      port: 6831
      max_packet_size: 65000
    
    # Collector configuration (HTTP)
    collector:
      endpoint: "http://jaeger-collector:14268/api/traces"
      timeout: 10  # seconds
      
    # Additional configuration
    tags:
      deployment.environment: "${ENVIRONMENT:production}"
      deployment.version: "${DEPLOYMENT_VERSION:unknown}"
    
    # Batch configuration
    batch:
      max_queue_size: 2048
      max_export_batch_size: 512
      export_timeout_millis: 30000
      schedule_delay_millis: 5000

  # Zipkin configuration
  zipkin:
    enabled: false
    endpoint: "http://zipkin:9411/api/v2/spans"
    timeout: 10  # seconds
    
    # Batch configuration
    batch:
      max_queue_size: 2048
      max_export_batch_size: 512
      export_timeout_millis: 30000

  # OTLP (OpenTelemetry Protocol) configuration
  otlp:
    enabled: false
    
    # gRPC endpoint
    endpoint: "http://otel-collector:4317"
    
    # HTTP endpoint alternative
    # endpoint: "http://otel-collector:4318/v1/traces"
    
    # Headers for authentication
    headers:
      # "authorization": "Bearer ${OTEL_TOKEN}"
      # "x-api-key": "${OTEL_API_KEY}"
    
    # TLS configuration
    tls:
      insecure: true  # Set to false for production with proper certs
      cert_file: ""
      key_file: ""
      ca_file: ""
    
    # Compression
    compression: "gzip"  # none, gzip, deflate
    
    # Batch configuration
    batch:
      max_queue_size: 2048
      max_export_batch_size: 512
      export_timeout_millis: 30000

  # Console exporter (for development/debugging)
  console:
    enabled: false  # Enable for development
    pretty_print: true

  # Logging exporter (write traces to logs)
  logging:
    enabled: false
    log_level: "INFO"

# Automatic instrumentation
instrumentations:
  # HTTP libraries
  requests:
    enabled: true
    excluded_urls:
      - "http://localhost:8080/health"
      - "http://localhost:8080/metrics"
      - "https://api.example.com/health"
    
    # Capture request/response headers
    capture_headers:
      request: ["content-type", "user-agent", "authorization"]
      response: ["content-type", "content-length"]
    
    # Exclude sensitive headers
    exclude_headers: ["authorization", "cookie", "x-api-key"]

  # HTTP server framework (Flask, FastAPI, Django)
  http_server:
    enabled: true
    
    # Capture request details
    capture_request_attributes:
      - "http.method"
      - "http.url"
      - "http.scheme"
      - "http.host"
      - "http.target"
      - "http.user_agent"
      - "http.remote_addr"
    
    # Capture response details
    capture_response_attributes:
      - "http.status_code"
      - "http.response.size"
    
    # Exclude certain routes
    excluded_urls:
      - "/health"
      - "/ready"
      - "/metrics"
      - "/favicon.ico"

  # Database libraries
  sqlalchemy:
    enabled: true
    
    # Capture SQL statements
    capture_statement: true
    capture_parameters: false  # Set to true for debugging (security risk)
    
    # Statement sanitization
    sanitize_comments: true
    max_statement_length: 500

  psycopg2:
    enabled: true
    capture_statement: true
    capture_parameters: false

  # Cache libraries
  redis:
    enabled: true
    capture_statement: true
    db_statement_serializer: "json"  # json, repr, or custom function name

  # Message queue libraries
  celery:
    enabled: true
    
    # Capture task details
    capture_task_name: true
    capture_task_args: false  # Security consideration
    capture_task_kwargs: false
    
    # Propagate trace context
    propagate_context: true

  rabbitmq:
    enabled: false
    capture_headers: true
    propagate_context: true

  kafka:
    enabled: false
    capture_headers: true
    propagate_context: true

  # External service libraries
  boto3sqs:
    enabled: false
    capture_message_attributes: true

  botocore:
    enabled: false
    capture_request_attributes: true
    
  # Machine learning libraries
  sklearn:
    enabled: false
    capture_model_info: true
    
  tensorflow:
    enabled: false
    capture_model_info: true

# Trace propagation
propagation:
  # Propagation formats
  formats:
    - "tracecontext"  # W3C Trace Context (recommended)
    - "baggage"       # W3C Baggage
    - "b3"            # Zipkin B3 (for compatibility)
    - "jaeger"        # Jaeger format (for compatibility)
  
  # HTTP header configuration
  headers:
    # W3C Trace Context
    traceparent: "traceparent"
    tracestate: "tracestate"
    
    # Baggage
    baggage: "baggage"
    
    # B3 headers
    b3_trace_id: "X-B3-TraceId"
    b3_span_id: "X-B3-SpanId"
    b3_sampled: "X-B3-Sampled"
    
    # Custom headers
    custom_trace_id: "X-Trace-ID"
    custom_span_id: "X-Span-ID"
    custom_correlation_id: "X-Correlation-ID"

# Resource attributes
resource:
  # Standard OpenTelemetry resource attributes
  attributes:
    # Service attributes
    service.name: "${SERVICE_NAME:pynomaly}"
    service.version: "${SERVICE_VERSION:1.0.0}"
    service.namespace: "${SERVICE_NAMESPACE:production}"
    service.instance.id: "${INSTANCE_ID:auto}"
    
    # Deployment attributes
    deployment.environment: "${ENVIRONMENT:production}"
    deployment.environment.name: "${ENVIRONMENT_NAME:production}"
    
    # Container attributes
    container.name: "${CONTAINER_NAME:unknown}"
    container.id: "${CONTAINER_ID:unknown}"
    container.image.name: "${CONTAINER_IMAGE:unknown}"
    container.image.tag: "${CONTAINER_IMAGE_TAG:unknown}"
    
    # Kubernetes attributes
    k8s.cluster.name: "${K8S_CLUSTER_NAME:unknown}"
    k8s.namespace.name: "${K8S_NAMESPACE:unknown}"
    k8s.pod.name: "${K8S_POD_NAME:unknown}"
    k8s.pod.uid: "${K8S_POD_UID:unknown}"
    k8s.node.name: "${K8S_NODE_NAME:unknown}"
    k8s.deployment.name: "${K8S_DEPLOYMENT_NAME:unknown}"
    
    # Cloud attributes
    cloud.provider: "${CLOUD_PROVIDER:aws}"
    cloud.region: "${CLOUD_REGION:us-east-1}"
    cloud.availability_zone: "${CLOUD_AZ:us-east-1a}"
    cloud.account.id: "${CLOUD_ACCOUNT_ID:unknown}"
    
    # Host attributes
    host.name: "${HOSTNAME:unknown}"
    host.id: "${HOST_ID:unknown}"
    host.type: "${HOST_TYPE:unknown}"
    
    # Process attributes
    process.pid: "${PROCESS_PID:auto}"
    process.executable.name: "python"
    process.runtime.name: "cpython"
    process.runtime.version: "${PYTHON_VERSION:unknown}"

# Performance configuration
performance:
  # Memory management
  memory:
    max_queue_size: 2048  # Maximum spans in memory queue
    max_export_batch_size: 512  # Maximum spans per export batch
    
  # Timing configuration
  timing:
    export_timeout_millis: 30000  # Export timeout
    schedule_delay_millis: 5000   # Delay between exports
    max_export_timeout_millis: 60000  # Maximum export timeout
    
  # Rate limiting
  rate_limiting:
    enabled: true
    max_spans_per_second: 1000  # Maximum spans generated per second
    burst_limit: 5000           # Burst capacity
    
  # Async processing
  async_processing:
    enabled: true
    worker_threads: 2           # Number of export worker threads

# Error handling
error_handling:
  # Retry configuration
  retry:
    enabled: true
    max_attempts: 3
    initial_delay_ms: 1000
    max_delay_ms: 10000
    backoff_multiplier: 2.0
    
  # Fallback behavior
  fallback:
    drop_spans: true            # Drop spans if all exporters fail
    log_errors: true            # Log export errors
    
  # Circuit breaker
  circuit_breaker:
    enabled: true
    failure_threshold: 5        # Number of failures before opening
    timeout_ms: 60000          # Time to wait before trying again
    success_threshold: 3        # Successes needed to close circuit

# Security configuration
security:
  # Data sanitization
  sanitization:
    enabled: true
    
    # Sensitive attribute patterns to redact
    sensitive_attributes:
      - "password"
      - "token"
      - "secret"
      - "key"
      - "authorization"
      - "cookie"
      - "ssn"
      - "credit_card"
      - "phone"
      - "email"
    
    # URL patterns to sanitize
    sensitive_url_patterns:
      - ".*/auth/.*"
      - ".*/password/.*"
      - ".*/token/.*"
    
    # Replace sensitive data with placeholders
    replacement_text: "[REDACTED]"
  
  # TLS configuration for exporters
  tls:
    verify_certificates: true
    ca_bundle_path: ""
    
  # Authentication for exporters
  authentication:
    enabled: false
    
    # API key authentication
    api_key:
      header_name: "X-API-Key"
      key: "${TRACING_API_KEY}"
    
    # Bearer token authentication
    bearer_token:
      header_name: "Authorization"
      token: "${TRACING_BEARER_TOKEN}"

# Monitoring and alerting
monitoring:
  # Health checks
  health_checks:
    enabled: true
    endpoint: "/health/tracing"
    
  # Metrics about tracing itself
  self_metrics:
    enabled: true
    
    # Export tracing metrics
    export_metrics:
      spans_exported: true
      spans_dropped: true
      export_duration: true
      export_errors: true
      queue_size: true
    
    # Prometheus metrics
    prometheus:
      enabled: false
      namespace: "pynomaly"
      subsystem: "tracing"
      
  # Alerting
  alerting:
    enabled: false
    
    # Alert thresholds
    thresholds:
      export_error_rate: 0.05    # 5% error rate
      export_latency_p95: 5000   # 5 seconds
      queue_size: 1500           # Queue size threshold
      dropped_spans_rate: 0.01   # 1% dropped spans
    
    # Alert destinations
    destinations:
      slack:
        webhook_url: "${SLACK_WEBHOOK_URL}"
        channel: "#pynomaly-alerts"
      
      email:
        smtp_server: "smtp.company.com"
        recipients: ["ops@company.com"]

# Development and debugging
development:
  # Enable debug mode
  debug: false
  
  # Verbose logging
  verbose_logging: false
  
  # Force trace all operations (ignore sampling)
  force_trace_all: false
  
  # Export to console for debugging
  console_export: false
  
  # Validate configuration on startup
  validate_config: true
  
  # Test tracing on startup
  test_on_startup: false

# Environment-specific overrides
environments:
  development:
    tracing:
      sampling:
        rate: 1.0  # 100% sampling in development
    exporters:
      console:
        enabled: true
      jaeger:
        enabled: false
    development:
      debug: true
      verbose_logging: true
      console_export: true
      test_on_startup: true
  
  staging:
    tracing:
      sampling:
        rate: 0.5  # 50% sampling in staging
    exporters:
      jaeger:
        enabled: true
        agent:
          host: "jaeger-staging"
  
  production:
    tracing:
      sampling:
        rate: 0.1  # 10% sampling in production
    exporters:
      jaeger:
        enabled: true
        agent:
          host: "jaeger-production"
      otlp:
        enabled: true
    security:
      sanitization:
        enabled: true
      tls:
        verify_certificates: true
    monitoring:
      self_metrics:
        enabled: true
      alerting:
        enabled: true
