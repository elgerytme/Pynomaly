version: '3.8'

services:
  # Main application server
  pynomaly-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYNOMALY_ENV=testing
      - PYNOMALY_DATABASE_URL=sqlite:///testing.db
      - PYNOMALY_LOG_LEVEL=INFO
    volumes:
      - ./storage:/app/storage
    networks:
      - ui-testing-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # UI Testing with Playwright
  ui-tests:
    build:
      context: .
      dockerfile: docker/Dockerfile.ui-testing
    depends_on:
      pynomaly-app:
        condition: service_healthy
    environment:
      - PYNOMALY_BASE_URL=http://pynomaly-app:8000
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - PYTHONPATH=/app/src
    volumes:
      - ./test-results:/app/test-results
      - ./screenshots:/app/screenshots
      - ./reports:/app/reports
      - ./tests/ui:/app/tests/ui
    networks:
      - ui-testing-network
    command: >
      sh -c "
        echo 'Waiting for application to be ready...' &&
        sleep 10 &&
        pytest tests/ui/ -v
        --html=reports/ui-test-report.html
        --self-contained-html
        --screenshot=on
        --video=on
        --capture=no
      "

  # Visual regression testing
  visual-tests:
    build:
      context: .
      dockerfile: docker/Dockerfile.ui-testing
    depends_on:
      pynomaly-app:
        condition: service_healthy
    environment:
      - PYNOMALY_BASE_URL=http://pynomaly-app:8000
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - PYTHONPATH=/app/src
    volumes:
      - ./test-results:/app/test-results
      - ./screenshots:/app/screenshots
      - ./reports:/app/reports
      - ./tests/ui:/app/tests/ui
      - ./visual-baselines:/app/visual-baselines
    networks:
      - ui-testing-network
    command: >
      sh -c "
        echo 'Running visual regression tests...' &&
        sleep 10 &&
        pytest tests/ui/test_visual_regression.py -v
        --html=reports/visual-test-report.html
        --self-contained-html
      "

networks:
  ui-testing-network:
    driver: bridge

volumes:
  test-results:
  screenshots:
  reports:
  visual-baselines:
