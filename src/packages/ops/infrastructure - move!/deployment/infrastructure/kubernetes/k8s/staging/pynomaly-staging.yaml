apiVersion: apps/v1
kind: Deployment
metadata:
  name: pynomaly-staging-app
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: app
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pynomaly
      component: app
      environment: staging
  template:
    metadata:
      labels:
        app: pynomaly
        component: app
        environment: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        config.linkerd.io/proxy-cpu-request: "0.1"
        config.linkerd.io/proxy-memory-request: "64Mi"
    spec:
      containers:
      - name: pynomaly-app
        image: pynomaly:staging
        ports:
        - containerPort: 8000
          name: http
        envFrom:
        - configMapRef:
            name: pynomaly-staging-config
        - secretRef:
            name: pynomaly-staging-secrets
        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/0"
        - name: MONGODB_URL
          value: "mongodb://$(MONGODB_USER):$(MONGODB_PASSWORD)@$(MONGODB_HOST):$(MONGODB_PORT)/$(MONGODB_DB)"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: staging-storage
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: test-data
          mountPath: /app/test-data
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: staging-storage
        persistentVolumeClaim:
          claimName: pynomaly-staging-storage
      - name: logs
        emptyDir: {}
      - name: test-data
        configMap:
          name: pynomaly-staging-test-config
      securityContext:
        fsGroup: 1000
      imagePullSecrets:
      - name: regcred

---
apiVersion: v1
kind: Service
metadata:
  name: pynomaly-staging-service
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: app
    environment: staging
spec:
  selector:
    app: pynomaly
    component: app
    environment: staging
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pynomaly-staging-storage
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: app
    environment: staging
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pynomaly-staging-hpa
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: app
    environment: staging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pynomaly-staging-app
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
