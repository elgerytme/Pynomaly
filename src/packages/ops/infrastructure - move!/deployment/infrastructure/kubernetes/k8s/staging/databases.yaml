apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-staging
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: postgres
    environment: staging
spec:
  serviceName: postgres-staging-service
  replicas: 1
  selector:
    matchLabels:
      app: pynomaly
      component: postgres
      environment: staging
  template:
    metadata:
      labels:
        app: pynomaly
        component: postgres
        environment: staging
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: pynomaly_staging
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pynomaly-staging-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pynomaly-staging-secrets
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-staging-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-staging-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: postgres-staging-config
        configMap:
          name: postgres-staging-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-staging-storage
      labels:
        app: pynomaly
        component: postgres
        environment: staging
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
      storageClassName: fast-ssd

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-staging-service
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: postgres
    environment: staging
spec:
  selector:
    app: pynomaly
    component: postgres
    environment: staging
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-staging
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: redis
    environment: staging
spec:
  serviceName: redis-staging-service
  replicas: 1
  selector:
    matchLabels:
      app: pynomaly
      component: redis
      environment: staging
  template:
    metadata:
      labels:
        app: pynomaly
        component: redis
        environment: staging
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pynomaly-staging-secrets
              key: REDIS_PASSWORD
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --maxmemory
        - 256mb
        - --maxmemory-policy
        - allkeys-lru
        - --appendonly
        - "yes"
        - --appendfsync
        - everysec
        volumeMounts:
        - name: redis-staging-storage
          mountPath: /data
        - name: redis-staging-config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: redis-staging-config
        configMap:
          name: redis-staging-config
  volumeClaimTemplates:
  - metadata:
      name: redis-staging-storage
      labels:
        app: pynomaly
        component: redis
        environment: staging
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi
      storageClassName: fast-ssd

---
apiVersion: v1
kind: Service
metadata:
  name: redis-staging-service
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: redis
    environment: staging
spec:
  selector:
    app: pynomaly
    component: redis
    environment: staging
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-staging
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: mongodb
    environment: staging
spec:
  serviceName: mongodb-staging-service
  replicas: 1
  selector:
    matchLabels:
      app: pynomaly
      component: mongodb
      environment: staging
  template:
    metadata:
      labels:
        app: pynomaly
        component: mongodb
        environment: staging
    spec:
      containers:
      - name: mongodb
        image: mongo:7
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: pynomaly-staging-secrets
              key: MONGODB_USER
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pynomaly-staging-secrets
              key: MONGODB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          value: pynomaly_staging
        volumeMounts:
        - name: mongodb-staging-storage
          mountPath: /data/db
        - name: mongodb-staging-config
          mountPath: /etc/mongo/mongod.conf
          subPath: mongod.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: mongodb-staging-config
        configMap:
          name: mongodb-staging-config
  volumeClaimTemplates:
  - metadata:
      name: mongodb-staging-storage
      labels:
        app: pynomaly
        component: mongodb
        environment: staging
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
      storageClassName: fast-ssd

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-staging-service
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: mongodb
    environment: staging
spec:
  selector:
    app: pynomaly
    component: mongodb
    environment: staging
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongodb
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-staging-config
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: postgres
    environment: staging
data:
  postgresql.conf: |
    # PostgreSQL configuration for staging
    shared_preload_libraries = 'pg_stat_statements'
    
    # Connection settings
    max_connections = 100
    shared_buffers = 128MB
    effective_cache_size = 256MB
    maintenance_work_mem = 32MB
    work_mem = 4MB
    
    # WAL settings
    wal_level = replica
    max_wal_size = 1GB
    min_wal_size = 80MB
    
    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = '/var/log/postgresql'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    log_min_duration_statement = 1000
    log_statement = 'all'
    
    # Performance
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Autovacuum
    autovacuum = on
    autovacuum_max_workers = 3
    autovacuum_naptime = 1min
    
    # Security
    ssl = off
    password_encryption = scram-sha-256

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-staging-config
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: redis
    environment: staging
data:
  redis.conf: |
    # Redis configuration for staging
    
    # Network
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    
    # Memory
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    
    # Persistence
    appendonly yes
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Logging
    loglevel notice
    logfile ""
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Security
    requirepass REDIS_PASSWORD_PLACEHOLDER
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Performance
    hz 10
    aof-rewrite-incremental-fsync yes
    
    # Modules
    # loadmodule /path/to/module.so

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-staging-config
  namespace: pynomaly-staging
  labels:
    app: pynomaly
    component: mongodb
    environment: staging
data:
  mongod.conf: |
    # MongoDB configuration for staging
    
    # Network interfaces
    net:
      port: 27017
      bindIp: 0.0.0.0
    
    # Storage
    storage:
      dbPath: /data/db
      journal:
        enabled: true
      wiredTiger:
        engineConfig:
          cacheSizeGB: 0.25
        collectionConfig:
          blockCompressor: snappy
        indexConfig:
          prefixCompression: true
    
    # Process management
    processManagement:
      fork: false
      pidFilePath: /var/run/mongodb/mongod.pid
      timeZoneInfo: /usr/share/zoneinfo
    
    # Security
    security:
      authorization: enabled
    
    # Operation profiling
    operationProfiling:
      slowOpThresholdMs: 100
      mode: slowOp
    
    # Replication (disabled for staging single instance)
    #replication:
    #  replSetName: "staging-rs"
    
    # Logging
    systemLog:
      destination: file
      logAppend: true
      path: /var/log/mongodb/mongod.log
      component:
        accessControl:
          verbosity: 1
        command:
          verbosity: 1
        query:
          verbosity: 1
        write:
          verbosity: 1
    
    # Set parameter
    setParameter:
      enableLocalhostAuthBypass: false
      authenticationMechanisms: SCRAM-SHA-1,SCRAM-SHA-256
