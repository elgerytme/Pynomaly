server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: pynomaly

scrape_configs:
  # Pynomaly Application Logs
  - job_name: pynomaly-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: pynomaly-app
          __path__: /var/log/pynomaly/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            logger: logger
            correlation_id: correlation_id
            user_id: user_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          logger:
          user_id:
          correlation_id:

  # Pynomaly Audit Logs
  - job_name: pynomaly-audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: pynomaly-audit
          __path__: /var/log/pynomaly/audit.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            event_type: event_type
            severity: severity
            user_id: user_id
            username: username
            ip_address: ip_address
            message: message
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          event_type:
          severity:
          user_id:
          username:

  # Container Logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containers
          __path__: /var/lib/docker/containers/*/*log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          source: attrs
          expressions:
            tag:
      - regex:
          source: tag
          expression: (?P<container_name>(?:[^|]*))\|(?P<image_name>(?:[^|]*))
      - timestamp:
          source: time
          format: RFC3339Nano
      - labels:
          stream:
          container_name:
          image_name:
      - output:
          source: output

  # NGINX Access Logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\d\.]+) - (?P<remote_user>[^ ]*) \[(?P<time_local>[^\]]*)\] "(?P<method>[A-Z]*) (?P<request_uri>[^ ]*) (?P<protocol>[^"]*)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      - timestamp:
          source: time_local
          format: 02/Jan/2006:15:04:05 -0700
      - labels:
          method:
          status:
          remote_addr:

  # NGINX Error Logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>[^\]]*)\] (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: 2006/01/02 15:04:05
      - labels:
          level:

  # PostgreSQL Logs
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d+) (?P<timezone>[A-Z]+) \[(?P<pid>\d+)\] (?P<level>[A-Z]+):  (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: 2006-01-02 15:04:05.000
      - labels:
          level:
          pid:
