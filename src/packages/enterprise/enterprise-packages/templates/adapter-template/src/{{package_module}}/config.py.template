"""Configuration for {{package_title}}."""

from typing import Dict, Optional
from pydantic import BaseModel, Field, SecretStr
from enterprise_core import BaseConfig


class {{package_module|title}}Config(BaseConfig):
    """Configuration for {{package_name}} adapter."""

    # Connection configuration
    base_url: str = Field(
        default="https://api.{{package_name}}.com",
        description="Base URL for {{package_name}} API"
    )
    api_key: SecretStr = Field(description="API key for authentication")
    api_version: str = Field(default="v1", description="API version to use")

    # Request configuration
    timeout: int = Field(default=30, description="Request timeout in seconds")
    max_retries: int = Field(default=3, description="Maximum number of retries")
    backoff_factor: float = Field(default=0.3, description="Backoff factor for retries")

    # Connection pooling
    pool_connections: int = Field(default=10, description="Number of connection pools")
    pool_maxsize: int = Field(default=20, description="Maximum pool size")
    pool_block: bool = Field(default=False, description="Block when pool is full")

    # Circuit breaker configuration
    circuit_breaker_enabled: bool = Field(default=True, description="Enable circuit breaker")
    failure_threshold: int = Field(default=5, description="Failure threshold for circuit breaker")
    recovery_timeout: int = Field(default=60, description="Recovery timeout in seconds")

    # Rate limiting
    rate_limit_enabled: bool = Field(default=True, description="Enable rate limiting")
    requests_per_minute: int = Field(default=100, description="Requests per minute limit")

    # Headers and authentication
    default_headers: Dict[str, str] = Field(
        default_factory=lambda: {
            "User-Agent": "enterprise-{{package_name}}-adapter/0.1.0",
            "Accept": "application/json",
            "Content-Type": "application/json",
        },
        description="Default headers for requests"
    )

    # SSL configuration
    verify_ssl: bool = Field(default=True, description="Verify SSL certificates")
    ssl_cert_path: Optional[str] = Field(default=None, description="Path to SSL certificate")

    class Config:
        env_prefix = "{{package_module|upper}}_"
