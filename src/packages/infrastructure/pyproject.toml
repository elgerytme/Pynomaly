[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "infrastructure"
dynamic = ["version"]
description = "Infrastructure package providing technical cross-cutting concerns for the monorepo"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "Monorepo Team" },
]
keywords = [
    "infrastructure",
    "cross-cutting",
    "technical",
    "persistence",
    "messaging",
    "caching",
    "security",
    "monitoring"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    # Core infrastructure dependencies
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    
    # HTTP and API
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    
    # Security
    "cryptography>=41.0.0",
    "pyjwt>=2.8.0",
    "bcrypt>=4.1.0",
    
    # Monitoring and observability
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    
    # Configuration and environment
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
    
    # Async support
    "asyncio-mqtt>=0.16.0",
    "aioredis>=2.0.0",
    
    # Message queues
    "pika>=1.3.0",
    "aiokafka>=0.9.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "mypy>=1.7.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "pre-commit>=3.6.0",
]

# Testing dependencies  
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "factory-boy>=3.3.0",
    "testcontainers>=3.7.0",
    "responses>=0.24.0",
    "httpx>=0.25.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
    "mkdocstrings[python]>=0.24.0",
]

# Performance profiling
performance = [
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14",
    "cProfile-to-csv>=1.0.0",
    "line-profiler>=4.1.0",
]

# Security scanning
security = [
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "semgrep>=1.45.0",
]

# Database-specific dependencies
database = [
    "psycopg2-binary>=2.9.9",
    "asyncpg>=0.29.0",
    "pymongo>=4.6.0",
    "motor>=3.3.0",
]

# Cloud integrations
cloud = [
    "boto3>=1.34.0",
    "google-cloud-storage>=2.10.0",
    "azure-storage-blob>=12.19.0",
    "kubernetes>=28.1.0",
]

# Message broker integrations
messaging = [
    "confluent-kafka>=2.3.0",
    "azure-servicebus>=7.11.0",
    "google-cloud-pubsub>=2.18.0",
]

# Monitoring and observability
monitoring = [
    "datadog>=0.48.0",
    "newrelic>=9.2.0",
    "sentry-sdk>=1.38.0",
    "jaeger-client>=4.8.0",
]

# All optional dependencies
all = [
    "infrastructure[dev,test,docs,performance,security,database,cloud,messaging,monitoring]"
]

[project.urls]
Homepage = "https://github.com/monorepo/infrastructure"
Documentation = "https://monorepo.github.io/infrastructure"
Repository = "https://github.com/monorepo/infrastructure"
Issues = "https://github.com/monorepo/infrastructure/issues"
Changelog = "https://github.com/monorepo/infrastructure/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "src/infrastructure/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/infrastructure"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/CHANGELOG.md",
    "/LICENSE",
]

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "security: marks tests as security tests",
    "performance: marks tests as performance tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]

# Code formatting and linting
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["infrastructure"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Security scanning
[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]