# Buck2 Build Configuration for CLI Package
# Command-line interface presentation layer with Typer

load("@prelude//python:defs.bzl", "python_library", "python_test", "python_binary")

# ==========================================
# CLI Components
# ==========================================

# Main CLI Application
python_library(
    name = "app",
    srcs = glob([
        "cli/app.py",
        "cli/lazy_app.py",
        "cli/__init__.py",
    ]),
    deps = [
        ":commands",
        ":container",
        ":config",
        "//src/packages/core:core",
    ],
    visibility = ["//src/packages/..."],
)

# CLI Commands
python_library(
    name = "commands",
    srcs = glob([
        "cli/*.py",
        "commands/**/*.py",
    ]),
    exclude = [
        "cli/app.py",
        "cli/lazy_app.py",
        "cli/__init__.py",
    ],
    deps = [
        ":config",
        ":container",
        "//src/packages/core:use-cases",
        "//src/packages/core:dto",
    ],
    visibility = ["//src/packages/..."],
)

# CLI Configuration
python_library(
    name = "config",
    srcs = glob([
        "cli/config.py",
        "cli/help_formatter.py",
    ]),
    deps = [
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# Dependency Injection Container
python_library(
    name = "container",
    srcs = glob([
        "cli/container.py",
        "cli/fast_container.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/infrastructure:infrastructure",
    ],
    visibility = ["//src/packages/..."],
)

# ==========================================
# Complete CLI Package
# ==========================================

python_library(
    name = "cli",
    srcs = ["__init__.py"],
    deps = [
        ":app",
        ":commands",
        ":config",
        ":container",
    ],
    visibility = ["PUBLIC"],
)

# ==========================================
# CLI Binary
# ==========================================

python_binary(
    name = "monorepo",
    main = "cli/app.py",
    deps = [":cli"],
    visibility = ["PUBLIC"],
)

# Development CLI Binary (with debug flags)
python_binary(
    name = "monorepo-dev",
    main = "cli/app.py",
    deps = [":cli"],
    env = {
        "MONOREPO_ENV": "development",
        "DEBUG": "true",
        "TYPER_COMPLETION": "false",
    },
    visibility = ["PUBLIC"],
)

# ==========================================
# Test Targets
# ==========================================

# Command Tests
python_test(
    name = "test-commands",
    srcs = glob([
        "tests/test_commands/**/*.py",
        "tests/test_*_commands.py",
    ]),
    deps = [
        ":commands",
        ":config",
        "//src/packages/core:dto",
    ],
    env = {
        "PYTHONPATH": ".",
        "TESTING": "true",
    },
)

# CLI Application Tests
python_test(
    name = "test-app",
    srcs = glob([
        "tests/test_app.py",
        "tests/test_cli_app.py",
    ]),
    deps = [
        ":app",
        ":commands",
        "//src/packages/core:core",
    ],
    env = {
        "PYTHONPATH": ".",
        "TESTING": "true",
    },
)

# Configuration Tests
python_test(
    name = "test-config",
    srcs = glob([
        "tests/test_config.py",
        "tests/test_cli_config.py",
    ]),
    deps = [
        ":config",
        "//src/packages/core:shared",
    ],
    env = {
        "PYTHONPATH": ".",
        "TESTING": "true",
    },
)

# Integration Tests
python_test(
    name = "test-integration",
    srcs = glob([
        "tests/test_integration/**/*.py",
        "tests/test_cli_integration.py",
    ]),
    deps = [
        ":cli",
        "//src/packages/core:core",
        "//src/packages/infrastructure:infrastructure",
    ],
    env = {
        "PYTHONPATH": ".",
        "TESTING": "true",
    },
)

# All CLI Tests
genrule(
    name = "test-all",
    srcs = [],
    out = "cli-test-results.txt",
    cmd = "echo 'CLI package tests completed' > $OUT",
    deps = [
        ":test-commands",
        ":test-app",
        ":test-config",
        ":test-integration",
    ],
)

# ==========================================
# Development Targets  
# ==========================================

# CLI Package Development Build
genrule(
    name = "dev",
    srcs = [],
    out = "cli-dev-ready.txt",
    cmd = "echo 'CLI package development ready' > $OUT",
    deps = [
        ":cli",
    ],
)

# CLI Help Documentation
genrule(
    name = "generate-help",
    srcs = [":cli"],
    out = "cli-help.txt",
    cmd = "python -m cli.app --help > $OUT",
    visibility = ["PUBLIC"],
)

# CLI Command Completion
genrule(
    name = "generate-completion",
    srcs = [":cli"],
    out = "cli-completion.sh",
    cmd = "python -m cli.app --install-completion bash > $OUT",
    visibility = ["PUBLIC"],
)