# Buck2 Build Configuration for Infrastructure Package
# Infrastructure layer with external integrations and adapters

load("@prelude//python:defs.bzl", "python_library", "python_test")

# ==========================================
# Infrastructure Adapters
# ==========================================

# Database Adapters
python_library(
    name = "database",
    srcs = glob([
        "infrastructure/persistence/**/*.py",
        "infrastructure/repositories/**/*.py",
        "infrastructure/database/**/*.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/core:entities",
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# External API Adapters
python_library(
    name = "external-apis",
    srcs = glob([
        "infrastructure/external/**/*.py",
        "infrastructure/apis/**/*.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# Caching Infrastructure
python_library(
    name = "caching",
    srcs = glob([
        "infrastructure/caching/**/*.py",
        "infrastructure/cache/**/*.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# Monitoring and Observability
python_library(
    name = "monitoring",
    srcs = glob([
        "infrastructure/monitoring/**/*.py",
        "infrastructure/observability/**/*.py",
        "infrastructure/logging/**/*.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# Message Queue and Event Infrastructure
python_library(
    name = "messaging",
    srcs = glob([
        "infrastructure/messaging/**/*.py",
        "infrastructure/events/**/*.py",
        "infrastructure/queue/**/*.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/core:entities",
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# Security Infrastructure
python_library(
    name = "security",
    srcs = glob([
        "infrastructure/security/**/*.py",
        "infrastructure/auth/**/*.py",
        "infrastructure/encryption/**/*.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/core:entities",
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# Configuration Management
python_library(
    name = "config",
    srcs = glob([
        "infrastructure/config/**/*.py",
        "infrastructure/settings/**/*.py",
    ]),
    deps = [
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# File System and Storage
python_library(
    name = "storage",
    srcs = glob([
        "infrastructure/storage/**/*.py",
        "infrastructure/filesystem/**/*.py",
    ]),
    deps = [
        "//src/packages/core:abstractions",
        "//src/packages/core:shared",
    ],
    visibility = ["//src/packages/..."],
)

# ==========================================
# Complete Infrastructure Package
# ==========================================

python_library(
    name = "infrastructure",
    srcs = ["__init__.py"],
    deps = [
        ":database",
        ":external-apis",
        ":caching",
        ":monitoring",
        ":messaging", 
        ":security",
        ":config",
        ":storage",
        "//src/packages/core:core",
    ],
    visibility = ["PUBLIC"],
)

# ==========================================
# Test Targets
# ==========================================

# Database Adapter Tests
python_test(
    name = "test-database",
    srcs = glob([
        "tests/test_database/**/*.py",
        "tests/test_persistence/**/*.py",
        "tests/test_repositories/**/*.py",
    ]),
    deps = [
        ":database",
        "//src/packages/core:entities",
        "//src/packages/core:shared",
    ],
    env = {
        "PYTHONPATH": ".",
    },
)

# External API Tests
python_test(
    name = "test-external-apis",
    srcs = glob([
        "tests/test_external/**/*.py",
        "tests/test_apis/**/*.py",
    ]),
    deps = [
        ":external-apis",
        "//src/packages/core:shared",
    ],
    env = {
        "PYTHONPATH": ".",
    },
)

# Caching Tests
python_test(
    name = "test-caching",
    srcs = glob([
        "tests/test_caching/**/*.py",
        "tests/test_cache/**/*.py",
    ]),
    deps = [
        ":caching",
        "//src/packages/core:shared",
    ],
    env = {
        "PYTHONPATH": ".",
    },
)

# Monitoring Tests  
python_test(
    name = "test-monitoring",
    srcs = glob([
        "tests/test_monitoring/**/*.py",
        "tests/test_observability/**/*.py",
    ]),
    deps = [
        ":monitoring",
        "//src/packages/core:shared",
    ],
    env = {
        "PYTHONPATH": ".",
    },
)

# Security Tests
python_test(
    name = "test-security",
    srcs = glob([
        "tests/test_security/**/*.py",
        "tests/test_auth/**/*.py",
    ]),
    deps = [
        ":security",
        "//src/packages/core:entities",
        "//src/packages/core:shared",
    ],
    env = {
        "PYTHONPATH": ".",
    },
)

# All Infrastructure Tests
genrule(
    name = "test-all",
    srcs = [],
    out = "infrastructure-test-results.txt",
    cmd = "echo 'Infrastructure package tests completed' > $OUT",
    deps = [
        ":test-database",
        ":test-external-apis",
        ":test-caching",
        ":test-monitoring",
        ":test-security",
    ],
)

# ==========================================
# Development Targets
# ==========================================

# Infrastructure Package Development Build
genrule(
    name = "dev",
    srcs = [],
    out = "infrastructure-dev-ready.txt",
    cmd = "echo 'Infrastructure package development ready' > $OUT",
    deps = [
        ":infrastructure",
    ],
)