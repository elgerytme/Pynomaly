[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "neuro-symbolic"
version = "0.1.0"
description = "Neuro-symbolic AI combining neural networks with symbolic reasoning for advanced pattern recognition"
authors = [{name = "AI Team", email = "team@company.ai"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pydantic>=2.0.0",
    "networkx>=3.0",
    "sympy>=1.12",
    "scikit-learn>=1.3.0",
    "click>=8.1.0",
    "structlog>=23.0.0",
]

[project.optional-dependencies]
# Domain-specific dependencies
reasoning = ["prolog>=0.3.0", "z3-solver>=4.12.0"]
visualization = ["matplotlib>=3.7.0", "plotly>=5.15.0", "graphviz>=0.20.0"]
optimization = ["optuna>=3.0.0", "ray>=2.6.0"]

# Development dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "hypothesis>=6.115.0",
    "factory-boy>=3.3.1",
    "faker>=33.1.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
    "bandit>=1.7.10",
    "safety>=3.3.0",
]

# Testing dependencies
test = [
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.6.0",
    "pytest-timeout>=2.3.0",
    "pytest-randomly>=3.15.0",
    "hypothesis>=6.115.0",
    "factory-boy>=3.3.1",
    "faker>=33.1.0",
    "httpx>=0.28.1",
    "testcontainers>=4.9.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-mermaid2-plugin>=1.3.0",
    "mkdocstrings[python]>=0.27.0",
    "mike>=2.1.0",
]

# Performance testing
performance = [
    "locust>=2.31.0",
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14",
    "psutil>=6.1.0",
]

# Security testing
security = [
    "bandit>=1.7.10",
    "safety>=3.3.0",
    "semgrep>=1.95.0",
    "pip-audit>=2.7.0",
]

# Monitoring and observability
monitoring = [
    "prometheus-client>=0.21.0",
    "opentelemetry-api>=1.29.0",
    "opentelemetry-sdk>=1.29.0",
    "opentelemetry-instrumentation-fastapi>=0.50b0",
    "opentelemetry-exporter-prometheus>=1.12.0rc1",
]

# All optional dependencies
all = [
    "neuro-symbolic[reasoning,visualization,optimization,dev,test,docs,performance,security,monitoring]"
]

[tool.hatch.build.targets.wheel]
packages = ["neuro_symbolic"]

[tool.ruff]
target-version = "py311"
line-length = 88
src = ["."]

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP"]

[tool.mypy]
python_version = "3.11"
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
where = ["src"]
