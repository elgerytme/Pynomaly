# Production Dockerfile for Data Quality Service
FROM python:3.11-slim as builder

# Set build arguments
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Add metadata
LABEL maintainer="Data Quality Team"
LABEL org.opencontainers.image.title="Data Quality Service"
LABEL org.opencontainers.image.description="Hexagonal Architecture Data Quality Service"
LABEL org.opencontainers.image.created=$BUILD_DATE
LABEL org.opencontainers.image.revision=$VCS_REF
LABEL org.opencontainers.image.version=$VERSION

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements-prod.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-prod.txt

# Copy source code
COPY src/ ./src/
COPY pyproject.toml ./

# Install the package
RUN pip install -e .

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r dataapp && useradd -r -g dataapp dataapp

# Set working directory
WORKDIR /app

# Copy from builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /app/src ./src

# Create directories
RUN mkdir -p /app/data /app/logs /app/config && \
    chown -R dataapp:dataapp /app

# Copy production configuration
COPY config/production.yaml /app/config/production.yaml

# Switch to non-root user
USER dataapp

# Set environment variables
ENV PYTHONPATH=/app/src
ENV ENVIRONMENT=production
ENV DATA_STORAGE_PATH=/app/data
ENV CONFIG_PATH=/app/config/production.yaml
ENV LOG_LEVEL=INFO

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start the service
CMD ["python", "-m", "data_quality.api.server", "--host", "0.0.0.0", "--port", "8080"]