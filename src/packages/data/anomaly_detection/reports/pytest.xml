<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="6" failures="1" skipped="0" tests="8" time="24.599" timestamp="2025-07-24T13:39:14.401012-04:00" hostname="rocm-socm"><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_dependency_injection_container" time="0.006"><error message="failed on setup with &quot;TypeError: Model.__init__() got an unexpected keyword argument 'id'&quot;">tests/integration/test_hexagonal_architecture.py:55: in mock_ml_training
    mock_model = Model(
E   TypeError: Model.__init__() got an unexpected keyword argument 'id'</error></testcase><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_interface_based_architecture" time="0.001"><error message="failed on setup with &quot;TypeError: Model.__init__() got an unexpected keyword argument 'id'&quot;">tests/integration/test_hexagonal_architecture.py:55: in mock_ml_training
    mock_model = Model(
E   TypeError: Model.__init__() got an unexpected keyword argument 'id'</error></testcase><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_experiment_tracking_integration" time="0.001"><error message="failed on setup with &quot;TypeError: Model.__init__() got an unexpected keyword argument 'id'&quot;">tests/integration/test_hexagonal_architecture.py:55: in mock_ml_training
    mock_model = Model(
E   TypeError: Model.__init__() got an unexpected keyword argument 'id'</error></testcase><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_model_registry_integration" time="0.001"><error message="failed on setup with &quot;TypeError: Model.__init__() got an unexpected keyword argument 'id'&quot;">tests/integration/test_hexagonal_architecture.py:55: in mock_ml_training
    mock_model = Model(
E   TypeError: Model.__init__() got an unexpected keyword argument 'id'</error></testcase><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_error_handling" time="0.001"><error message="failed on setup with &quot;TypeError: Model.__init__() got an unexpected keyword argument 'id'&quot;">tests/integration/test_hexagonal_architecture.py:55: in mock_ml_training
    mock_model = Model(
E   TypeError: Model.__init__() got an unexpected keyword argument 'id'</error></testcase><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_domain_service_refactoring" time="0.027"><failure message="AssertionError: Regex pattern did not match.&#10; Regex: 'Model version 1 not found'&#10; Input: 'Variant percentages must sum to 100%, got 50.0%'">tests/integration/test_hexagonal_architecture.py:307: in test_domain_service_refactoring
    await ab_service.create_test(config, created_by="test_user")
src/anomaly_detection/domain/services/ab_testing_service.py:215: in create_test
    await self._validate_test_config(config)
src/anomaly_detection/domain/services/ab_testing_service.py:244: in _validate_test_config
    raise ValueError(f"Variant percentages must sum to 100%, got {total_percentage}%")
E   ValueError: Variant percentages must sum to 100%, got 50.0%

During handling of the above exception, another exception occurred:
tests/integration/test_hexagonal_architecture.py:306: in test_domain_service_refactoring
    with pytest.raises(ValueError, match="Model version 1 not found"):
E   AssertionError: Regex pattern did not match.
E    Regex: 'Model version 1 not found'
E    Input: 'Variant percentages must sum to 100%, got 50.0%'</failure></testcase><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_stub_implementations_available" time="0.092" /><testcase classname="tests.integration.test_hexagonal_architecture.TestHexagonalArchitecture" name="test_stub_functionality" time="0.001"><error message="failed on setup with &quot;AttributeError: 'dict' object has no attribute 'feature_names'&quot;">tests/integration/test_hexagonal_architecture.py:43: in sample_dataset
    return Dataset(
&lt;string&gt;:8: in __init__
    ???
src/anomaly_detection/domain/entities/dataset.py:75: in __post_init__
    if self.metadata.feature_names is None:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'dict' object has no attribute 'feature_names'</error></testcase></testsuite></testsuites>