apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: anomaly-detection-ingress
  namespace: anomaly-detection
  labels:
    app.kubernetes.io/name: anomaly-detection
    app.kubernetes.io/component: ingress
  annotations:
    # Nginx ingress controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Request size limits
    nginx.ingress.kubernetes.io/client-max-body-size: "100m"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options DENY;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    
    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
spec:
  tls:
  - hosts:
    - anomaly-detection.company.com
    - api.anomaly-detection.company.com
    secretName: anomaly-detection-tls
  rules:
  - host: anomaly-detection.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: anomaly-detection-api
            port:
              number: 8000
  - host: api.anomaly-detection.company.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: anomaly-detection-api
            port:
              number: 8000
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: anomaly-detection-api
            port:
              number: 8000
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: anomaly-detection-api
            port:
              number: 8000
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: anomaly-detection-api
            port:
              number: 8000
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: anomaly-detection-api
            port:
              number: 8000