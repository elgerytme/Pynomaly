apiVersion: v1
kind: Service
metadata:
  name: anomaly-detection-api
  namespace: anomaly-detection
  labels:
    app.kubernetes.io/name: anomaly-detection
    app.kubernetes.io/component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: anomaly-detection
    app.kubernetes.io/component: api

---
apiVersion: v1
kind: Service
metadata:
  name: anomaly-detection-worker
  namespace: anomaly-detection
  labels:
    app.kubernetes.io/name: anomaly-detection
    app.kubernetes.io/component: worker
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9091
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: anomaly-detection
    app.kubernetes.io/component: worker

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: anomaly-detection
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: anomaly-detection
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: anomaly-detection
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/component: streaming
spec:
  type: ClusterIP
  ports:
  - port: 9092
    targetPort: 9092
    protocol: TCP
    name: kafka
  selector:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/component: streaming