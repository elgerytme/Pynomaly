apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-detection
  labels:
    app: pynomaly-detection
    version: v0.2.0
automountServiceAccountToken: true
imagePullSecrets:
- name: pynomaly-registry-secret

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pynomaly-detection-role
  labels:
    app: pynomaly-detection
    version: v0.2.0
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pynomaly-detection-rolebinding
  labels:
    app: pynomaly-detection
    version: v0.2.0
subjects:
- kind: ServiceAccount
  name: pynomaly-detection
  namespace: default
roleRef:
  kind: Role
  name: pynomaly-detection-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pynomaly-detection-cluster-role
  labels:
    app: pynomaly-detection
    version: v0.2.0
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pynomaly-detection-cluster-rolebinding
  labels:
    app: pynomaly-detection
    version: v0.2.0
subjects:
- kind: ServiceAccount
  name: pynomaly-detection
  namespace: default
roleRef:
  kind: ClusterRole
  name: pynomaly-detection-cluster-role
  apiGroup: rbac.authorization.k8s.io