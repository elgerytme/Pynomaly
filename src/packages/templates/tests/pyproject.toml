[tool.poetry]
name = "template-tests"
version = "0.1.0"
description = "Comprehensive test suite for project templates"
authors = ["Template Team <templates@company.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
test_utilities = { path = "../../../shared/test_utilities" }

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
ruff = "^0.1.11"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "N", "W", "D", "UP", "S", "B", "A", "C4", "T20", "SIM", "RET"]
ignore = ["D100", "D104", "D107", "D212", "D213"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --cov=templates --cov-report=term-missing --cov-report=xml --cov-report=html"
testpaths = ["unit", "integration", "e2e", "performance"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests for individual template components",
    "integration: Integration tests for template system",
    "e2e: End-to-end template generation tests",
    "performance: Performance tests for template processing",
    "slow: Slow running tests",
    "template_validation: Template validation tests",
    "template_generation: Template generation tests",
    "template_consistency: Template consistency tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["../"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/.pytest_cache/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
fail_under = 95
precision = 2
show_missing = true
skip_covered = false
skip_empty = true

[tool.coverage.html]
directory = "htmlcov"
title = "Template Tests Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"