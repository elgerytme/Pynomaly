"""Page routes."""

from fastapi import APIRouter, Depends, Request
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates
from sqlalchemy.ext.asyncio import AsyncSession

from {{package_name}}.db.session import get_db
from {{package_name}}.services import item as item_service

router = APIRouter()
templates = Jinja2Templates(directory="src/{{package_name}}/templates")


@router.get("/", response_class=HTMLResponse)
async def home(request: Request):
    """Home page."""
    return templates.TemplateResponse(
        "pages/home.html",
        {
            "request": request,
            "title": "Home",
        },
    )


@router.get("/about", response_class=HTMLResponse)
async def about(request: Request):
    """About page."""
    return templates.TemplateResponse(
        "pages/about.html",
        {
            "request": request,
            "title": "About",
        },
    )


@router.get("/items", response_class=HTMLResponse)
async def items(
    request: Request,
    db: AsyncSession = Depends(get_db),
):
    """Items page."""
    items = await item_service.get_multi(db)
    
    return templates.TemplateResponse(
        "pages/items.html",
        {
            "request": request,
            "title": "Items",
            "items": items,
        },
    )


@router.get("/items/{item_id}", response_class=HTMLResponse)
async def item_detail(
    request: Request,
    item_id: int,
    db: AsyncSession = Depends(get_db),
):
    """Item detail page."""
    item = await item_service.get(db, id=item_id)
    
    if not item:
        return templates.TemplateResponse(
            "pages/404.html",
            {"request": request},
            status_code=404,
        )
    
    return templates.TemplateResponse(
        "pages/item_detail.html",
        {
            "request": request,
            "title": item.title,
            "item": item,
        },
    )


@router.get("/dashboard", response_class=HTMLResponse)
async def dashboard(request: Request):
    """Dashboard page."""
    return templates.TemplateResponse(
        "pages/dashboard.html",
        {
            "request": request,
            "title": "Dashboard",
        },
    )