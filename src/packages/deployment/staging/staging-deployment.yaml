apiVersion: v1
kind: Namespace
metadata:
  name: hexagonal-staging
  labels:
    environment: staging
    project: hexagonal-architecture
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-quality-staging
  namespace: hexagonal-staging
  labels:
    app: data-quality
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-quality
      environment: staging
  template:
    metadata:
      labels:
        app: data-quality
        environment: staging
    spec:
      containers:
      - name: data-quality
        image: hexagonal-architecture/data-quality:staging
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: LOG_LEVEL
          value: "DEBUG"
        - name: ENABLE_METRICS
          value: "true"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: data-quality-service
  namespace: hexagonal-staging
  labels:
    app: data-quality
    environment: staging
spec:
  selector:
    app: data-quality
    environment: staging
  ports:
  - port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-learning-staging
  namespace: hexagonal-staging
  labels:
    app: machine-learning
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: machine-learning
      environment: staging
  template:
    metadata:
      labels:
        app: machine-learning
        environment: staging
    spec:
      containers:
      - name: machine-learning
        image: hexagonal-architecture/machine-learning:staging
        ports:
        - containerPort: 8001
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: LOG_LEVEL
          value: "DEBUG"
        - name: MODEL_CACHE_SIZE
          value: "100"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 45
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: machine-learning-service
  namespace: hexagonal-staging
  labels:
    app: machine-learning
    environment: staging
spec:
  selector:
    app: machine-learning
    environment: staging
  ports:
  - port: 80
    targetPort: 8001
    name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-staging
  namespace: hexagonal-staging
  labels:
    app: mlops
    environment: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlops
      environment: staging
  template:
    metadata:
      labels:
        app: mlops
        environment: staging
    spec:
      containers:
      - name: mlops
        image: hexagonal-architecture/mlops:staging
        ports:
        - containerPort: 8002
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PIPELINE_WORKERS
          value: "4"
        resources:
          requests:
            memory: "384Mi"
            cpu: "300m"
          limits:
            memory: "768Mi"
            cpu: "600m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mlops-service
  namespace: hexagonal-staging
  labels:
    app: mlops
    environment: staging
spec:
  selector:
    app: mlops
    environment: staging
  ports:
  - port: 80
    targetPort: 8002
    name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anomaly-detection-staging
  namespace: hexagonal-staging
  labels:
    app: anomaly-detection
    environment: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: anomaly-detection
      environment: staging
  template:
    metadata:
      labels:
        app: anomaly-detection
        environment: staging
    spec:
      containers:
      - name: anomaly-detection
        image: hexagonal-architecture/anomaly-detection:staging
        ports:
        - containerPort: 8003
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DETECTION_THRESHOLD
          value: "0.95"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8003
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: anomaly-detection-service
  namespace: hexagonal-staging
  labels:
    app: anomaly-detection
    environment: staging
spec:
  selector:
    app: anomaly-detection
    environment: staging
  ports:
  - port: 80
    targetPort: 8003
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: staging-ingress
  namespace: hexagonal-staging
  labels:
    environment: staging
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: staging.hexagonal-arch.local
    http:
      paths:
      - path: /data-quality
        pathType: Prefix
        backend:
          service:
            name: data-quality-service
            port:
              number: 80
      - path: /machine-learning
        pathType: Prefix
        backend:
          service:
            name: machine-learning-service
            port:
              number: 80
      - path: /mlops
        pathType: Prefix
        backend:
          service:
            name: mlops-service
            port:
              number: 80
      - path: /anomaly-detection
        pathType: Prefix
        backend:
          service:
            name: anomaly-detection-service
            port:
              number: 80