apiVersion: apps/v1
kind: Deployment
metadata:
  name: anomaly-detection-service
  labels:
    app: anomaly-detection
    component: service
    part-of: hexagonal-architecture
spec:
  replicas: 2
  selector:
    matchLabels:
      app: anomaly-detection
      component: service
  template:
    metadata:
      labels:
        app: anomaly-detection
        component: service
        part-of: hexagonal-architecture
    spec:
      containers:
      - name: anomaly-detection
        image: hexagonal-architecture/anomaly-detection:latest
        ports:
        - containerPort: 8007
          name: http
        env:
        - name: ANOMALY_DETECTION_ENVIRONMENT
          value: "kubernetes"
        - name: ANOMALY_DETECTION_STORAGE_PATH
          value: "/app/data"
        - name: ANOMALY_DETECTION_LOG_LEVEL
          value: "INFO"
        - name: ANOMALY_DETECTION_ENABLE_CACHING
          value: "true"
        - name: ANOMALY_DETECTION_CACHE_TTL
          value: "3600"
        volumeMounts:
        - name: models-storage
          mountPath: /app/data/models
        - name: results-storage
          mountPath: /app/data/detection_results
        - name: cache-storage
          mountPath: /app/data/cache
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "1.5Gi"
            cpu: "750m"
          limits:
            memory: "3Gi"
            cpu: "1500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: anomaly-detection-models-storage
      - name: results-storage
        persistentVolumeClaim:
          claimName: anomaly-detection-results-storage
      - name: cache-storage
        persistentVolumeClaim:
          claimName: anomaly-detection-cache-storage
      - name: logs
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anomaly-detection-streaming
  labels:
    app: anomaly-detection
    component: streaming
    part-of: hexagonal-architecture
spec:
  replicas: 2
  selector:
    matchLabels:
      app: anomaly-detection
      component: streaming
  template:
    metadata:
      labels:
        app: anomaly-detection
        component: streaming
        part-of: hexagonal-architecture
    spec:
      containers:
      - name: anomaly-detection-streaming
        image: hexagonal-architecture/anomaly-detection:latest
        ports:
        - containerPort: 8007
          name: http
        env:
        - name: ANOMALY_DETECTION_ENVIRONMENT
          value: "kubernetes"
        - name: ANOMALY_DETECTION_SERVICE_MODE
          value: "streaming"
        - name: ANOMALY_DETECTION_STORAGE_PATH
          value: "/app/data"
        - name: ANOMALY_DETECTION_LOG_LEVEL
          value: "INFO"
        - name: ANOMALY_DETECTION_ENABLE_CACHING
          value: "true"
        - name: ANOMALY_DETECTION_STREAMING_BUFFER_SIZE
          value: "1000"
        volumeMounts:
        - name: models-storage
          mountPath: /app/data/models
          readOnly: true
        - name: streaming-results-storage
          mountPath: /app/data/detection_results
        - name: cache-storage
          mountPath: /app/data/cache
        - name: logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: anomaly-detection-models-storage
      - name: streaming-results-storage
        persistentVolumeClaim:
          claimName: anomaly-detection-streaming-results-storage
      - name: cache-storage
        persistentVolumeClaim:
          claimName: anomaly-detection-cache-storage
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: anomaly-detection-service
  labels:
    app: anomaly-detection
    component: service
    part-of: hexagonal-architecture
spec:
  selector:
    app: anomaly-detection
    component: service
  ports:
  - name: http
    port: 8007
    targetPort: http
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: anomaly-detection-streaming-service
  labels:
    app: anomaly-detection
    component: streaming
    part-of: hexagonal-architecture
spec:
  selector:
    app: anomaly-detection
    component: streaming
  ports:
  - name: http
    port: 8008
    targetPort: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: anomaly-detection-models-storage
  labels:
    app: anomaly-detection
    component: models-storage
    part-of: hexagonal-architecture
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: anomaly-detection-results-storage
  labels:
    app: anomaly-detection
    component: results-storage
    part-of: hexagonal-architecture
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: anomaly-detection-streaming-results-storage
  labels:
    app: anomaly-detection
    component: streaming-results-storage
    part-of: hexagonal-architecture
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: anomaly-detection-cache-storage
  labels:
    app: anomaly-detection
    component: cache-storage
    part-of: hexagonal-architecture
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi