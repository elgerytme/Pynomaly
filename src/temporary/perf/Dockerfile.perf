FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    htop \
    procps \
    psmisc \
    sysstat \
    time \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements files
COPY requirements.txt pyproject.toml ./

# Copy performance testing configuration
COPY perf/pytest.ini.perf ./pytest.ini

# Install core dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Install performance testing dependencies
RUN pip install --no-cache-dir \
    pytest-benchmark==4.0.0 \
    pytest-mock==3.12.0 \
    pytest-timeout==2.3.0 \
    pytest-xdist==3.6.0 \
    pytest-cov==6.0.0 \
    pytest-asyncio==0.24.0 \
    psutil==6.1.1 \
    memory-profiler==0.61.0 \
    py-spy==0.3.14 \
    numpy==1.26.0 \
    pandas==2.2.3 \
    scipy==1.15.0 \
    scikit-learn==1.6.0 \
    structlog==24.4.0 \
    pydantic==2.10.4

# Install pynomaly dependencies
RUN pip install --no-cache-dir \
    pyod==2.0.5 \
    polars==1.19.0 \
    dependency-injector==4.42.0 \
    networkx==3.0

# Copy source code
COPY src/ src/
COPY perf/ perf/

# Install package in development mode
RUN pip install -e .

# Set environment variables for performance testing
ENV PYTHONPATH=/app/src
ENV PYTEST_CURRENT_TEST=""
ENV PERF_TESTING=true
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Optimize Python for performance testing
ENV PYTHONOPTIMIZE=1
ENV PYTHONHASHSEED=0

# Create performance test directories
RUN mkdir -p /app/perf/results /app/perf/artifacts /app/perf/reports

# Set resource limits (will be overridden by docker-compose)
ENV PERF_CPU_LIMIT=2
ENV PERF_MEMORY_LIMIT=4G

# Create non-root user for security
RUN groupadd -r perftest && useradd -r -g perftest perftest
RUN chown -R perftest:perftest /app
USER perftest

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD python -c "import pynomaly; print('OK')" || exit 1

# Default command for performance testing
CMD ["python", "-m", "pytest", "perf/tests/", "-v", "--benchmark-only", "--benchmark-json=/app/perf/results/benchmark_results.json"]
