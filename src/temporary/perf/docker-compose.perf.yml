version: '3.8'

services:
  # Performance testing service with fixed CPU/RAM limits
  pynomaly-perf:
    build:
      context: ..
      dockerfile: perf/Dockerfile.perf
    volumes:
      - ../src:/app/src:ro
      - ../tests:/app/tests:ro
      - ../perf:/app/perf:rw
      - ./results:/app/perf/results:rw
      - ./artifacts:/app/perf/artifacts:rw
    environment:
      - PYTHONPATH=/app/src
      - PERF_TESTING=true
      - PYTEST_CURRENT_TEST=""
      - TESTING=true
      - PYTHONUNBUFFERED=1
      # Performance testing environment variables
      - PERF_BASELINE_PATH=/app/perf/baselines.json
      - PERF_RESULTS_PATH=/app/perf/results
      - PERF_ARTIFACTS_PATH=/app/perf/artifacts
      - BENCHMARK_SAVE_DATA=true
      - BENCHMARK_SKIP_SAVE=false
      - BENCHMARK_COMPARE_FAIL=mean:5%,median:5%
    # Fixed resource limits for consistent performance testing
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    # CPU quota and period for more precise control
    cpus: 2.0
    mem_limit: 4G
    mem_reservation: 2G
    networks:
      - pynomaly-perf-network
    command: >
      sh -c "
        echo 'Performance Testing Environment Setup' &&
        echo 'CPU Limit: 2 cores' &&
        echo 'Memory Limit: 4GB' &&
        echo 'Starting performance tests...' &&
        python -m pytest perf/tests/ -v
          --benchmark-only
          --benchmark-warmup=on
          --benchmark-warmup-iterations=5
          --benchmark-min-rounds=10
          --benchmark-max-time=300
          --benchmark-sort=median
          --benchmark-json=/app/perf/results/benchmark_results.json
          --benchmark-save-data
          --benchmark-compare-fail=mean:20%,median:20%
          --tb=short
          --maxfail=1
          -x
      "

  # Performance monitoring service
  perf-monitor:
    build:
      context: ..
      dockerfile: perf/Dockerfile.perf
    volumes:
      - ../src:/app/src:ro
      - ../perf:/app/perf:rw
      - ./results:/app/perf/results:rw
      - ./artifacts:/app/perf/artifacts:rw
    environment:
      - PYTHONPATH=/app/src
      - PERF_TESTING=true
      - MONITORING_MODE=true
    depends_on:
      - pynomaly-perf
    networks:
      - pynomaly-perf-network
    command: >
      sh -c "
        echo 'Performance Monitoring Service' &&
        sleep 5 &&
        python perf/scripts/monitor_performance.py
      "

  # Baseline comparison service  
  perf-baseline:
    build:
      context: ..
      dockerfile: perf/Dockerfile.perf
    volumes:
      - ../src:/app/src:ro
      - ../perf:/app/perf:rw
      - ./results:/app/perf/results:rw
      - ./artifacts:/app/perf/artifacts:rw
    environment:
      - PYTHONPATH=/app/src
      - PERF_TESTING=true
      - BASELINE_MODE=true
    depends_on:
      - pynomaly-perf
    networks:
      - pynomaly-perf-network
    command: >
      sh -c "
        echo 'Baseline Comparison Service' &&
        sleep 10 &&
        python perf/scripts/compare_baselines.py
      "

  # Resource monitoring
  resource-monitor:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - pynomaly-perf-network

networks:
  pynomaly-perf-network:
    driver: bridge
