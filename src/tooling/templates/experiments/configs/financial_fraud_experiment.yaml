# Financial Fraud Detection Experiment Configuration
# Specialized template for banking and financial services anomaly detection

metadata:
  name: "financial_fraud_detection_experiment"
  version: "1.0.0"
  description: "Comprehensive fraud detection experiment for financial transactions"
  domain: "financial_services"
  use_case: "fraud_detection"
  compliance: ["AML", "KYC", "SAR", "PCI_DSS"]
  created_by: "fraud_team"
  created_at: "2025-06-24"
  tags: ["fraud", "banking", "compliance", "real_time"]

# Dataset configuration for financial data
dataset:
  source:
    type: "file"
    path: "data/banking_transactions.csv"
    format: "csv"

    # Production database connection (commented for security)
    # database:
    #   connection_string: "postgresql://user:pass@host:5432/fraud_db"
    #   query: |
    #     SELECT transaction_id, customer_id, amount, timestamp,
    #            merchant_category, location, is_fraudulent
    #     FROM transactions
    #     WHERE timestamp >= NOW() - INTERVAL '6 months'

  properties:
    target_column: "is_fraudulent"
    feature_columns:
      - "amount"
      - "hour"
      - "day_of_week"
      - "merchant_category"
      - "location_risk_score"
      - "customer_age"
      - "account_age_days"
      - "transaction_frequency_1h"
      - "transaction_frequency_24h"
    exclude_columns: ["transaction_id", "customer_id", "raw_timestamp"]
    datetime_columns: ["timestamp"]
    categorical_columns: ["merchant_category", "location_country"]

    # Financial-specific data properties
    financial_properties:
      currency: "USD"
      amount_column: "amount"
      timestamp_column: "timestamp"
      customer_id_column: "customer_id"
      merchant_columns: ["merchant_id", "merchant_category"]
      location_columns: ["location_country", "location_city"]

  validation:
    check_missing: true
    check_duplicates: true
    check_dtypes: true
    check_target_distribution: true
    min_samples: 10000
    max_missing_percent: 5.0

    # Financial-specific validations
    financial_validation:
      check_negative_amounts: true
      check_currency_consistency: true
      check_timestamp_order: true
      check_business_rules:
        max_daily_amount: 50000
        max_single_transaction: 25000
        valid_merchant_categories: ["grocery", "gas", "restaurant", "retail", "online"]

  splitting:
    method: "temporal"  # Critical for fraud detection
    temporal:
      datetime_column: "timestamp"
      train_end_date: "2024-10-01"
      validation_end_date: "2024-11-01"
      test_end_date: "2024-12-01"

    # Ensure no data leakage in fraud detection
    leakage_prevention:
      customer_isolation: true  # Same customer not in train/test
      temporal_gap: "7 days"   # Gap between train/test periods

# Financial fraud preprocessing
preprocessing:
  feature_engineering:
    enabled: true
    steps:
      # Financial-specific missing value handling
      - type: "missing_value_imputation"
        strategy: "median"
        financial_rules:
          amount: "zero_fill"  # Missing amounts treated as $0
          merchant_category: "unknown_category"
          location: "domestic_default"

      # Fraud-specific outlier treatment
      - type: "outlier_treatment"
        method: "financial_rules"
        rules:
          amount:
            max_daily_limit: 50000
            max_single_transaction: 25000
            negative_amounts: "flag_as_fraud"
          frequency:
            max_transactions_per_minute: 10
            max_transactions_per_hour: 100

      # Financial data scaling
      - type: "scaling"
        method: "robust"  # Robust to outliers in financial data
        per_feature_scaling:
          amount: "log_transform"  # Log transform for amount
          frequency_features: "minmax"
          risk_scores: "standard"

      # Financial categorical encoding
      - type: "encoding"
        categorical_method: "target"  # Target encoding for high-cardinality
        handle_unknown: "fraud_risk_score"  # Unknown categories get risk score
        high_cardinality_threshold: 50

      # Financial feature selection
      - type: "feature_selection"
        method: "fraud_relevance"
        criteria:
          - "correlation_with_fraud"
          - "business_importance"
          - "regulatory_requirement"
        min_fraud_correlation: 0.05

  # Advanced financial feature engineering
  advanced:
    # Time-based fraud patterns
    time_series:
      enabled: true
      lag_features: [1, 5, 15, 60]  # minutes
      rolling_features:
        windows: [60, 1440, 10080]  # 1hr, 1day, 1week in minutes
        statistics: ["count", "sum", "mean", "std", "max"]

      # Fraud-specific time features
      fraud_time_features:
        weekend_indicator: true
        business_hours_indicator: true
        night_time_risk: true
        holiday_indicator: true
        rush_hour_indicator: true

    # Customer behavior profiling
    customer_profiling:
      enabled: true
      features:
        - "historical_transaction_patterns"
        - "spending_velocity_changes"
        - "location_deviation_score"
        - "merchant_diversity_score"
        - "time_pattern_deviation"

      # Behavioral anomaly detection
      behavioral_anomalies:
        location_outliers: true
        amount_outliers: true
        timing_outliers: true
        frequency_outliers: true

    # Network analysis features
    network_analysis:
      enabled: true
      features:
        - "merchant_risk_propagation"
        - "customer_similarity_networks"
        - "transaction_graph_features"

      # Graph-based fraud detection
      graph_features:
        centrality_measures: ["degree", "betweenness", "eigenvector"]
        community_detection: true
        anomalous_connections: true

# Fraud detection algorithms
algorithms:
  # Primary: Isolation Forest (excellent for fraud)
  - name: "IsolationForest"
    enabled: true
    implementation: "sklearn"
    parameters:
      contamination: 0.02  # Expected fraud rate
      n_estimators: 200
      max_samples: 0.8
      max_features: 0.8
      bootstrap: false
      random_state: 42
      n_jobs: -1

    hyperparameter_tuning:
      enabled: true
      method: "bayesian"
      cv_folds: 5
      scoring: "average_precision"  # Better for imbalanced fraud data
      n_calls: 50
      parameters:
        contamination: [0.005, 0.05]  # 0.5% to 5% fraud rate
        n_estimators: [100, 500]
        max_samples: [0.5, 1.0]
        max_features: [0.5, 1.0]

  # Secondary: Local Outlier Factor
  - name: "LocalOutlierFactor"
    enabled: true
    implementation: "sklearn"
    parameters:
      contamination: 0.02
      n_neighbors: 30
      algorithm: "auto"
      leaf_size: 30
      metric: "manhattan"  # Good for mixed financial data
      novelty: true
      n_jobs: -1

    hyperparameter_tuning:
      enabled: true
      method: "grid_search"
      cv_folds: 5
      scoring: "average_precision"
      parameters:
        contamination: [0.01, 0.02, 0.03, 0.05]
        n_neighbors: [10, 20, 30, 50]
        metric: ["manhattan", "euclidean", "cosine"]

  # Advanced: Autoencoder for complex patterns
  - name: "Autoencoder"
    enabled: true
    implementation: "custom"
    parameters:
      hidden_layers: [64, 32, 16, 32, 64]
      activation: "relu"
      loss: "mse"
      optimizer: "adam"
      learning_rate: 0.001
      batch_size: 128
      epochs: 100
      contamination: 0.02
      random_state: 42

    hyperparameter_tuning:
      enabled: true
      method: "optuna"
      n_trials: 100
      parameters:
        hidden_layers:
          - [32, 16, 32]
          - [64, 32, 16, 32, 64]
          - [128, 64, 32, 64, 128]
        learning_rate: [0.0001, 0.01]
        batch_size: [64, 128, 256]

# Financial fraud ensemble
ensemble:
  enabled: true
  methods:
    - type: "voting"
      strategy: "soft"
      weights: [0.4, 0.3, 0.3]  # Weight Isolation Forest higher

    - type: "stacking"
      meta_learner: "LogisticRegression"
      cv_folds: 5
      meta_features: ["prediction_confidence", "algorithm_consensus"]

  # Fraud-specific ensemble selection
  selection:
    method: "precision_focused"  # Minimize false positives
    min_precision: 0.8
    target_recall: 0.6

# Fraud-specific evaluation
evaluation:
  cross_validation:
    enabled: true
    method: "time_series_split"  # Respects temporal nature
    n_splits: 5
    max_train_size: null
    test_size: 86400  # 1 day in seconds
    gap: 3600  # 1 hour gap

  metrics:
    primary: "average_precision"  # Best for imbalanced fraud data
    secondary:
      - "precision"
      - "recall"
      - "f1_score"
      - "auc_roc"
      - "false_positive_rate"
      - "detection_rate_at_fpr_001"  # Detection rate at 0.1% FPR

    # Fraud-specific metrics
    fraud_metrics:
      - "precision_at_k"  # Precision in top K predictions
      - "alert_rate"      # Percentage of transactions flagged
      - "investigation_efficiency"  # True fraud / total alerts
      - "dollar_value_caught"       # $ amount of fraud caught
      - "dollar_value_missed"       # $ amount of fraud missed

  # Business impact evaluation
  business_impact:
    enabled: true
    cost_model:
      false_positive_cost: 10    # Cost to investigate false positive
      false_negative_cost: 500   # Average fraud amount
      true_positive_benefit: 500 # Fraud amount saved
      investigation_time_hours: 0.5
      analyst_hourly_rate: 50

    # Alert volume analysis
    alert_analysis:
      max_daily_alerts: 1000
      target_precision: 0.8
      acceptable_recall: 0.7

# Real-time deployment considerations
deployment:
  real_time:
    enabled: true
    latency_requirements:
      max_prediction_time_ms: 100
      max_feature_computation_time_ms: 50

    # Streaming configuration
    streaming:
      kafka_topics: ["transactions", "customer_updates"]
      batch_size: 100
      processing_window_seconds: 5

    # Model serving
    serving:
      platform: "kubernetes"
      replicas: 3
      cpu_request: "500m"
      memory_request: "1Gi"
      auto_scaling: true

  # Model monitoring
  monitoring:
    enabled: true
    drift_detection:
      feature_drift_threshold: 0.1
      prediction_drift_threshold: 0.05
      alert_on_drift: true

    performance_monitoring:
      track_precision: true
      track_recall: true
      track_latency: true
      alert_thresholds:
        precision_drop: 0.1
        recall_drop: 0.15
        latency_increase_ms: 50

# Compliance and governance
compliance:
  # Regulatory requirements
  regulatory:
    gdpr_compliant: true
    right_to_explanation: true
    data_retention_days: 2555  # 7 years
    audit_trail: true

  # Model explainability
  explainability:
    enabled: true
    methods: ["shap", "lime", "feature_importance"]
    global_explanations: true
    local_explanations: true
    explanation_storage: true

  # Bias and fairness
  fairness:
    enabled: true
    protected_attributes: ["customer_age", "location_country"]
    fairness_metrics: ["demographic_parity", "equalized_odds"]
    bias_threshold: 0.1

  # Documentation
  documentation:
    model_cards: true
    data_sheets: true
    algorithm_documentation: true
    validation_reports: true

# Security and privacy
security:
  # Data protection
  data_protection:
    encryption_at_rest: true
    encryption_in_transit: true
    pii_anonymization: true
    data_masking: true

  # Access controls
  access_control:
    role_based_access: true
    audit_logging: true
    secure_api_endpoints: true

  # Privacy preservation
  privacy:
    differential_privacy: false  # Can impact fraud detection accuracy
    federated_learning: false
    homomorphic_encryption: false

# Performance optimization
performance:
  # Resource optimization
  optimization:
    feature_caching: true
    model_caching: true
    parallel_processing: true
    gpu_acceleration: false  # Usually not needed for tree-based models

  # Scalability
  scalability:
    horizontal_scaling: true
    load_balancing: true
    database_optimization: true

  # Benchmarking
  benchmarking:
    datasets: ["small_1k", "medium_100k", "large_1m", "xlarge_10m"]
    performance_targets:
      small_1k: "< 1 second"
      medium_100k: "< 30 seconds"
      large_1m: "< 5 minutes"
      xlarge_10m: "< 30 minutes"

# Fraud-specific output configuration
output:
  results:
    save_models: true
    save_predictions: true
    save_probabilities: true
    save_explanations: true
    save_feature_importance: true

    # Fraud-specific outputs
    fraud_outputs:
      save_risk_scores: true
      save_alert_details: true
      save_investigation_notes: true
      save_feedback_loop_data: true

  reporting:
    enabled: true
    formats: ["html", "pdf"]
    fraud_reports:
      - "daily_fraud_summary"
      - "weekly_pattern_analysis"
      - "monthly_performance_review"
      - "quarterly_model_assessment"

    stakeholder_reports:
      fraud_analysts: ["detailed_technical"]
      compliance_team: ["regulatory_compliance"]
      executives: ["business_impact_summary"]
      it_operations: ["system_performance"]

# Integration with fraud systems
integrations:
  # Existing fraud systems
  fraud_systems:
    case_management:
      enabled: false
      system: "actimize"
      api_endpoint: "https://fraud-system/api/cases"

    transaction_monitoring:
      enabled: false
      system: "fiserv"
      real_time_scoring: true

    risk_management:
      enabled: false
      system: "sas"
      risk_score_integration: true

  # External data sources
  external_data:
    credit_bureaus:
      enabled: false
      providers: ["experian", "equifax", "transunion"]

    blacklists:
      enabled: true
      sources: ["internal", "industry_shared", "regulatory"]

    geolocation:
      enabled: true
      provider: "maxmind"
      risk_scoring: true
