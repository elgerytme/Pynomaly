apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit-service-account
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit-role
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - nodes
  - nodes/proxy
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit-role-binding
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-role
subjects:
- kind: ServiceAccount
  name: fluent-bit-service-account
  namespace: pynomaly-production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
        Health_Check  On

    [INPUT]
        Name              tail
        Path              /var/log/containers/*pynomaly*.log
        multiline.parser  docker, cri
        Tag               kube.pynomaly.*
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [INPUT]
        Name              tail
        Path              /var/log/containers/*postgres*.log
        multiline.parser  docker, cri
        Tag               kube.postgres.*
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [INPUT]
        Name              tail
        Path              /var/log/containers/*redis*.log
        multiline.parser  docker, cri
        Tag               kube.redis.*
        Mem_Buf_Limit     5MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Annotations         Off
        Labels              On

    [FILTER]
        Name                parser
        Match               kube.pynomaly.*
        Key_Name            log
        Parser              pynomaly_parser
        Reserve_Data        True

    [FILTER]
        Name                grep
        Match               kube.pynomaly.*
        Regex               log (ERROR|CRITICAL|WARNING)

    [OUTPUT]
        Name                 es
        Match                kube.pynomaly.*
        Host                 elasticsearch-service
        Port                 9200
        Index                pynomaly-logs
        Type                 _doc
        Logstash_Format      On
        Logstash_Prefix      pynomaly
        Logstash_DateFormat  %Y.%m.%d
        Retry_Limit          False

    [OUTPUT]
        Name                 es
        Match                kube.postgres.*
        Host                 elasticsearch-service
        Port                 9200
        Index                postgres-logs
        Type                 _doc
        Logstash_Format      On
        Logstash_Prefix      postgres
        Logstash_DateFormat  %Y.%m.%d
        Retry_Limit          False

    [OUTPUT]
        Name                 es
        Match                kube.redis.*
        Host                 elasticsearch-service
        Port                 9200
        Index                redis-logs
        Type                 _doc
        Logstash_Format      On
        Logstash_Prefix      redis
        Logstash_DateFormat  %Y.%m.%d
        Retry_Limit          False

  parsers.conf: |
    [PARSER]
        Name         pynomaly_parser
        Format       regex
        Regex        ^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?<level>\w+) - (?<message>.*)$
        Time_Key     timestamp
        Time_Format  %Y-%m-%d %H:%M:%S,%L

    [PARSER]
        Name         json
        Format       json
        Time_Key     time
        Time_Format  %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name         docker
        Format       json
        Time_Key     time
        Time_Format  %Y-%m-%dT%H:%M:%S.%L
        Time_Keep    On

    [PARSER]
        Name         cri
        Format       regex
        Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key     time
        Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
    app.kubernetes.io/version: "2.2"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluent-bit
      app.kubernetes.io/instance: production
      app.kubernetes.io/component: logging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fluent-bit
        app.kubernetes.io/instance: production
        app.kubernetes.io/component: logging
        app.kubernetes.io/version: "2.2"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2020"
        prometheus.io/path: "/api/v1/metrics/prometheus"
    spec:
      serviceAccountName: fluent-bit-service-account
      hostNetwork: false
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: fluent-bit
        image: fluent/fluent-bit:2.2.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 2020
          protocol: TCP
        env:
        - name: FLUENT_CONF
          value: /fluent-bit/etc/fluent-bit.conf
        - name: FLB_LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /fluent-bit/etc
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: etcmachineid
          mountPath: /etc/machine-id
          readOnly: true
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: fluent-bit-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: etcmachineid
        hostPath:
          path: /etc/machine-id
          type: File
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: fluent-bit-service
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 2020
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
    app.kubernetes.io/version: "8.11"
spec:
  serviceName: elasticsearch-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/instance: production
      app.kubernetes.io/component: logging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/instance: production
        app.kubernetes.io/component: logging
        app.kubernetes.io/version: "8.11"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      initContainers:
      - name: increase-vm-max-map
        image: busybox:1.36
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: elasticsearch:8.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 9200
          protocol: TCP
        - name: transport
          containerPort: 9300
          protocol: TCP
        env:
        - name: cluster.name
          value: "pynomaly-logs"
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: discovery.type
          value: "single-node"
        - name: ES_JAVA_OPTS
          value: "-Xms1g -Xmx1g"
        - name: xpack.security.enabled
          value: "false"
        - name: xpack.monitoring.collection.enabled
          value: "true"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /_cluster/health?wait_for_status=yellow&timeout=5s
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/instance: production
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "gp3-encrypted"
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 9200
    targetPort: http
    protocol: TCP
  - name: transport
    port: 9300
    targetPort: transport
    protocol: TCP
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 9200
    targetPort: http
    protocol: TCP
  - name: transport
    port: 9300
    targetPort: transport
    protocol: TCP
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
    app.kubernetes.io/version: "8.11"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
      app.kubernetes.io/instance: production
      app.kubernetes.io/component: logging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/instance: production
        app.kubernetes.io/component: logging
        app.kubernetes.io/version: "8.11"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kibana
        image: kibana:8.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 5601
          protocol: TCP
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch-service:9200"
        - name: SERVER_NAME
          value: "kibana.pynomaly.ai"
        - name: SERVER_BASEPATH
          value: "/kibana"
        - name: SERVER_REWRITEBASEPATH
          value: "true"
        - name: XPACK_MONITORING_ENABLED
          value: "true"
        - name: XPACK_SECURITY_ENABLED
          value: "false"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /kibana/api/status
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /kibana/api/status
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-service
  namespace: pynomaly-production
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 5601
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: logging
