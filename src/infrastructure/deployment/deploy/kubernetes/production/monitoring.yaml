apiVersion: v1
kind: ServiceMonitor
metadata:
  name: pynomaly-api-metrics
  namespace: pynomaly-production
  labels:
    app: pynomaly-api
    release: prometheus
spec:
  selector:
    matchLabels:
      app: pynomaly-api
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: pynomaly-alerts
  namespace: pynomaly-production
  labels:
    app: pynomaly
    prometheus: kube-prometheus
    role: alert-rules
spec:
  groups:
  - name: pynomaly.rules
    rules:
    - alert: Pynomaly API Down
      expr: up{job="pynomaly-api"} == 0
      for: 5m
      labels:
        severity: critical
        service: pynomaly-api
      annotations:
        summary: "Pynomaly API instance is down"
        description: "Pynomaly API has been down for more than 5 minutes."

    - alert: High Memory Usage
      expr: container_memory_usage_bytes{pod=~"pynomaly-.*"} / container_spec_memory_limit_bytes > 0.8
      for: 10m
      labels:
        severity: warning
        service: pynomaly
      annotations:
        summary: "High memory usage detected"
        description: "Container {{ $labels.container }} in pod {{ $labels.pod }} is using more than 80% of its memory limit."

    - alert: High CPU Usage
      expr: rate(container_cpu_usage_seconds_total{pod=~"pynomaly-.*"}[5m]) > 0.8
      for: 10m
      labels:
        severity: warning
        service: pynomaly
      annotations:
        summary: "High CPU usage detected"
        description: "Container {{ $labels.container }} in pod {{ $labels.pod }} is using more than 80% CPU."

    - alert: Pod Crash Looping
      expr: rate(kube_pod_container_status_restarts_total{pod=~"pynomaly-.*"}[1h]) > 0
      for: 5m
      labels:
        severity: critical
        service: pynomaly
      annotations:
        summary: "Pod is crash looping"
        description: "Pod {{ $labels.pod }} has restarted {{ $value }} times in the last hour."
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: pynomaly-production
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    [INPUT]
        Name              tail
        Path              /var/log/containers/pynomaly-*.log
        Parser            cri
        Tag               kube.*
        Refresh_Interval  5
        Mem_Buf_Limit     50MB

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off

    [OUTPUT]
        Name  es
        Match *
        Host  elasticsearch.logging.svc.cluster.local
        Port  9200
        Index pynomaly-logs
        Type  _doc
