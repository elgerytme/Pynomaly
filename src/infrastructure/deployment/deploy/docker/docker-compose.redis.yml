# Enhanced Redis Configuration for Production Caching (Issue #99)
# This docker-compose provides high-availability Redis setup with Sentinel, 
# monitoring, and production hardening features.

version: '3.8'

x-logging: &logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      tag: "{{.ImageName}}|{{.Name}}|{{.FullID}}"

x-security: &security
  security_opt:
    - no-new-privileges:true
  cap_drop:
    - ALL
  cap_add:
    - SETUID
    - SETGID
  read_only: true

services:
  #=============================================================================
  # Redis Master
  #=============================================================================
  redis-master:
    image: redis:7-alpine
    container_name: pynomaly-redis-master
    <<: [*logging, *security]
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secret_change_me}
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-redis_secret_change_me}
      --appendonly yes
      --save 900 1
      --save 300 10
      --save 60 10000
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 300
      --timeout 300
      --maxclients 10000
      --slowlog-log-slower-than 10000
      --notify-keyspace-events Ex
      --loglevel notice
      --logfile /var/log/redis/redis.log
      --dir /data
      --dbfilename dump.rdb
      --appendfilename appendonly.aof
      --appendfsync everysec
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
      --hash-max-ziplist-entries 512
      --hash-max-ziplist-value 64
      --list-max-ziplist-size -2
      --set-max-intset-entries 512
      --zset-max-ziplist-entries 128
      --zset-max-ziplist-value 64
      --activedefrag yes
      --active-defrag-threshold-lower 10
      --active-defrag-threshold-upper 100
      --latency-monitor-threshold 100
      --lazyfree-lazy-eviction yes
      --lazyfree-lazy-expire yes
      --io-threads 4
      --io-threads-do-reads yes
    volumes:
      - redis_master_data:/data
      - ./config/redis/redis-production.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_logs:/var/log/redis
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - redis-network
    labels:
      - "traefik.enable=false"
      - "monitoring.type=redis"
      - "monitoring.role=master"

  #=============================================================================
  # Redis Replica 1
  #=============================================================================
  redis-replica-1:
    image: redis:7-alpine
    container_name: pynomaly-redis-replica-1
    <<: [*logging, *security]
    restart: always
    ports:
      - "6380:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secret_change_me}
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-redis_secret_change_me}
      --replicaof redis-master 6379
      --masterauth ${REDIS_PASSWORD:-redis_secret_change_me}
      --appendonly yes
      --save ""
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 300
      --timeout 300
      --maxclients 10000
      --slowlog-log-slower-than 10000
      --loglevel notice
      --logfile /var/log/redis/redis.log
      --dir /data
      --appendfilename appendonly.aof
      --appendfsync everysec
      --replica-read-only yes
      --replica-lazy-flush yes
    volumes:
      - redis_replica_1_data:/data
      - redis_logs:/var/log/redis
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - redis-network
    depends_on:
      - redis-master
    labels:
      - "traefik.enable=false"
      - "monitoring.type=redis"
      - "monitoring.role=replica"

  #=============================================================================
  # Redis Replica 2
  #=============================================================================
  redis-replica-2:
    image: redis:7-alpine
    container_name: pynomaly-redis-replica-2
    <<: [*logging, *security]
    restart: always
    ports:
      - "6381:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secret_change_me}
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-redis_secret_change_me}
      --replicaof redis-master 6379
      --masterauth ${REDIS_PASSWORD:-redis_secret_change_me}
      --appendonly yes
      --save ""
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 300
      --timeout 300
      --maxclients 10000
      --slowlog-log-slower-than 10000
      --loglevel notice
      --logfile /var/log/redis/redis.log
      --dir /data
      --appendfilename appendonly.aof
      --appendfsync everysec
      --replica-read-only yes
      --replica-lazy-flush yes
    volumes:
      - redis_replica_2_data:/data
      - redis_logs:/var/log/redis
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - redis-network
    depends_on:
      - redis-master
    labels:
      - "traefik.enable=false"
      - "monitoring.type=redis"
      - "monitoring.role=replica"

  #=============================================================================
  # Redis Sentinel Nodes
  #=============================================================================
  redis-sentinel-1:
    image: redis:7-alpine
    container_name: pynomaly-redis-sentinel-1
    <<: [*logging, *security]
    restart: always
    ports:
      - "26379:26379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secret_change_me}
    command: >
      redis-sentinel /etc/redis/sentinel.conf
      --sentinel monitor mymaster redis-master 6379 2
      --sentinel auth-pass mymaster ${REDIS_PASSWORD:-redis_secret_change_me}
      --sentinel down-after-milliseconds mymaster 5000
      --sentinel parallel-syncs mymaster 1
      --sentinel failover-timeout mymaster 60000
      --bind 0.0.0.0
      --port 26379
      --loglevel notice
      --logfile /var/log/redis/sentinel.log
      --sentinel deny-scripts-reconfig yes
    volumes:
      - ./config/redis/sentinel.conf:/etc/redis/sentinel.conf:ro
      - redis_logs:/var/log/redis
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - redis-network
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    labels:
      - "traefik.enable=false"
      - "monitoring.type=redis-sentinel"

  redis-sentinel-2:
    image: redis:7-alpine
    container_name: pynomaly-redis-sentinel-2
    <<: [*logging, *security]
    restart: always
    ports:
      - "26380:26379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secret_change_me}
    command: >
      redis-sentinel /etc/redis/sentinel.conf
      --sentinel monitor mymaster redis-master 6379 2
      --sentinel auth-pass mymaster ${REDIS_PASSWORD:-redis_secret_change_me}
      --sentinel down-after-milliseconds mymaster 5000
      --sentinel parallel-syncs mymaster 1
      --sentinel failover-timeout mymaster 60000
      --bind 0.0.0.0
      --port 26379
      --loglevel notice
      --logfile /var/log/redis/sentinel.log
      --sentinel deny-scripts-reconfig yes
    volumes:
      - ./config/redis/sentinel.conf:/etc/redis/sentinel.conf:ro
      - redis_logs:/var/log/redis
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - redis-network
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    labels:
      - "traefik.enable=false"
      - "monitoring.type=redis-sentinel"

  redis-sentinel-3:
    image: redis:7-alpine
    container_name: pynomaly-redis-sentinel-3
    <<: [*logging, *security]
    restart: always
    ports:
      - "26381:26379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secret_change_me}
    command: >
      redis-sentinel /etc/redis/sentinel.conf
      --sentinel monitor mymaster redis-master 6379 2
      --sentinel auth-pass mymaster ${REDIS_PASSWORD:-redis_secret_change_me}
      --sentinel down-after-milliseconds mymaster 5000
      --sentinel parallel-syncs mymaster 1
      --sentinel failover-timeout mymaster 60000
      --bind 0.0.0.0
      --port 26379
      --loglevel notice
      --logfile /var/log/redis/sentinel.log
      --sentinel deny-scripts-reconfig yes
    volumes:
      - ./config/redis/sentinel.conf:/etc/redis/sentinel.conf:ro
      - redis_logs:/var/log/redis
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - redis-network
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    labels:
      - "traefik.enable=false"
      - "monitoring.type=redis-sentinel"

  #=============================================================================
  # Redis Monitoring (Redis Exporter for Prometheus)
  #=============================================================================
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: pynomaly-redis-exporter
    <<: *logging
    restart: always
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis-master:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_secret_change_me}
      - REDIS_EXPORTER_INCL_SYSTEM_METRICS=true
      - REDIS_EXPORTER_LOG_FORMAT=txt
    command: 
      - "--redis.addr=redis://redis-master:6379"
      - "--redis.password=${REDIS_PASSWORD:-redis_secret_change_me}"
      - "--include-system-metrics"
      - "--web.listen-address=0.0.0.0:9121"
      - "--web.telemetry-path=/metrics"
    networks:
      - redis-network
      - monitoring-network
    depends_on:
      - redis-master
    labels:
      - "traefik.enable=false"
      - "monitoring.type=redis-exporter"
      - "prometheus.scrape=true"
      - "prometheus.port=9121"
      - "prometheus.path=/metrics"

  #=============================================================================
  # Redis Commander (Web UI for Redis Management)
  #=============================================================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pynomaly-redis-commander
    <<: *logging
    restart: always
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=master:redis-master:6379:0:${REDIS_PASSWORD:-redis_secret_change_me},replica1:redis-replica-1:6379:0:${REDIS_PASSWORD:-redis_secret_change_me},replica2:redis-replica-2:6379:0:${REDIS_PASSWORD:-redis_secret_change_me}
      - HTTP_USER=admin
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin_change_me}
      - NO_LOG_DATA=true
    networks:
      - redis-network
    depends_on:
      - redis-master
      - redis-replica-1
      - redis-replica-2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis-commander.rule=Host(`redis.localhost`)"
      - "traefik.http.services.redis-commander.loadbalancer.server.port=8081"
      - "monitoring.type=redis-ui"

networks:
  redis-network:
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.0.0/16
  monitoring-network:
    external: true
    name: pynomaly_monitoring

volumes:
  redis_master_data:
    driver: local
    name: pynomaly_redis_master_data
  redis_replica_1_data:
    driver: local
    name: pynomaly_redis_replica_1_data
  redis_replica_2_data:
    driver: local
    name: pynomaly_redis_replica_2_data
  redis_logs:
    driver: local
    name: pynomaly_redis_logs
