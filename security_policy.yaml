# Security Policy Configuration
# Issue: #822 - Implement Security Scanning and Vulnerability Assessment

# Vulnerability thresholds
vulnerability_thresholds:
  max_critical_vulnerabilities: 0
  max_high_vulnerabilities: 0
  max_medium_vulnerabilities: 5
  max_low_vulnerabilities: 10

# License policy
license_policy:
  allowed_licenses:
    - "MIT"
    - "Apache-2.0"
    - "BSD-3-Clause"
    - "BSD-2-Clause"
    - "ISC"
    - "CC0-1.0"
  
  blocked_licenses:
    - "GPL-3.0"
    - "AGPL-3.0"
    - "LGPL-3.0"
    - "SSPL-1.0"
    - "BUSL-1.1"
  
  license_exceptions:
    # Packages with special license handling
    - package: "pygod"
      license: "BSD-2-Clause"
      reason: "Research license, approved for use"

# Blocked packages
blocked_packages:
  # Packages with known security issues
  - name: "urllib3"
    versions: ["<1.26.5"]
    reason: "CVE-2021-28363 - Proxy authorization header leakage"
  
  - name: "requests"
    versions: ["<2.27.1"]
    reason: "CVE-2022-23607 - Unintended proxy authentication leakage"
  
  - name: "pyyaml"
    versions: ["<5.4.1"]
    reason: "CVE-2020-14343 - Arbitrary code execution"
  
  - name: "pillow"
    versions: ["<8.1.1"]
    reason: "CVE-2021-25287 - Out-of-bounds read"

# Security scanning configuration
scanning:
  # Dependency scanning
  dependency_scanning:
    enabled: true
    sources:
      - "pyproject.toml"
      - "requirements.txt"
      - "requirements-*.txt"
    update_frequency: "daily"
    auto_fix: false
    
  # Static Application Security Testing (SAST)
  sast:
    enabled: true
    file_extensions: [".py", ".pyx", ".pyi"]
    exclude_paths:
      - "tests/"
      - "test_/"
      - "__pycache__/"
      - ".venv/"
      - "venv/"
      - "environments/"
    
    # Security patterns
    patterns:
      hardcoded_secrets:
        enabled: true
        severity: "HIGH"
        patterns:
          - 'password\s*=\s*[\'"][^\'"]+[\'"]'
          - 'api_key\s*=\s*[\'"][^\'"]+[\'"]'
          - 'secret\s*=\s*[\'"][^\'"]+[\'"]'
          - 'token\s*=\s*[\'"][^\'"]+[\'"]'
          - 'aws_access_key\s*=\s*[\'"][^\'"]+[\'"]'
          - 'aws_secret_key\s*=\s*[\'"][^\'"]+[\'"]'
      
      sql_injection:
        enabled: true
        severity: "HIGH"
        patterns:
          - 'execute\s*\(\s*[\'"].*%s.*[\'"]'
          - 'query\s*\(\s*f[\'"].*{.*}.*[\'"]'
          - 'cursor\.execute\s*\(\s*.*\+.*\)'
      
      command_injection:
        enabled: true
        severity: "HIGH"
        patterns:
          - 'os\.system\s*\(\s*.*\+.*\)'
          - 'subprocess\.call\s*\(\s*.*\+.*\)'
          - 'subprocess\.run\s*\(\s*.*\+.*\)'
          - 'eval\s*\(\s*.*input.*\)'
      
      path_traversal:
        enabled: true
        severity: "MEDIUM"
        patterns:
          - 'open\s*\(\s*.*\+.*\)'
          - 'file\s*\(\s*.*\+.*\)'
          - 'os\.path\.join\s*\(\s*.*input.*\)'
      
      crypto_issues:
        enabled: true
        severity: "MEDIUM"
        patterns:
          - 'hashlib\.md5\s*\('
          - 'hashlib\.sha1\s*\('
          - 'random\.random\s*\('
          - 'random\.randint\s*\('
      
      deserialization:
        enabled: true
        severity: "HIGH"
        patterns:
          - 'pickle\.loads\s*\('
          - 'pickle\.load\s*\('
          - 'yaml\.load\s*\('
          - 'marshal\.loads\s*\('
      
      xss_vulnerabilities:
        enabled: true
        severity: "MEDIUM"
        patterns:
          - 'render_template_string\s*\(\s*.*\+.*\)'
          - 'Markup\s*\(\s*.*\+.*\)'
          - 'safe\s*\(\s*.*\+.*\)'
  
  # License scanning
  license_scanning:
    enabled: true
    scan_dependencies: true
    scan_source_headers: true
    require_license_file: true
    
  # Container scanning (if using Docker)
  container_scanning:
    enabled: true
    base_image_policy: "official-only"
    vulnerability_scanning: true
    
  # Infrastructure as Code (IaC) scanning
  iac_scanning:
    enabled: true
    scan_terraform: true
    scan_kubernetes: true
    scan_docker_compose: true

# Compliance requirements
compliance:
  # OWASP Top 10 compliance
  owasp_top_10:
    enabled: true
    checks:
      - "A01_broken_access_control"
      - "A02_cryptographic_failures"
      - "A03_injection"
      - "A04_insecure_design"
      - "A05_security_misconfiguration"
      - "A06_vulnerable_components"
      - "A07_identification_authentication_failures"
      - "A08_software_data_integrity_failures"
      - "A09_security_logging_monitoring_failures"
      - "A10_server_side_request_forgery"
  
  # PCI DSS compliance (if handling payment data)
  pci_dss:
    enabled: false
    requirements: []
  
  # GDPR compliance (if handling personal data)
  gdpr:
    enabled: true
    data_protection_checks: true
    consent_management: true
    right_to_erasure: true

# Security headers and configurations
security_headers:
  required_headers:
    - "X-Content-Type-Options"
    - "X-Frame-Options"
    - "X-XSS-Protection"
    - "Content-Security-Policy"
    - "Strict-Transport-Security"
  
  content_security_policy:
    default_src: ["'self'"]
    script_src: ["'self'", "'unsafe-inline'"]
    style_src: ["'self'", "'unsafe-inline'"]
    img_src: ["'self'", "data:"]
    font_src: ["'self'"]
    connect_src: ["'self'"]

# API security
api_security:
  authentication:
    required: true
    methods: ["JWT", "API_KEY"]
    token_expiration: 3600
  
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_limit: 200
  
  input_validation:
    enabled: true
    max_request_size: "10MB"
    validate_json_schema: true
    sanitize_inputs: true
  
  cors:
    enabled: true
    allowed_origins: ["https://localhost:3000"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE"]
    allowed_headers: ["Content-Type", "Authorization"]

# Monitoring and alerting
monitoring:
  security_events:
    enabled: true
    log_level: "INFO"
    alert_on_critical: true
    alert_on_high: true
    alert_on_medium: false
    alert_on_low: false
  
  metrics:
    vulnerability_count: true
    scan_duration: true
    scan_success_rate: true
    policy_violations: true
  
  notifications:
    email:
      enabled: false
      recipients: []
    
    slack:
      enabled: false
      webhook_url: ""
    
    github:
      enabled: true
      create_issues: true
      label_issues: true

# Exception handling
exceptions:
  # Temporary exceptions for vulnerabilities
  vulnerability_exceptions:
    - vulnerability_id: "TEMP-001"
      package: "example-package"
      version: "1.0.0"
      reason: "False positive, code review confirmed safe"
      expiration: "2024-12-31"
      approved_by: "security-team"
  
  # Temporary exceptions for licenses
  license_exceptions:
    - package: "research-package"
      license: "Academic-License"
      reason: "Research use only, not distributed"
      expiration: "2024-12-31"
      approved_by: "legal-team"

# Reporting configuration
reporting:
  generate_sarif: true
  generate_json: true
  generate_html: true
  include_remediation: true
  include_references: true
  include_metrics: true
  
  # Report distribution
  distribution:
    save_to_file: true
    upload_to_s3: false
    send_email: false
    post_to_slack: false

# Quality gates
quality_gates:
  block_deployment_on_critical: true
  block_deployment_on_high: true
  block_deployment_on_policy_violation: true
  require_security_review: true
  
  # Thresholds for different environments
  environments:
    development:
      max_critical: 5
      max_high: 10
      max_medium: 20
      max_low: 50
    
    staging:
      max_critical: 2
      max_high: 5
      max_medium: 10
      max_low: 20
    
    production:
      max_critical: 0
      max_high: 0
      max_medium: 0
      max_low: 5

# Update policy
update_policy:
  vulnerability_database:
    update_frequency: "daily"
    auto_update: true
  
  security_policies:
    review_frequency: "monthly"
    approval_required: true
  
  dependencies:
    auto_update_security_patches: true
    require_approval_for_major_updates: true