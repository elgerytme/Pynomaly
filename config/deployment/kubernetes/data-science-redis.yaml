apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pynomaly-redis
  namespace: pynomaly-data-science
  labels:
    app: pynomaly
    component: redis
    tier: cache
spec:
  serviceName: pynomaly-redis-service
  replicas: 1
  selector:
    matchLabels:
      app: pynomaly
      component: redis
  template:
    metadata:
      labels:
        app: pynomaly
        component: redis
        tier: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6379"
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - /usr/local/etc/redis/redis.conf
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "8Gi"
            cpu: "1"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
      - name: redis-config
        configMap:
          name: pynomaly-redis-config
  volumeClaimTemplates: []
---
apiVersion: v1
kind: Service
metadata:
  name: pynomaly-redis-service
  namespace: pynomaly-data-science
  labels:
    app: pynomaly
    component: redis
    tier: cache
spec:
  selector:
    app: pynomaly
    component: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  type: ClusterIP
  clusterIP: None