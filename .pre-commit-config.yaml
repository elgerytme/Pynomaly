# Pre-commit configuration for Pynomaly
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # File Organization and Project Structure
  - repo: local
    hooks:
      - id: file-organization-check
        name: File Organization Validation
        entry: python scripts/validation/validate_structure.py
        language: system
        pass_filenames: false
        stages: [pre-commit]

  # Standard Pre-commit Hooks for File Hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File formatting and cleanup
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]

      # File validation
      - id: check-json
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml

      # Security and conflict checks
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-added-large-files
        args: [--maxkb=5000]

      # Python specific
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements

  # Code Quality and Formatting
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--config=pyproject.toml]

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--settings-path=pyproject.toml]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # Type Checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-redis]
        args: [--config-file=pyproject.toml]
        exclude: |
          (?x)(
            tests/.*|
            environments/.*|
            \.env.*|
            \.venv.*|
            test_env.*|
            venv.*
          )

  # Security Checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: [-r, src/, -f, json, -o, reports/bandit-report.json]
        exclude: tests/

# Configuration
default_install_hook_types: [pre-commit]
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0
