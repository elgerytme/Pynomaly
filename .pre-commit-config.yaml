# Pre-commit configuration for Pynomaly
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # File Organization and Project Structure
  - repo: local
    hooks:
      - id: file-organization-check
        name: File Organization Validation
        entry: python scripts/validation/validate_structure.py
        language: system
        pass_filenames: false
        stages: [pre-commit]
        
      - id: enhanced-validation
        name: Enhanced Validation with Rich Output
        entry: python -m pynomaly.presentation.cli.app validate run --format rich
        language: python
        pass_filenames: false
        always_run: true
        stages: [pre-commit]
        verbose: true

  # Standard Pre-commit Hooks for File Hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File formatting and cleanup
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]

      # File validation
      - id: check-json
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml

      # Security and conflict checks
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-added-large-files
        args: [--maxkb=5000]

      # Python specific
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements

# Configuration
default_install_hook_types: [pre-commit]
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0
