# Pre-commit configuration for Pynomaly
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # File Organization and Repository Structure
  - repo: local
    hooks:
      - id: file-organization-check
        name: File Organization Validation
        entry: python scripts/validate_file_organization.py
        language: python
        files: '.*'
        pass_filenames: false
        stages: [commit]
        verbose: true

      - id: root-directory-protection
        name: Root Directory Protection
        entry: python scripts/protect_root_directory.py
        language: python
        files: '^[^/]+$'  # Only files in root directory
        stages: [commit]
        verbose: true

      - id: stray-file-detection
        name: Stray File Detection
        entry: python scripts/detect_stray_files.py
        language: python
        files: '.*'
        pass_filenames: true
        stages: [commit]

  # Standard Pre-commit Hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # File formatting and cleanup
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
      
      # JSON/YAML validation
      - id: check-json
      - id: check-yaml
        args: [--unsafe]  # Allow custom YAML tags
      - id: check-toml
      
      # Merge conflict detection
      - id: check-merge-conflict
      
      # Large file prevention
      - id: check-added-large-files
        args: [--maxkb=10240]  # 10MB limit
      
      # Security checks
      - id: detect-private-key
      
      # Python specific
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]

  # Python Code Quality
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        args: [--line-length=88]
        language_version: python3

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        additional_dependencies: [flake8-docstrings]

  # Type Checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        args: [--strict, --ignore-missing-imports]
        additional_dependencies: [types-all]
        files: ^src/

  # Security Scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/, -f, json, -o, reports/bandit-report.json]
        files: ^src/

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        files: ^src/

  # Git Best Practices
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.6.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Dependencies Security
  - repo: https://github.com/PyCQA/safety
    rev: 2.3.5
    hooks:
      - id: safety
        args: [--json, --output, reports/safety-report.json]

  # Local File Organization Hooks
  - repo: local
    hooks:
      - id: organize-imports
        name: Organize Python Imports
        entry: python scripts/organize_imports.py
        language: python
        files: \.py$
        stages: [commit]

      - id: validate-directory-structure
        name: Validate Directory Structure
        entry: python scripts/validate_directory_structure.py
        language: python
        files: '.*'
        pass_filenames: false
        stages: [commit]
        verbose: true

      - id: check-file-permissions
        name: Check File Permissions
        entry: python scripts/check_file_permissions.py
        language: python
        files: '\.(py|sh|ps1)$'
        stages: [commit]

      - id: generate-structure-report
        name: Generate Structure Report
        entry: python scripts/generate_structure_report.py
        language: python
        files: '.*'
        pass_filenames: false
        stages: [push]

# Global Configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0