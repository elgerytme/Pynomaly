# Enhanced Coverage configuration for Pynomaly
[run]
source = src/pynomaly
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */environments/*
    */virtualenv/*
    */.venv/*
    */build/*
    */dist/*
    */docs/*
    */examples/*
    */scripts/*
    */.git/*
    */.pytest_cache/*
    */node_modules/*
    */migrations/*
    */alembic/*
    setup.py
    conftest.py
    # Exclude specific files that are hard to test
    */cli.py
    */main.py
    */__main__.py
    # Exclude experimental/prototype code
    */experimental/*
    */prototypes/*

branch = True
parallel = True
concurrency = multiprocessing,thread

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run:
    if 0:
    if False:
    if __name__ == .__main__.:
    
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod
    
    # Don't complain about type checking imports
    if TYPE_CHECKING:
    
    # Don't complain about protocol definitions
    \.\.\.
    
    # Don't complain about platform specific code
    if sys.platform
    pragma: no cover
    
    # Don't complain about deprecation warnings setup
    warnings\.warn
    
ignore_errors = True
skip_covered = False
skip_empty = True
sort = Cover
show_missing = True
precision = 2

[html]
directory = reports/coverage
title = Pynomaly Coverage Report
extra_css = .coveragerc_extra.css
show_contexts = True

[xml]
output = reports/coverage.xml

[json]
output = reports/coverage.json
show_contexts = True
pretty_print = True

# Paths configuration for running in different environments
[paths]
source = 
    src/pynomaly/
    */site-packages/pynomaly/
    */pynomaly/src/pynomaly/