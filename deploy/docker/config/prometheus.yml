# Prometheus configuration for Pynomaly monitoring
# Comprehensive metrics collection from all services

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'pynomaly-production'
    environment: 'production'

rule_files:
  - "alert_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 15s

  # Pynomaly API application metrics
  - job_name: 'pynomaly-api'
    static_configs:
      - targets: ['pynomaly-api:8000']
    metrics_path: /api/metrics
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'
      - source_labels: [__address__]
        target_label: service
        replacement: 'pynomaly-api'

  # Pynomaly worker metrics
  - job_name: 'pynomaly-workers'
    static_configs:
      - targets: 
          - 'pynomaly-worker-training:9090'
          - 'pynomaly-worker-drift:9090'
    metrics_path: /metrics
    scrape_interval: 15s
    relabel_configs:
      - source_labels: [__address__]
        target_label: worker_type
        regex: 'pynomaly-worker-([^:]+):.*'
        replacement: '${1}'

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    metrics_path: /metrics
    scrape_interval: 15s

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: /metrics
    scrape_interval: 30s

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    metrics_path: /metrics
    scrape_interval: 15s

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    metrics_path: /metrics
    scrape_interval: 15s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'container_.*'
        target_label: __name__
        replacement: '${1}'

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    metrics_path: /metrics
    scrape_interval: 15s

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['otel-collector:8889']
    metrics_path: /metrics
    scrape_interval: 15s

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: /metrics
    scrape_interval: 30s

  # Flower (Celery monitoring) metrics
  - job_name: 'flower'
    static_configs:
      - targets: ['pynomaly-flower:5555']
    metrics_path: /metrics
    scrape_interval: 30s

  # Custom application business metrics
  - job_name: 'pynomaly-business-metrics'
    static_configs:
      - targets: ['pynomaly-api:8000']
    metrics_path: /api/metrics/business
    scrape_interval: 60s
    honor_labels: true

  # Model performance metrics
  - job_name: 'pynomaly-model-metrics'
    static_configs:
      - targets: ['pynomaly-api:8000']
    metrics_path: /api/metrics/models
    scrape_interval: 30s
    honor_labels: true

  # Drift detection metrics
  - job_name: 'pynomaly-drift-metrics'
    static_configs:
      - targets: ['pynomaly-api:8000']
    metrics_path: /api/metrics/drift
    scrape_interval: 60s
    honor_labels: true

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true
    min-block-duration: 2h
    max-block-duration: 25h

# Remote write configuration (for external TSDB)
# remote_write:
#   - url: "https://remote-tsdb.example.com/api/v1/write"
#     basic_auth:
#       username: "pynomaly"
#       password: "secret"
#     queue_config:
#       capacity: 10000
#       max_shards: 1000
#       min_shards: 1
#       max_samples_per_send: 1000
#       batch_send_deadline: 5s
#       min_backoff: 30ms
#       max_backoff: 100ms