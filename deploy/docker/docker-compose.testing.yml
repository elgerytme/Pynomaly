version: '3.8'

services:
  # Main testing service with all dependencies
  pynomaly-test:
    build:
      context: .
      dockerfile: Dockerfile.testing
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./test-results:/app/test-results
      - ./coverage-reports:/app/coverage-reports
      - ./pytest.ini:/app/pytest.ini
    environment:
      - PYTHONPATH=/app/src
      - TESTING=true
      - POSTGRES_HOST=postgres-test
      - REDIS_HOST=redis-test
      - POSTGRES_USER=pynomaly_test
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=pynomaly_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      - postgres-test
      - redis-test
    networks:
      - pynomaly-test-network
    command: >
      sh -c "
        echo 'Waiting for dependencies...' &&
        sleep 10 &&
        echo 'Running comprehensive test suite...' &&
        pytest tests/ -v 
          --cov=pynomaly 
          --cov-report=html:/app/coverage-reports 
          --cov-report=term-missing 
          --cov-report=xml:/app/coverage-reports/coverage.xml
          --junit-xml=/app/test-results/junit.xml
          --tb=short
          --maxfail=10
          -x
      "

  # PostgreSQL for database testing
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: pynomaly_test
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: pynomaly_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - pynomaly-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pynomaly_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching testing
  redis-test:
    image: redis:7-alpine
    networks:
      - pynomaly-test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Parallel testing service for faster execution
  pynomaly-test-parallel:
    build:
      context: .
      dockerfile: Dockerfile.testing
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./test-results:/app/test-results
      - ./coverage-reports:/app/coverage-reports
    environment:
      - PYTHONPATH=/app/src
      - TESTING=true
      - POSTGRES_HOST=postgres-test
      - REDIS_HOST=redis-test
      - POSTGRES_USER=pynomaly_test
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=pynomaly_test
      - REDIS_URL=redis://redis-test:6379/0
    depends_on:
      - postgres-test
      - redis-test
    networks:
      - pynomaly-test-network
    command: >
      sh -c "
        echo 'Running parallel test suite...' &&
        pytest tests/ -v 
          --cov=pynomaly 
          --cov-report=html:/app/coverage-reports 
          --cov-report=term-missing
          --cov-report=xml:/app/coverage-reports/coverage.xml
          --junit-xml=/app/test-results/junit.xml
          -n auto
          --tb=short
          --maxfail=5
      "

  # Coverage reporting service
  coverage-report:
    build:
      context: .
      dockerfile: Dockerfile.testing
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./coverage-reports:/app/coverage-reports
    environment:
      - PYTHONPATH=/app/src
    command: >
      sh -c "
        echo 'Generating comprehensive coverage reports...' &&
        coverage combine &&
        coverage report --show-missing &&
        coverage html -d /app/coverage-reports &&
        coverage xml -o /app/coverage-reports/coverage.xml &&
        echo 'Coverage reports generated in coverage-reports/'
      "

volumes:
  postgres_test_data:

networks:
  pynomaly-test-network:
    driver: bridge