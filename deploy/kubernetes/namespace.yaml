# Kubernetes namespace definition for Pynomaly deployment
# Provides isolation and resource management for the entire application stack

apiVersion: v1
kind: Namespace
metadata:
  name: pynomaly
  labels:
    name: pynomaly
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: platform
    app.kubernetes.io/part-of: anomaly-detection
    app.kubernetes.io/managed-by: kubectl
    environment: production
  annotations:
    description: "Pynomaly anomaly detection platform"
    contact: "team@pynomaly.ai"
    documentation: "https://docs.pynomaly.ai"
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: pynomaly-quota
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: quota
spec:
  hard:
    # Compute resource limits
    requests.cpu: "8"
    requests.memory: 16Gi
    limits.cpu: "20"
    limits.memory: 40Gi
    
    # Storage limits
    requests.storage: 100Gi
    persistentvolumeclaims: "10"
    
    # Object count limits
    pods: "50"
    services: "20"
    deployments.apps: "15"
    statefulsets.apps: "5"
    configmaps: "20"
    secrets: "10"
    ingresses.networking.k8s.io: "5"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: pynomaly-limits
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: limits
spec:
  limits:
  - type: Container
    default:
      cpu: "500m"
      memory: "1Gi"
    defaultRequest:
      cpu: "100m"
      memory: "256Mi"
    max:
      cpu: "4"
      memory: "8Gi"
    min:
      cpu: "50m"
      memory: "128Mi"
  - type: PersistentVolumeClaim
    max:
      storage: 50Gi
    min:
      storage: 1Gi
