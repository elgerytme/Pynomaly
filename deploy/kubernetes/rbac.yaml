# Kubernetes RBAC (Role-Based Access Control) for Pynomaly
# Service accounts, roles, and bindings for secure operation

# Service Account for API components
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-api
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
imagePullSecrets:
- name: pynomaly-registry-secret
---
# Service Account for Worker components
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-worker
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
imagePullSecrets:
- name: pynomaly-registry-secret
---
# Service Account for Prometheus
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-prometheus
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: metrics
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
---
# Service Account for Grafana
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-grafana
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: visualization
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
---
# Service Account for OpenTelemetry Collector
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-otel-collector
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
---
# Service Account for Alertmanager
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-alertmanager
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: alerting
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
---
# Service Account for PostgreSQL
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-postgres
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
---
# Service Account for Redis
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pynomaly-redis
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/instance: production
automountServiceAccountToken: true
---
# ClusterRole for Prometheus monitoring
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pynomaly-prometheus
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: metrics
    app.kubernetes.io/instance: production
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
# ClusterRoleBinding for Prometheus
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pynomaly-prometheus
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: metrics
    app.kubernetes.io/instance: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pynomaly-prometheus
subjects:
- kind: ServiceAccount
  name: pynomaly-prometheus
  namespace: pynomaly
---
# Role for API components (namespace-scoped)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pynomaly-api
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: production
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - pods
  - services
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
---
# RoleBinding for API components
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pynomaly-api
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pynomaly-api
subjects:
- kind: ServiceAccount
  name: pynomaly-api
  namespace: pynomaly
---
# Role for Worker components
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pynomaly-worker
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: production
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - pods
  verbs: ["get", "list", "watch"]
---
# RoleBinding for Worker components
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pynomaly-worker
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pynomaly-worker
subjects:
- kind: ServiceAccount
  name: pynomaly-worker
  namespace: pynomaly
---
# Role for OpenTelemetry Collector
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pynomaly-otel-collector
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: production
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - pods
  - services
  - endpoints
  verbs: ["get", "list", "watch"]
---
# RoleBinding for OpenTelemetry Collector
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pynomaly-otel-collector
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/component: telemetry
    app.kubernetes.io/instance: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pynomaly-otel-collector
subjects:
- kind: ServiceAccount
  name: pynomaly-otel-collector
  namespace: pynomaly
---
# PodSecurityPolicy for enhanced security (optional)
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: pynomaly-psp
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: security
    app.kubernetes.io/instance: production
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  volumes:
  - 'configMap'
  - 'emptyDir'
  - 'projected'
  - 'secret'
  - 'downwardAPI'
  - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  runAsGroup:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
    - min: 1
      max: 65535
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
---
# ClusterRole for PodSecurityPolicy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pynomaly-psp
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: security
    app.kubernetes.io/instance: production
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - pynomaly-psp
---
# ClusterRoleBinding for PodSecurityPolicy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pynomaly-psp
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: security
    app.kubernetes.io/instance: production
roleRef:
  kind: ClusterRole
  name: pynomaly-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: pynomaly-api
  namespace: pynomaly
- kind: ServiceAccount
  name: pynomaly-worker
  namespace: pynomaly
- kind: ServiceAccount
  name: pynomaly-prometheus
  namespace: pynomaly
- kind: ServiceAccount
  name: pynomaly-grafana
  namespace: pynomaly
- kind: ServiceAccount
  name: pynomaly-otel-collector
  namespace: pynomaly
- kind: ServiceAccount
  name: pynomaly-alertmanager
  namespace: pynomaly
- kind: ServiceAccount
  name: pynomaly-postgres
  namespace: pynomaly
- kind: ServiceAccount
  name: pynomaly-redis
  namespace: pynomaly
