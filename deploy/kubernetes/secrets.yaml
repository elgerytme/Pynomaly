# Kubernetes Secrets for Pynomaly application
# Contains sensitive configuration data and credentials

apiVersion: v1
kind: Secret
metadata:
  name: pynomaly-secrets
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: secrets
    app.kubernetes.io/instance: production
type: Opaque
stringData:
  # Database configuration
  database-url: "postgresql://pynomaly:REPLACE_WITH_POSTGRES_PASSWORD@pynomaly-postgres-service:5432/pynomaly"
  postgres-password: "REPLACE_WITH_POSTGRES_PASSWORD"
  postgres-exporter-dsn: "postgresql://pynomaly:REPLACE_WITH_POSTGRES_PASSWORD@localhost:5432/pynomaly?sslmode=disable"

  # Redis configuration
  redis-url: "redis://:REPLACE_WITH_REDIS_PASSWORD@pynomaly-redis-service:6379/0"
  redis-password: "REPLACE_WITH_REDIS_PASSWORD"

  # Celery configuration
  celery-broker-url: "redis://:REPLACE_WITH_REDIS_PASSWORD@pynomaly-redis-service:6379/0"
  celery-result-backend: "redis://:REPLACE_WITH_REDIS_PASSWORD@pynomaly-redis-service:6379/0"

  # Application secrets
  jwt-secret-key: "REPLACE_WITH_JWT_SECRET_KEY"
  secret-key: "REPLACE_WITH_APPLICATION_SECRET_KEY"

  # Monitoring credentials
  grafana-admin-user: "admin"
  grafana-admin-password: "REPLACE_WITH_GRAFANA_PASSWORD"
  flower-auth: "admin:REPLACE_WITH_FLOWER_PASSWORD"

  # External service credentials (optional)
  smtp-username: ""
  smtp-password: ""
  slack-webhook-url: ""

  # S3/Storage credentials (optional)
  aws-access-key-id: ""
  aws-secret-access-key: ""
  s3-bucket: ""

  # TLS certificates (if using custom certs)
  tls-cert: ""
  tls-key: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: pynomaly-registry-secret
  namespace: pynomaly
  labels:
    app.kubernetes.io/name: pynomaly
    app.kubernetes.io/component: registry
    app.kubernetes.io/instance: production
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "REPLACE_WITH_GITHUB_USERNAME",
          "password": "REPLACE_WITH_GITHUB_TOKEN",
          "auth": "REPLACE_WITH_BASE64_ENCODED_CREDENTIALS"
        }
      }
    }
---
# Template for TLS secret (uncomment and configure for HTTPS)
# apiVersion: v1
# kind: Secret
# metadata:
#   name: pynomaly-tls
#   namespace: pynomaly
#   labels:
#     app.kubernetes.io/name: pynomaly
#     app.kubernetes.io/component: tls
#     app.kubernetes.io/instance: production
# type: kubernetes.io/tls
# data:
#   tls.crt: LS0tLS1CRUdJTi...  # Base64 encoded certificate
#   tls.key: LS0tLS1CRUdJTi...  # Base64 encoded private key
