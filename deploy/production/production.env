# Production Environment Configuration for Pynomaly API
# Copy this file to .env and customize values for your deployment

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Application Environment
ENVIRONMENT=production
DEBUG=false
TESTING=false

# Application Information
APP_NAME=Pynomaly API
APP_VERSION=2.0.0
APP_DESCRIPTION=Production-grade anomaly detection API

# API Configuration
API_V1_PREFIX=/api/v1
DOCS_ENABLED=true
OPENAPI_URL=/api/v1/openapi.json
DOCS_URL=/api/v1/docs
REDOC_URL=/api/v1/redoc

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server Settings
HOST=0.0.0.0
PORT=8000
WORKERS=4
WORKER_CLASS=uvicorn.workers.UvicornWorker
MAX_REQUESTS=1000
MAX_REQUESTS_JITTER=100
TIMEOUT=120
KEEPALIVE=5

# CORS Configuration
CORS_ORIGINS=["https://api.pynomaly.io", "https://pynomaly.io", "https://app.pynomaly.io"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
CORS_ALLOW_HEADERS=["*"]

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Primary Database (PostgreSQL recommended for production)
DATABASE_URL=postgresql://pynomaly_user:${DATABASE_PASSWORD}@${DATABASE_HOST}:5432/pynomaly_prod
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=pynomaly_prod
DATABASE_USER=pynomaly_user
# DATABASE_PASSWORD=<set-in-secrets>

# Database Pool Settings
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis for Caching and Sessions
REDIS_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
# REDIS_PASSWORD=<set-in-secrets>

# Redis Pool Settings
REDIS_POOL_SIZE=20
REDIS_POOL_TIMEOUT=10
REDIS_SOCKET_TIMEOUT=5

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT Configuration
# JWT_SECRET_KEY=<generate-strong-secret-key>
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=60
JWT_REFRESH_TOKEN_EXPIRE_DAYS=30

# Security Settings
SECRET_KEY=${JWT_SECRET_KEY}
SECURITY_PASSWORD_SALT=${PASSWORD_SALT}
BCRYPT_ROUNDS=12

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST_SIZE=200

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Prometheus Metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_ENDPOINT=/metrics

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_ENDPOINT=/api/v1/health

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_OUTPUT=stdout

# OpenTelemetry (if available)
OTEL_ENABLED=false
OTEL_SERVICE_NAME=pynomaly-api
OTEL_SERVICE_VERSION=2.0.0
# OTEL_EXPORTER_OTLP_ENDPOINT=<your-otel-endpoint>

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# File Storage
STORAGE_BACKEND=s3  # local, s3, gcs, azure
STORAGE_BUCKET_NAME=pynomaly-prod-storage
STORAGE_REGION=us-east-1
# AWS_ACCESS_KEY_ID=<set-in-secrets>
# AWS_SECRET_ACCESS_KEY=<set-in-secrets>

# Local Storage (if using local backend)
LOCAL_STORAGE_PATH=/app/storage
UPLOAD_MAX_SIZE_MB=100
ALLOWED_UPLOAD_EXTENSIONS=["csv", "json", "parquet"]

# =============================================================================
# ML/AI CONFIGURATION
# =============================================================================

# Model Storage
MODEL_STORAGE_BACKEND=s3
MODEL_BUCKET_NAME=pynomaly-models-prod
MODEL_CACHE_SIZE=1000
MODEL_CACHE_TTL=3600

# AutoML Settings
AUTOML_MAX_OPTIMIZATION_TIME=7200  # 2 hours
AUTOML_MAX_TRIALS=500
AUTOML_PARALLEL_JOBS=4

# Streaming Configuration
STREAMING_ENABLED=true
STREAMING_MAX_CONNECTIONS=1000
STREAMING_BUFFER_SIZE=10000
STREAMING_BATCH_SIZE=100

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

# Caching
CACHE_ENABLED=true
CACHE_DEFAULT_TTL=3600
CACHE_MAX_SIZE=1000000  # 1M entries

# Background Tasks
CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:6379/1
CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:6379/1
CELERY_WORKERS=4

# Memory Management
MAX_MEMORY_USAGE_MB=4096
MEMORY_MONITORING_ENABLED=true

# =============================================================================
# THIRD-PARTY INTEGRATIONS
# =============================================================================

# External API Keys (set in secrets)
# OPENAI_API_KEY=<set-in-secrets>
# HUGGINGFACE_API_KEY=<set-in-secrets>

# Notification Services
EMAIL_ENABLED=false
# SMTP_HOST=<your-smtp-host>
# SMTP_PORT=587
# SMTP_USER=<set-in-secrets>
# SMTP_PASSWORD=<set-in-secrets>

# Webhook Configuration
WEBHOOK_ENABLED=true
WEBHOOK_TIMEOUT=30
WEBHOOK_RETRIES=3

# =============================================================================
# DEPLOYMENT METADATA
# =============================================================================

# Deployment Information
DEPLOYMENT_ENV=production
DEPLOYMENT_REGION=us-east-1
DEPLOYMENT_VERSION=2.0.0
DEPLOYMENT_TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

# Container Information
CONTAINER_NAME=pynomaly-api
CONTAINER_TAG=2.0.0-production
CONTAINER_REGISTRY=pynomaly/api

# Kubernetes Configuration
K8S_NAMESPACE=pynomaly-prod
K8S_CLUSTER=pynomaly-production
K8S_REPLICAS=3
K8S_RESOURCE_REQUESTS_CPU=500m
K8S_RESOURCE_REQUESTS_MEMORY=1Gi
K8S_RESOURCE_LIMITS_CPU=2000m
K8S_RESOURCE_LIMITS_MEMORY=4Gi

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# API Features
FEATURE_AUTOML_ENABLED=true
FEATURE_STREAMING_ENABLED=true
FEATURE_ENSEMBLE_ENABLED=true
FEATURE_EXPLAINABILITY_ENABLED=true
FEATURE_AUTONOMOUS_ENABLED=true

# Advanced Features
FEATURE_DISTRIBUTED_PROCESSING=false
FEATURE_GPU_ACCELERATION=false
FEATURE_QUANTUM_ALGORITHMS=false

# Experimental Features
FEATURE_ENHANCED_AUTOML=false
FEATURE_FEDERATED_LEARNING=false
FEATURE_EDGE_DEPLOYMENT=false

# =============================================================================
# SECURITY & COMPLIANCE
# =============================================================================

# Compliance Settings
GDPR_COMPLIANCE=true
SOC2_COMPLIANCE=true
DATA_RETENTION_DAYS=90

# Audit Logging
AUDIT_LOGGING_ENABLED=true
AUDIT_LOG_RETENTION_DAYS=365

# Encryption
ENCRYPTION_AT_REST=true
ENCRYPTION_IN_TRANSIT=true
# ENCRYPTION_KEY=<set-in-secrets>

# =============================================================================
# NOTES
# =============================================================================

# 1. Replace all <set-in-secrets> values with actual secret values
# 2. Use environment-specific secret management (K8s secrets, AWS Secrets Manager, etc.)
# 3. Validate all endpoints and dependencies before production deployment
# 4. Monitor resource usage and adjust limits as needed
# 5. Set up proper backup and disaster recovery procedures
# 6. Configure alerting for critical metrics and failures
# 7. Review and update security configurations regularly